{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./wwwroot/assets/js/catfish.editFieldForm.js"],"names":["Vue","use","Vuelidate","document","getElementById","piranha","editFieldForm","el","components","draggable","quillEditor","data","itemId","finishedGET","getString","getFieldDefs","names","descriptions","fields","fields_type","id","modelType","dropdowns","fieldTypes","text","value","rightColumnOptions","fileTypes","tmpTextfieldTemplate","tmpTextAreaTemplate","tmpRadioTemplate","tmpCheckboxTemplate","tmpDropdownTemplate","tmpFileAttachmentTemplate","tmpDisplayFieldTemplate","saveStatus","saveSuccessfulLabel","saveFailedLabel","saveFieldFormButtonLabel","validations","required","Values","$values","$each","Value","requiredIf","fieldModel","ModelType","textModel","Name","methods","checkValidity","event","preventDefault","$v","$invalid","console","log","saveFieldForm","validateState","name","indexOrGuid","attribute","$dirty","$error","validateFieldState","fieldIndex","secondIndex","touchNestedItem","isNaN","$touch","onDropdownChange","$type","sortItem","collapsingSections","getElementsByClassName","shownSectionIndex","previousSection","nextSection","i","length","classList","contains","from","to","tmpId","newIndex","split","$","collapse","isCollapsed","oldIndex","prevId","nextId","cloneItem","newItem","JSON","parse","stringify","uuidv1","$set","Id","showDescription","hasOtherOption","checkAllFileTypes","field","indexOf","index","splice","checkCheckboxState","checked","toggleDropdown","fieldId","lastDropdownIdOpened","Object","keys","dropdownId","addNewOption","isDisabled","push","addOtherOption","removeOption","itemValue","optionIndex","deleteField","addDescription","removeDescription","load","Promise","resolve","reject","permissions","fetch","baseUrl","then","fdResponse","json","fieldDefsResult","defaultFieldIndex","Selected","response","result","Description","Fields","error","created","window","location","href","substring","lastIndexOf","ready","popover","on","test"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./wwwroot/assets/js/catfish.editFieldForm.js\",\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import draggable from 'vuedraggable';\r\n//import 'quill/dist/quill.core.css'\r\n//import 'quill/dist/quill.snow.css'\r\n//import 'quill/dist/quill.bubble.css'\r\n\r\nimport { quillEditor } from 'vue-quill-editor'\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nimport { required, requiredIf } from 'vuelidate/lib/validators'\r\nimport Vuelidate from 'vuelidate'\r\nVue.use(Vuelidate)\r\n\r\n/**\r\n * Javascript Vue code for creating the editable form from existing data in FieldContainerEdit.cshtml.\r\n * It is modelled after the file piranha.pagelist.js in Piranha's source code.\r\n */\r\n\r\n\r\n/**\r\n * This check makes sure the file is only run on the page with\r\n * the element. Not a huge deal, can be removed if it's causing issues.\r\n */\r\nif (document.getElementById(\"edit-field-form-page\")) {\r\n    piranha.editFieldForm = new Vue({\r\n        el: '#edit-field-form-page',\r\n        components: {\r\n            draggable,\r\n            quillEditor\r\n        },\r\n        data() {\r\n            return {\r\n                itemId: null,\r\n                finishedGET: false,\r\n\r\n                //api strings\r\n                getString: \"manager/api/forms/\",\r\n                //this one is for the default templates\r\n                getFieldDefs: \"manager/api/forms/fielddefs\",\r\n                //postString: \"manager/items/save\",\r\n\r\n                names: null,\r\n                descriptions: null,\r\n                fields: null,\r\n                fields_type: null,\r\n                id: null,\r\n                modelType: null,\r\n\r\n                dropdowns: {},\r\n                //temp, need to call an api for these\r\n                fieldTypes: [\r\n                    { text: 'Select One', value: null },\r\n                    {\r\n                        value: 0,\r\n                        text: 'Short Answer',\r\n                        modelType: 'TextField'\r\n                    },\r\n                    {\r\n                        value: 1,\r\n                        text: 'Long Answer',\r\n                        modelType: 'TextArea'\r\n                    },\r\n                    {\r\n                        value: 2,\r\n                        text: 'Multiple Choice',\r\n                        modelType: 'Radio'\r\n                    },\r\n                    {\r\n                        value: 3,\r\n                        text: 'Check Box',\r\n                        modelType: 'Checkbox'\r\n                    },\r\n                    {\r\n                        value: 4,\r\n                        text: 'Dropdown List',\r\n                        modelType: 'Dropdown'\r\n                    },\r\n                    {\r\n                        value: 5,\r\n                        text: 'File Upload',\r\n                        modelType: 'FileAttachment'\r\n                    },\r\n                    {\r\n                        value: 6,\r\n                        text: 'Display Text',\r\n                        modelType: 'DisplayField'\r\n                    }\r\n                ],\r\n\r\n                rightColumnOptions: [\r\n                    {\r\n                        value: 0,\r\n                        text: \"Add Question\"\r\n                    },\r\n                    {\r\n                        value: 1,\r\n                        text: \"Add Section (TBA)\"\r\n                    }\r\n                ],\r\n\r\n                //will be sent through API, temp\r\n                fileTypes: [\r\n                    \"PDF\", \"DOC\", \"DOCX\", \"PS\", \"EPS\", \"JPG\", \"PNG\"\r\n                ],\r\n\r\n                //temp until templates sent\r\n                tmpTextfieldTemplate: null,\r\n                tmpTextAreaTemplate: null,\r\n                tmpRadioTemplate: null,\r\n                tmpCheckboxTemplate: null,\r\n                tmpDropdownTemplate: null,\r\n                tmpFileAttachmentTemplate: null,\r\n                tmpDisplayFieldTemplate: null,\r\n\r\n                saveStatus: 0,\r\n                //TODO: make a file of constant strings\r\n                saveSuccessfulLabel: \"Save Successful\",\r\n                saveFailedLabel: \"Failed to Save\",\r\n                saveFieldFormButtonLabel: \"Save\",\r\n            }\r\n        },\r\n        validations: {\r\n            names: {\r\n                required,\r\n                    Values: {\r\n                        $values: {\r\n                            $each: {\r\n                                Value: {\r\n                                    required,\r\n                                }\r\n                            }\r\n                        }\r\n\t\t\t\t    }\r\n            },\r\n            descriptions: {\r\n                Values: {\r\n                    $values: {\r\n                        $each: {\r\n                            Value: {\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            fields: {\r\n                $each: {\r\n                    Values: {\r\n                        //currently the display text option can be submitted regardless of any text or not\r\n                        //it errors on reading an array instead of an empty string on creation, need different place to store it\r\n\r\n                        //all start with this value at Array(0)\r\n                        required: requiredIf(function (fieldModel) {\r\n                            return (fieldModel.ModelType ==\r\n                                'Catfish.Core.Models.Contents.Fields.Radio, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n                                || fieldModel.ModelType ==\r\n                                'Catfish.Core.Models.Contents.Fields.Checkbox, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n                                || fieldModel.ModelType ==\r\n                                'Catfish.Core.Models.Contents.Fields.Dropdown, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n                                || fieldModel.ModelType ==\r\n                                'Catfish.Core.Models.Contents.Fields.FileAttachment, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n                            )\r\n                        }), \r\n                        $values: {\r\n                            //only need the object for radio/checkbox/dropdown's inner content\r\n                            $each: {\r\n                                text: {\r\n                                    required: requiredIf(function (textModel) {\r\n                                        //this might not work with api update, hoping to store mc/radio/dropdown in different section from file attachment\r\n                                        return (typeof (textModel) == 'object');\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    Name: {\r\n                        Values: {\r\n                            $values: {\r\n                                $each: {\r\n                                    Value: {\r\n                                        required\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n\r\n            /**\r\n\t\t\t * Checks all the inputs to make sure the data is valid\r\n\t\t\t * @returns true is valid, false is invalid.\r\n\t\t\t **/\r\n            checkValidity(event) {\r\n                event.preventDefault();\r\n\r\n                if (this.$v.$invalid) {\r\n                    console.log(\"something is invalid\", this.$v);\r\n                } else {\r\n                    console.log(\"all good!\");\r\n                    this.saveFieldForm(event);\r\n\t\t\t\t}\r\n\r\n            },\r\n\r\n            /**\r\n\t\t\t * Checks that the value matches its requirements from Vuelidate\r\n\t\t\t  * (ie required, is a string, etc)\r\n\t\t\t * @param name the name of the v-model binded to.\r\n\t\t\t */\r\n            validateState(name, indexOrGuid = null, attribute = null) {\r\n                if (indexOrGuid != null) {\r\n                    //this is a $each situation - array\r\n                    const { $dirty, $invalid } = this.$v[name][attribute].$values.$each[indexOrGuid].Value;\r\n                    return $dirty ? !$invalid : null;\r\n                } else {\r\n                    const { $dirty, $error } = this.$v[name];\r\n                    return $dirty ? !$error : null;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * TODO: work this one and above into a generic function\r\n             * This one is for fields only, very hardcody bc it has so many embedded attributes\r\n             * @param {any} fieldIndex\r\n             * @param {any} name\r\n             * @param {any} secondIndex\r\n             */\r\n            validateFieldState(fieldIndex, name, secondIndex = null) {\r\n                if (secondIndex == null) {\r\n                    const { $dirty, $invalid } = this.$v.fields.$each[fieldIndex][name];\r\n                    return $dirty ? !$invalid : null;\r\n                } else {\r\n                    const { $dirty, $invalid } = this.$v.fields.$each[fieldIndex][name].Values.$values.$each[secondIndex].Value;\r\n                    return $dirty ? !$invalid : null;\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\r\n            /**\r\n\t\t\t * Touches nested items from Vuex so validation works properly.\r\n\t\t\t */\r\n            touchNestedItem(name, indexOrGuid = null, attribute = null, event = null) {\r\n                if (indexOrGuid != null) {\r\n                    if (isNaN(indexOrGuid)) {\r\n                        this.$v[name][indexOrGuid][attribute].$touch();\r\n                    } else {\r\n                        this.$v[name][attribute].$values.$each[indexOrGuid].Value.$touch();\r\n                    }\r\n\r\n                }\r\n            },\r\n\r\n\r\n            /**\r\n             * Saves the field form\r\n             * @param {any} event\r\n             */\r\n            saveFieldForm(event) {\r\n                //console.log(\"saving goes here\", event);\r\n\r\n                console.log(\"the name, description, and fields saved TBA\", this.names, this.descriptions, this.fields);\r\n            },\r\n\r\n            /**\r\n             * Changes the type of field via choice from the dropdown\r\n             * @param {any} fieldIndex the fieldIndex being changed\r\n             * @param {any} event the index value of the dropdown\r\n             */\r\n            onDropdownChange(fieldIndex, event) {\r\n                console.log(\"fieldIndex\", fieldIndex);\r\n                //cant change $type directly... could work something with the templates?\r\n                //dont want to lose any values that are not originally a part of the template tho...\r\n                switch (event) {\r\n                    case 0:\r\n                        //textfield\r\n                        this.fields[fieldIndex].$type = 'Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core';\r\n                        this.fields[fieldIndex].ModelType = 'Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null';\r\n                        break;\r\n                    case 1:\r\n                        //textarea\r\n                        this.fields[fieldIndex].$type = 'Catfish.Core.Models.Contents.Fields.TextArea, Catfish.Core';\r\n                        this.fields[fieldIndex].ModelType = 'Catfish.Core.Models.Contents.Fields.TextArea, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null';\r\n                        break;\r\n                    case 2:\r\n                        //radio/mc\r\n                        this.fields[fieldIndex].$type = 'Catfish.Core.Models.Contents.Fields.Radio, Catfish.Core';\r\n                        this.fields[fieldIndex].ModelType = 'Catfish.Core.Models.Contents.Fields.Radio, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null';\r\n                        break;\r\n                    case 3:\r\n                        //checkbox\r\n                        this.fields[fieldIndex].$type = 'Catfish.Core.Models.Contents.Fields.Checkbox, Catfish.Core';\r\n                        this.fields[fieldIndex].ModelType = 'Catfish.Core.Models.Contents.Fields.Checkbox, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null';\r\n                        break;\r\n                    case 4:\r\n                        //dropdown\r\n                        this.fields[fieldIndex].$type = 'Catfish.Core.Models.Contents.Fields.Dropdown, Catfish.Core';\r\n                        this.fields[fieldIndex].ModelType = 'Catfish.Core.Models.Contents.Fields.Dropdown, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null';\r\n                        break;\r\n                    case 5:\r\n                        //fileattachment\r\n                        this.fields[fieldIndex].$type = 'Catfish.Core.Models.Contents.Fields.FileAttachment, Catfish.Core';\r\n                        this.fields[fieldIndex].ModelType = 'Catfish.Core.Models.Contents.Fields.FileAttachment, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null';\r\n                        break;\r\n                    case 6:\r\n                        //displayfield\r\n                        this.fields[fieldIndex].$type = 'Catfish.Core.Models.Contents.Fields.DisplayField, Catfish.Core';\r\n                        this.fields[fieldIndex].ModelType = 'Catfish.Core.Models.Contents.Fields.DisplayField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null';\r\n                        break;\r\n\t\t\t\t}\r\n            },\r\n\r\n\r\n            /*test(fieldId) { //detects the 'show' after transition is complete so this will never work...also only runs once unless computed. computed doesnt allow for parameter except if a setter\r\n                if (document.getElementById('collapse-' + fieldId) == null) {\r\n                    return 'fas fa-chevron-right';\r\n                } else if (document.getElementById('collapse-' + fieldId).classList.contains('show')) {\r\n                    console.log(\"item has show:\", document.getElementById('collapse-' + fieldId).classList);\r\n                    return 'fas fa-chevron-right';\r\n                } else {\r\n                    console.log(\"item does not have show:\", document.getElementById('collapse-' + fieldId).classList);\r\n                    return 'fas fa-chevron-down';\r\n                }\r\n            },*/\r\n\r\n            /**\r\n             * Fire when any item sorted/moved (includes adding new item to list)\r\n             * @param {any} event\r\n             */\r\n            sortItem(event) {\r\n                let collapsingSections = document.getElementsByClassName('collapsing-items');\r\n                console.log(\"event on sort:\", event);\r\n                let shownSectionIndex = null;\r\n                let previousSection = null;\r\n                let nextSection = null;\r\n\r\n                //track sections above and below current open item\r\n                for (let i = 0; i < collapsingSections.length; i++) {\r\n                    if (collapsingSections[i].classList.contains('show')) {\r\n                        shownSectionIndex = i;\r\n                        previousSection = (i - 1 >= 0) ? collapsingSections[i - 1] : null;\r\n                        nextSection = (i + 1 < collapsingSections.length) ? collapsingSections[i + 1] : null;\r\n\t\t\t\t\t}\r\n                }\r\n\r\n                //if all items closed and not adding something new, just return\r\n                if (shownSectionIndex == null && previousSection == null && nextSection == null\r\n                    && event.from.id == event.to.id) {\r\n                    return;\r\n\t\t\t\t}\r\n\r\n                //the field id of the sorted section\r\n                let tmpId = collapsingSections[event.newIndex].id.split('collapse-')[1];\r\n\r\n                //if item is new, open that one\r\n                if (event.from.id != event.to.id) {\r\n                    console.log(\"added new item\", collapsingSections[event.newIndex].id);\r\n                    $('#' + collapsingSections[event.newIndex].id).collapse('show');\r\n                    this.dropdowns[tmpId].isCollapsed = false;\r\n                    if (shownSectionIndex != null) {\r\n                        this.dropdowns[tmpId].isCollapsed = true;\r\n\t\t\t\t\t}\r\n                    return;\r\n                }\r\n\r\n                //if the user is dragging the showing item around\r\n                if (shownSectionIndex == event.oldIndex) {\r\n                    console.log(\"dragging showing item\");\r\n                    $('#' + collapsingSections[event.newIndex].id).collapse('show');\r\n                    this.dropdowns[tmpId].isCollapsed = false;\r\n                    if (shownSectionIndex != null) {\r\n                        this.dropdowns[tmpId].isCollapsed = true;\r\n\t\t\t\t\t}\r\n                    return;\r\n\t\t\t\t}\r\n\r\n                //move show class to the index below open item\r\n                if (event.oldIndex <= shownSectionIndex && shownSectionIndex <= event.newIndex) {\r\n\r\n                    //test suppressing animation - not sure if it will work, cant \r\n                    //remove .collapsing bc it's not applied until the collapse call is made\r\n                    //previousSection.addClass('suppress-collapsing-animation');\r\n                    //$('#' + previousSection.id).css({ \"transition\": \"none\", \"display\": \"none\"}); doesnt work, must override\r\n\r\n                    console.log(\"moved item DOWN over shown\");\r\n                    $('#' + previousSection.id).collapse('show');\r\n                    let prevId = previousSection.id.split('collapse-')[1];\r\n                    this.dropdowns[prevId].isCollapsed = false;\r\n\r\n                    //move item above open item\r\n                } else if (event.oldIndex >= shownSectionIndex && shownSectionIndex >= event.newIndex) {\r\n                    console.log(\"moved item UP over shown\");\r\n                    $('#' + nextSection.id).collapse('show');\r\n                    let nextId = nextSection.id.split('collapse-')[1];\r\n                    this.dropdowns[nextId].isCollapsed = false;\r\n                } else {\r\n                    //just sorting, does not interfere with the open item\r\n                    return;\r\n\t\t\t\t}\r\n\r\n                this.dropdowns[tmpId].isCollapsed = true;\r\n\t\t\t},\r\n\r\n\r\n            /**\r\n             * Returns a custom clone\r\n             * @param event\r\n             */\r\n            cloneItem(event) {\r\n                let newItem = {};\r\n\r\n                //hardcoded until templates are provided\r\n                newItem = JSON.parse(JSON.stringify(this.tmpTextfieldTemplate)); //event.Template\r\n                \r\n                newItem.id = uuidv1();\r\n                this.$set(this.dropdowns, newItem.Id, {\r\n                    isCollapsed: false,\r\n                    showDescription: false,\r\n                    hasOtherOption: false\r\n                });\r\n                //newItem.Guid = uuidv1();\r\n                console.log(newItem);\r\n\r\n                return newItem;\r\n            },\r\n\r\n            /**\r\n             * Checks all options - ie user has checked 'Any' option in File Upload.\r\n             * If all already checked, uncheck them all\r\n             * @param {any} field\r\n             */\r\n            checkAllFileTypes(field) {\r\n                if (field.Values.$values.indexOf(\"any\") > -1) {\r\n                    let index = field.Values.$values.indexOf(\"any\");\r\n                    field.Values.$values.splice(index, 1);\r\n\t\t\t\t}\r\n\r\n                if (field.Values.$values.length == this.fileTypes.length) {\r\n                    //uncheck all\r\n                    field.Values.$values = [];\r\n                } else {\r\n                    //check all\r\n                    field.Values.$values = [];\r\n                    field.Values.$values = this.fileTypes;\r\n\t\t\t\t}\r\n\r\n            },\r\n\r\n            /**\r\n             * Checks if the checkboxes are all checked and will check 'any',\r\n             * or if 'any' is checked and the user unchecks a checkbox, uncheck 'any'\r\n             * @param {any} field\r\n             */\r\n            checkCheckboxState(field, fieldIndex) {\r\n                if (field.Values.$values.length == this.fileTypes.length) {\r\n                    //check the 'any' box\r\n                    document.getElementById(\"filetype-checkbox-\" + fieldIndex + \"-\" + \"any\").checked = true;\r\n                } else {\r\n                    //uncheck the 'any' box\r\n                    document.getElementById(\"filetype-checkbox-\" + fieldIndex + \"-\" + \"any\").checked = false;\r\n\t\t\t\t}\r\n            },\r\n\r\n            /**\r\n             * Toggles the field to either open or closed.\r\n             * Icon for showing open/closed relies on open/closed state,\r\n             * hence the necessity for this function.\r\n             * \r\n             * @param {any} fieldId the field's index to open/close\r\n             */\r\n            toggleDropdown(fieldId) {\r\n                let lastDropdownIdOpened = '';\r\n                for (let dropdownId of Object.keys(this.dropdowns)) {\r\n                    if (this.dropdowns[dropdownId].isCollapsed == false) {\r\n                        lastDropdownIdOpened = dropdownId;\r\n\t\t\t\t\t}\r\n                }\r\n\r\n                if (fieldId != lastDropdownIdOpened && lastDropdownIdOpened != '') {\r\n                    //close dropdown that is not the same one previously opened\r\n                    this.dropdowns[lastDropdownIdOpened].isCollapsed = true;\r\n\t\t\t\t}\r\n\r\n                this.dropdowns[fieldId].isCollapsed === true ? this.dropdowns[fieldId].isCollapsed = false : this.dropdowns[fieldId].isCollapsed = true;\r\n            },\r\n\r\n            /**\r\n             * Adds new option to either multiple choice or checkbox\r\n             * @param {any} field the field to push multiple choice or checkbox objects onto\r\n             */\r\n            addNewOption(field) {\r\n                //if theres a disabled other option, push into index before it\r\n                //the disabled item will always be the last item\r\n                if (field.Values.$values.length > 0) {\r\n                    if (field.Values.$values[field.Values.$values.length - 1].isDisabled) {\r\n                        field.Values.$values.splice(field.Values.$values.length - 1, 0, {\r\n                            text: '',\r\n                            isDisabled: false,\r\n                            id: -1,\r\n                        });\r\n                        return;\r\n                    }\r\n                    \r\n\t\t\t\t}\r\n                 \r\n                field.Values.$values.push({\r\n                    text: '',\r\n                    isDisabled: false,\r\n                    id: -1,\r\n                });\r\n\t\t\t\t\r\n\r\n\r\n                /*switch (field.$type) {\r\n                    case 'Catfish.Core.Models.Contents.Fields.Radio, Catfish.Core':\r\n                        //hardcoded for now, use template provided item instead\r\n                        this.tmpRadioTemplate.values.push( {\r\n                            text: '',\r\n                            id: -1,\r\n                        } );\r\n                        break;\r\n                    case 'Catfish.Core.Models.Contents.Fields.Checkbox, Catfish.Core':\r\n                        //hardcoded for now, use template provided item instead\r\n                        this.tmpCheckboxTemplate.values.push({\r\n                            text: '',\r\n                            id: -1,\r\n                        });\r\n                        break;\r\n\t\t\t\t}*/\r\n            },\r\n\r\n            /**\r\n             * Adds 'Other' option to set for user to fill\r\n             * @param {any} field\r\n             */\r\n            addOtherOption(field) {\r\n                field.Values.$values.push({\r\n                    text: 'Other...',\r\n                    isDisabled: true,\r\n                    id: -1,\r\n                });\r\n                this.dropdowns[field.Id].hasOtherOption = true;\r\n            },\r\n\r\n            /**\r\n             * Removes an option item\r\n             * @param {any} fieldIndex\r\n             * @param {any} optionIndex\r\n             */\r\n            removeOption(field, fieldIndex, itemValue, optionIndex) {\r\n                if (itemValue.isDisabled) {\r\n                    this.dropdowns[field.Id].hasOtherOption = false;\r\n\t\t\t\t}\r\n                this.fields[fieldIndex].Values.$values.splice(optionIndex, 1);\r\n            },\r\n\r\n            /**\r\n             * Deletes a given field\r\n             * @param {any} fieldIndex\r\n             */\r\n            deleteField(fieldIndex) {\r\n                this.fields.splice(fieldIndex, 1);\r\n                delete this.dropdowns[fieldIndex];\r\n            },\r\n\r\n            /**\r\n             * Adds the description field to the field.\r\n             * @param {any} fieldId\r\n             */\r\n            addDescription(fieldId) {\r\n                this.dropdowns[fieldId].showDescription = true;\r\n            },\r\n\r\n            /**\r\n             * Removes the description field from the field.\r\n             * Not sure if this should delete the info in it, if any.\r\n             * CURRENTLY it does not.\r\n             * @param {any} fieldId\r\n             */\r\n            removeDescription(fieldId) {\r\n                this.dropdowns[fieldId].showDescription = false;\r\n            },\r\n\r\n            /**\r\n              * Fetches and loads the data from an API call\r\n              * */\r\n            load() {\r\n                //var self = this;\r\n                return new Promise((resolve, reject) => {\r\n                    piranha.permissions.load(() => {\r\n                        fetch(piranha.baseUrl + this.getFieldDefs)\r\n                            .then((fdResponse) => { return fdResponse.json(); })\r\n                            .then((fieldDefsResult) => {\r\n                                //templates handled here\r\n                                console.log(\"second res\", fieldDefsResult)\r\n                                for (let defaultFieldIndex in fieldDefsResult.$values) {\r\n                                    switch (defaultFieldIndex) {\r\n                                        case '0':\r\n                                            this.tmpTextfieldTemplate = fieldDefsResult.$values[defaultFieldIndex];\r\n                                            this.tmpTextfieldTemplate.Selected = 0;\r\n                                            break;\r\n                                        case '1':\r\n                                            this.tmpTextAreaTemplate = fieldDefsResult.$values[defaultFieldIndex];\r\n                                            this.tmpTextAreaTemplate.Selected = 1;\r\n                                            break;\r\n                                        //the rest still need to be added from the backend\r\n                                    }\r\n                                    \r\n                                }\r\n\r\n                                //temp set other values that i dont have sample data for\r\n                                //guessing for what will be needed, adjust when dummy data given\r\n                                //this.tmpTextAreaTemplate = JSON.parse(JSON.stringify(this.tmpTextfieldTemplate));\r\n                                //this.tmpTextAreaTemplate.$type = 'Catfish.Core.Models.Contents.Fields.TextArea, Catfish.Core';\r\n\r\n                                this.tmpRadioTemplate = JSON.parse(JSON.stringify(this.tmpTextfieldTemplate));\r\n                                this.tmpRadioTemplate.$type = 'Catfish.Core.Models.Contents.Fields.Radio, Catfish.Core';\r\n                                //not sure if this would be right, will likely need to adjust this\r\n                                this.tmpRadioTemplate.Values.$values = [];\r\n\r\n                                this.tmpCheckboxTemplate = JSON.parse(JSON.stringify(this.tmpTextfieldTemplate));\r\n                                this.tmpCheckboxTemplate.$type = 'Catfish.Core.Models.Contents.Fields.Checkbox, Catfish.Core';\r\n                                //not sure if this would be right, will likely need to adjust this\r\n                                this.tmpCheckboxTemplate.Values.$values = [];\r\n\r\n                                this.tmpDropdownTemplate = JSON.parse(JSON.stringify(this.tmpTextfieldTemplate));\r\n                                this.tmpDropdownTemplate.$type = 'Catfish.Core.Models.Contents.Fields.Dropdown, Catfish.Core';\r\n                                //not sure if this would be right, will likely need to adjust this\r\n                                this.tmpDropdownTemplate.Values.$values = [];\r\n\r\n                                this.tmpFileAttachmentTemplate = JSON.parse(JSON.stringify(this.tmpTextfieldTemplate));\r\n                                this.tmpFileAttachmentTemplate.$type = 'Catfish.Core.Models.Contents.Fields.FileAttachment, Catfish.Core';\r\n                                this.tmpFileAttachmentTemplate.Values.$values = [];\r\n\r\n                                this.tmpDisplayFieldTemplate = JSON.parse(JSON.stringify(this.tmpTextfieldTemplate));\r\n                                this.tmpDisplayFieldTemplate.$type = 'Catfish.Core.Models.Contents.Fields.DisplayField, Catfish.Core';\r\n                                this.tmpDisplayFieldTemplate.Values.$values = \"\";\r\n\r\n                            })\r\n                            .then(() => {\r\n                                return fetch(piranha.baseUrl + this.getString + this.itemId);\r\n                            })\r\n                            .then((response) => { return response.json(); })\r\n                            .then((result) => {\r\n                                //data for this form handled here\r\n\r\n                                this.names = result.Name;\r\n                                this.descriptions = result.Description;\r\n                                this.fields = result.Fields.$values;\r\n                                this.fields_type = result.Fields.$type;\r\n                                this.id = result.Id;\r\n                                this.modelType = result.ModelType;\r\n\r\n                                this.finishedGET = true;\r\n                                //this.collections = result.collections;\r\n                                //this.updateBindings = true;\r\n                                console.log(result);\r\n\r\n                                for (let field of this.fields) {\r\n                                    this.$set(this.dropdowns, field.Id, {\r\n                                        isCollapsed: true,\r\n                                        showDescription: false,\r\n                                        hasOtherOption: false\r\n                                    });\r\n                                }\r\n\r\n                                //temporary until templates sent, remove afterwards\r\n                                //Selected needs to be sent still as an attribute\r\n                                for (let field of result.Fields.$values) {\r\n                                    switch (field.$type) {\r\n                                        case 'Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core':\r\n                                            field.Selected = 0;\r\n                                            break;\r\n                                        case 'Catfish.Core.Models.Contents.Fields.TextArea, Catfish.Core':\r\n                                            field.Selected = 1;\r\n                                            break;\r\n                                        case 'Catfish.Core.Models.Contents.Fields.Radio, Catfish.Core':\r\n                                            field.Selected = 2;\r\n                                            break;\r\n                                        case 'Catfish.Core.Models.Contents.Fields.Checkbox, Catfish.Core':\r\n                                            field.Selected = 3;\r\n                                            break;\r\n                                        case 'Catfish.Core.Models.Contents.Fields.Dropdown, Catfish.Core':\r\n                                            field.Selected = 4;\r\n                                            break;\r\n                                        case 'Catfish.Core.Models.Contents.Fields.FileAttachment, Catfish.Core':\r\n                                            field.Selected = 5;\r\n                                            break;\r\n                                        case 'Catfish.Core.Models.Contents.Fields.DisplayText, Catfish.Core':\r\n                                            field.Selected = 6;\r\n                                            break;\r\n                                    }\r\n                                }\r\n\r\n                                \r\n\r\n                                resolve();\r\n\r\n                            })\r\n                            .catch(function (error) { console.log(\"error:\", error); });\r\n                    });\r\n\r\n                });\r\n                \r\n            },\r\n        },\r\n        created() {\r\n            this.itemId = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);\r\n            this.load()\r\n                .then(() => {\r\n                    //for popovers\r\n                    $(document).ready(function () {\r\n                        $('[data-toggle=\"popover\"]').popover();\r\n                    });\r\n\r\n                    //for the accordion, if one panel is triggered to open, close any others\r\n                    $('#accordion').on('show.bs.collapse', function () {\r\n                        console.log(\"called to hide\");\r\n                        let test = $('#accordion .show').length;\r\n                        console.log(test);\r\n                        $('#accordion .show').collapse('hide');\r\n                    });\r\n                });\r\n        }\r\n    });\r\n}"],"sourceRoot":""}