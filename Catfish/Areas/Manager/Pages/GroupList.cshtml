@page "~/manager/groups"
@model Catfish.Areas.Manager.Pages.GroupListModel
@inject Piranha.Manager.ManagerLocalizer Localizer
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewBag.Title = Localizer.Page["Groups"];
    ViewBag.MenuItem = "Groups";
}

@section script
{
    <script src="@Url.Content(Piranha.Manager.Editor.EditorScripts.MainScriptUrl)"></script>
    <script src="@Url.Content(Piranha.Manager.Editor.EditorScripts.EditorScriptUrl)"></script>
    <script src="~/manager/assets/js/piranha.contentedit.min.js"></script>
    <script src="~/manager/assets/js/piranha.siteedit.min.js"></script>
}

<div id="entityTypelist">
    <div class="top">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">@Localizer.Menu["Settings"]</li>
                <li class="breadcrumb-item active" aria-current="page">@Localizer.Menu["Groups"]</li>
            </ol>
        </nav>
        <div class="container-fluid">
            <div class="top-nav">
                @if ((await AuthorizationService.AuthorizeAsync(User, Catfish.Areas.Manager.Access.CatfishPermission.GroupsAdd)).Succeeded)
                //await Auth.AuthorizeAsync(User, Piranha.Manager.Permission.SitesAdd)).Succeeded
                {

                    <a href="@Url.Action("GroupEdit", "manager", new {id = Guid.NewGuid()})" class="btn btn-labeled btn-primary pull-right">
                        <i class="fas fa-plus"></i>@Localizer.General["Add"]
                    </a>
                }
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <table class="table table-borderless">
        <thead>
            <tr>
                <th>@Localizer.General["Group Name"]</th>

                <th class="actions one"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var group in Model.Groups)
            {
                <tr>
                    <td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, Catfish.Areas.Manager.Access.CatfishPermission.GroupsEdit)).Succeeded)
                        {
                            <a href="@Url.Action("GroupEdit", "manager", new {id = group.Id})"> @group.Name</a>
                        }
                        else
                        {
                            <span class="title">@group.Name</span>
                        }
                    </td>
                    <td class="actions one">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Catfish.Areas.Manager.Access.CatfishPermission.GroupsDelete)).Succeeded)
                        {
                            <a class="danger" href="@Url.Action("Delete", new { id = group.Id })">
                                <span class="fas fa-trash"></span>
                            </a>
                        }
                        </td>
                </tr>
            }
        </tbody>
    </table>
</div>