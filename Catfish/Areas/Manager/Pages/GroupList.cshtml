@page "~/manager/groups"
@model Catfish.Areas.Manager.Pages.GroupListModel
@inject Piranha.Manager.ManagerLocalizer Localizer
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject  Catfish.Core.Services.IGroupService GroupService
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewBag.Title = Localizer.Page["Groups"];
    ViewBag.MenuItem = "Groups";
}

@section script
{
    <script src="@Url.Content(Piranha.Manager.Editor.EditorScripts.MainScriptUrl)"></script>
    <script src="@Url.Content(Piranha.Manager.Editor.EditorScripts.EditorScriptUrl)"></script>
    <script src="~/manager/assets/js/piranha.contentedit.min.js"></script>
    <script src="~/manager/assets/js/piranha.siteedit.min.js"></script>
}

<div id="entityTypelist">
    <div class="top">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">@Localizer.Menu["Settings"]</li>
                <li class="breadcrumb-item active" aria-current="page">@Localizer.Menu["Groups"]</li>
            </ol>
        </nav>
        <div class="container-fluid">
            <div class="top-nav">
                @if ((await AuthorizationService.AuthorizeAsync(User, Catfish.Areas.Manager.Access.GroupSecurity.Add)).Succeeded)
                {

                    <a href="edit" class="btn btn-labeled btn-primary pull-right">
                        <i class="fas fa-plus"></i>@Localizer.General["Add"]
                    </a>
                }
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <table class="table table-borderless">
        <thead>
            <tr>
                <th>@Localizer.General["Group Name"]</th>

                <th class="actions one"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var group in Model.Groups)
            {
                <tr>
                    <td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, Catfish.Areas.Manager.Access.GroupSecurity.Edit)).Succeeded)
                        {
                            <a href="@string.Format("edit/{0}", group.Id)"> @group.Name</a>
                        }
                        else
                        {
                            <span class="title">@group.Name</span>
                        }
                    </td>
                    <td class="actions one">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Catfish.Areas.Manager.Access.GroupSecurity.Delete)).Succeeded)
                        {
                            if (!GroupService.CheckUserGroupRole(group.Id))
                            {
                                <a class="danger" onclick="return false;" href="#" data-toggle="modal" data-target="#userModal" data-content="@group.Id" onclick="addUser('@group.Id', '@group.Name'); return false;">
                                    <span class="fas fa-trash"></span>
                                </a>
                            }
                            <!-- Modal -->
                            <form method="post">
                                <div id="userModal" class="modal fade" role="dialog">
                                    <div class="modal-dialog">

                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-body">
                                                <div class="card-body">
                                                    <div class="form-group">
                                                        <input type="hidden" name="GroupId" id="GroupId" value="" />
                                                        <h4>Do you Really want to delete</h4>
                                                        <input type="text" name="GroupName" id="GroupName" value="" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                <button id="deleteConfirm" type="submit" class="btn btn-danger">Delete</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    function addUser(id, name) {
        $(".modal-body #GroupId").val(id);
        $(".modal-body #GroupName").val(name);
        // As pointed out in comments,
        // it is unnecessary to have to manually call the modal.
        // $('#addBookDialog').modal('show');

    }
</script>