@model Catfish.Areas.Manager.Pages.FieldContainerPageModel
@inject Piranha.Manager.ManagerLocalizer Localizer
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div id="edit-field-form-page">
    <div class="top">
        <div class="container-fluid top">
            <div class="left-nav-container">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">@Localizer.Menu["Templates"]</li>
                        <li class="breadcrumb-item">@Localizer.Menu[Model.ModelLabel]</li>
                        <li class="breadcrumb-item">@Localizer.Menu["Edit"]</li>
                        <li class="breadcrumb-item active" aria-current="page">@Localizer.Menu[Model.Model.Id.ToString()]</li>
                    </ol>
                </nav>
            </div>

            <div class="container-fluid collection-button-holder">
                <div class="top-nav">
                    @foreach (var action in Catfish.Areas.Manager.Actions.Toolbars.SaveFieldForm)
                    {
                        <partial name="@action.ActionView" />
                    }
                </div>
            </div>
        </div>
    </div>

    @{ var url = Model.ApiRoot + Model.Model.Id.ToString();}
    <a href="@url" target="_blank">See JSON Object</a>

    <form id="field-container-edit-form" class="form-container" v-if="finishedGET">
        <div class="form-group flex-full">
            <div class="section-container">
                <label for="form-title"><h3>Title</h3></label>
                <div v-for="(name, titleIndex) of names.values" class="form-group">
                    <input type="text" class="form-title form-control" 
                    v-model.trim="$v.names.values.$each[titleIndex].value.$model"
                    :id="'form-title-' + titleIndex" placeholder="Title Your Form Here" 
                    @@input="touchNestedItem('names', titleIndex, 'values')"
                    :state="validateState('names', titleIndex, 'values')"
                    :class="{ 'is-invalid': $v.names.values.$each[titleIndex].value.$error }"/> 
                    <!--showing validity not working as id expect, so manually controlling it with class binding ^
                    :class="{ 'is-invalid': $v.names.values.$each[titleIndex].value.$error,
                    'is-valid': !$v.names.values.$each[titleIndex].value.$error}" -->
                </div>
            </div>

            <div class="section-container">
                <label for="form-description"><h3>Description</h3></label>
                <div v-for="(description, descriptionIndex) of descriptions.values" class="form-group">
                    <textarea type="text" class="form-description form-control" 
                    :id="'form-description-' + descriptionIndex" placeholder="Description goes here" 
                    state="validateState('descriptions', descriptionIndex, 'values')"
                    @@input="touchNestedItem('descriptions', descriptionIndex, 'values')"
                    :class="{ 'red-color': $v.descriptions.values.$each[descriptionIndex].value.$error }">
                    {{description.value}}
                    </textarea>
                </div>
            </div>

            <div class="section-container">
                <h3>Fields</h3>
                <div class="container" style="display:flex; flex-direction:row;">
                    <draggable  @@sort="sortItem" class="flex-full col-10" id="accordion" v-model="fields" group="sharedItems" handle=".handle-drag">
                        <div v-for="(field, fieldIndex) of fields" class="card field-card-width" :key='fieldIndex'>
                        <!-- Editable fields -->
                            <div style="display:flex;">

                                <div class="handle-drag draggable">
                                    <i class="fas fa-grip-vertical"></i>
                                </div>

                                <div class="field-card-contents">
                                    <div class="sitemap-item card-header">
                                        <a v-on:click="toggleDropdown(field.id)" class="handle-holder" :data-target="'#collapse-' + field.id " data-toggle="collapse" >
                                            <div class="handle">
                                                <i :class="{ 'fas fa-chevron-down': !dropdowns[field.id].isCollapsed, 'fas fa-chevron-right': dropdowns[field.id].isCollapsed}"></i>
                                            </div>
                                            <div v-if="field.$type" class="title-header">
                                                <div v-if="field.name.values[0].value.length == 0">
                                                    <h2><i>Field Title</i></h2>
                                                </div>
                                                <h2 v-else>{{field.name.values[0].value}}</h2>
                                                 <!--Remove the hardcodiness of this when api data is used
                                                {{fields}}-->
                                                <h5 v-if="field.$type == 'Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core' ">Short Answer</h5>
                                                <h5 v-if="field.$type == 'Catfish.Core.Models.Contents.Fields.TextArea, Catfish.Core' ">Long Answer</h5>
                                                <h5 v-if="field.$type == 'Catfish.Core.Models.Contents.Fields.Radio, Catfish.Core' ">Multiple Choice</h5>
                                                <h5 v-if="field.$type == 'Catfish.Core.Models.Contents.Fields.Checkbox, Catfish.Core' ">Checkbox</h5>
                                                <h5 v-if="field.$type == 'Catfish.Core.Models.Contents.Fields.Dropdown, Catfish.Core' ">Dropdown</h5>
                                                <h5 v-if="field.$type == 'Catfish.Core.Models.Contents.Fields.FileAttachment, Catfish.Core' ">File Upload</h5>
                                                <h5 v-if="field.$type == 'Catfish.Core.Models.Contents.Fields.DisplayField, Catfish.Core' ">Display Text</h5>
                                            </div>
                                            <div v-else class="title-header">
                                                <h5>Default Item - Fix Me</h5>
                                            </div>
                                        </a>
                                    
                                        <div class="header-tools-holder">
                                            <div style="padding-right: 10px; width: 100%;" class="form-group field-dropdown" :id="'fieldset-' + fieldIndex" :label-for="'field-dropdown-' + fieldIndex">
			                                    <select class="form-control" :id="'field-dropdown-' + fieldIndex" v-model="field.selected" v-on:change="onDropdownChange(fieldIndex, field.selected)">
                                                    <option :disabled="fieldType.value==null" v-for="fieldType of fieldTypes" :value="fieldType.value">{{fieldType.text}}</option>
                                                </select>
                                            </div>
                                        
                                            <button type="button" class="btn btn-danger" v-on:click="deleteField(fieldIndex)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    
                                    </div>

                                    <div :id="'collapse-' + field.id " data-parent="#accordion" class="collapse collapsing-items">
                                        <div class="card-header" style="text-transform:none;padding-bottom: 0;">
                                            <h4>
                                                Field Title
                                            </h4>
                            
                                            @*<button type="button" class="btn btn-secondary rounded" data-toggle="popover"
                                                data-content="This is the title of the question you want to ask.">
                                                <i class="fas fa-info"></i>
                                            </button>*@
                                        </div>


                                        <ul v-for="(nameValue, nameIndex) of field.name.values" class="list-group list-group-flush">
                                            <li class="list-group-item input-group flex-li">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text" :id="'language' + nameValue.language">{{nameValue.language}}</span>
                                                </div> 
                                                <input type="text" class="field-input form-control" v-model="nameValue.value" 
                                                :id="'field-title-' + fieldIndex + '-' + nameValue" 
                                                placeholder="Title Your Field Here" :state="validateFieldState(fieldIndex, 'name', nameIndex)"
                                                :class="{ 'is-invalid': $v.fields.$each[fieldIndex].name.values.$each[nameIndex].value.$invalid }"
                                                /> <!-- 
                                                @@input="$v.fields.$each[fieldIndex].name.values.$each[nameIndex].value.$touch()" -->
                                            </li>
                                        </ul>

                                        <div v-if="dropdowns[field.id].showDescription">
                                            <div class="card-header" style="text-transform:none;padding-bottom: 0;">
                                                <h4>
                                                    Description
                                                </h4>
                                                
                                                @*<button type="button" class="btn btn-secondary rounded" data-toggle="popover"
                                                    data-content="This should provide more detail about what you want to ask. Optional.">
                                                    <i class="fas fa-info"></i>
                                                </button>*@
                                            </div>
                                            <ul class="list-group list-group-flush" v-for="descriptionValue of field.description.values">
                                                <li class="list-group-item input-group" style="display:flex;">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text" :id="'language' + descriptionValue.language">{{descriptionValue.language}}</span>
                                                    </div>
                                                    <textarea type="text" class="field-input form-control" 
                                                        :id="'field-description-' + fieldIndex + '-' + descriptionValue" 
                                                        placeholder="Describe the purpose of this field..."
                                                        v-model="descriptionValue.value">
                                                    </textarea>
                                                </li>
                                            </ul>
                                        </div>


                                        <div class="card-footer field-bottom">
                                            <div class="form-check" style="padding-right:10px; display: flex; flex-direction: row-reverse; align-items: flex-end;">
                                                <input class="form-check-input" type="checkbox" v-model="field.required" 
                                                :id="'required-checkbox-' + fieldIndex">
                                                <label class="form-check-label" :for="'required-checkbox-' + fieldIndex">
                                                    <h6 style="margin-bottom:0;"><b>Required</b></h6>
                                                </label>
                                            </div>

                                            <div toggle-class="text-decoration-none" class="dropdown">
                                                <button class="btn btn-secondary" type="button" :id="'ellipsis-button-' + fieldIndex" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="fas fa-ellipsis-h"></i>
                                                </button>
                                                <div class="dropdown-menu" :aria-labelledby="'ellipsis-button-' + fieldIndex">
                                                    <a class="dropdown-item" v-if="!dropdowns[field.id].showDescription" href="javascript:void(0)" v-on:click="addDescription(field.id)">Add Description</a>
                                                    <a class="dropdown-item" v-if="dropdowns[field.id].showDescription" href="javascript:void(0)" v-on:click="removeDescription(field.id)">Remove Description</a>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                    
                            </div>

                        </div>
                    </draggable>

                    <draggable :clone="cloneItem" v-model="rightColumnOptions" :group="{ name: 'sharedItems', pull: 'clone', put: false }" class="col-2 fieldtypes-holder">
                        <div v-for="option of rightColumnOptions" class="card fieldtype-draggable">
                            <div class="card-header" style="text-transform:none;">{{option.text}}</div>
                        </div>
                    </draggable>
                </div>
            </div>
        </div>
    </form>
    <div v-else>
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    </div>

</div>