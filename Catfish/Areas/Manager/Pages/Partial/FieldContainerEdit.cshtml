@model Catfish.Areas.Manager.Pages.FieldContainerPageModel
@inject Piranha.Manager.ManagerLocalizer Localizer
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div id="edit-field-form-page">
    <div class="top">
        <div class="container-fluid top">
            <div class="left-nav-container">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">@Localizer.Menu["Templates"]</li>
                        <li class="breadcrumb-item">@Localizer.Menu[Model.ModelLabel]</li>
                        <li class="breadcrumb-item">@Localizer.Menu["Edit"]</li>
                        <li class="breadcrumb-item active" aria-current="page">@Localizer.Menu[Model.Model.Id.ToString()]</li>
                    </ol>
                </nav>
            </div>

            <div class="container-fluid collection-button-holder">
                <div class="top-nav">
                    @foreach (var action in Catfish.Areas.Manager.Actions.Toolbars.SaveFieldForm)
                    {
                        <partial name="@action.ActionView" />
                    }
                </div>
            </div>
        </div>
    </div>

    @{ var url = Model.ApiRoot + Model.Model.Id.ToString();}
    <a href="@url" target="_blank">See JSON Object</a>

    <form id="field-container-edit-form" class="form-container" v-if="finishedGET">
        <div class="form-group flex-full">
            <div class="section-container">
                <label for="form-title"><h3>Title</h3></label>
                <div v-for="(name, titleIndex) of names.Values.$values" class="form-group">
                    <input type="text" class="form-title form-control" 
                    v-model.trim="$v.names.Values.$values.$each[titleIndex].Value.$model"
                    :id="'form-title-' + titleIndex" placeholder="Title Your Form Here" 
                    @@input="touchNestedItem('names', titleIndex, 'Values')"
                    :state="validateState('names', titleIndex, 'Values')"
                    :class="{ 'is-invalid': $v.names.Values.$values.$each[titleIndex].Value.$error }"/> 
                    <!--showing validity not working as id expect, so manually controlling it with class binding ^
                    :class="{ 'is-invalid': $v.names.values.$each[titleIndex].value.$error,
                    'is-valid': !$v.names.values.$each[titleIndex].value.$error}" -->
                </div>
            </div>

            <div class="section-container">
                <label for="form-description"><h3>Description</h3></label>
                <div v-for="(description, descriptionIndex) of descriptions.Values.$values" class="form-group">
                    <textarea type="text" class="form-description form-control" 
                    :id="'form-description-' + descriptionIndex" placeholder="Description goes here" 
                    state="validateState('descriptions', descriptionIndex, 'Values')"
                    @@input="touchNestedItem('descriptions', descriptionIndex, 'Values')"
                    :class="{ 'red-color': $v.descriptions.Values.$values.$each[descriptionIndex].Value.$error }">
                    {{description.Value}}
                    </textarea>
                </div>
            </div>

            <div class="section-container">
                <h3>Fields</h3>
                <div class="container" style="display:flex; flex-direction:row;">
                    <draggable  @@sort="sortItem" class="flex-full col-10" id="accordion" v-model="fields" group="sharedItems" handle=".handle-drag">
                        <div v-for="(field, fieldIndex) of fields" class="card field-card-width" :key='fieldIndex'>
                        <!-- Editable fields -->
                            <div style="display:flex;">

                                <div class="handle-drag draggable">
                                    <i class="fas fa-grip-vertical"></i>
                                </div>

                                <div class="field-card-contents">
                                    <div class="sitemap-item card-header">
                                        <a v-on:click="toggleDropdown(field.Id)" class="handle-holder" :data-target="'#collapse-' + field.Id " data-toggle="collapse" >
                                            <div class="handle">
                                                <i :class="{ 'fas fa-chevron-down': !dropdowns[field.Id].isCollapsed, 'fas fa-chevron-right': dropdowns[field.Id].isCollapsed}"></i>
                                            </div>
                                            <div v-if="field.$type" class="title-header">
                                                <div v-if="field.Name.Values.$values[0].Value.length == 0">
                                                    <h2><i>Field Title</i></h2>
                                                </div>
                                                <h2 v-else>{{field.Name.Values.$values[0].Value}}</h2>
                                                 
                                                <h5>{{field.DisplayLabel}}</h5>
                                            </div>
                                            <div v-else class="title-header">
                                                <h5>Default Item - Fix Me</h5>
                                            </div>
                                        </a>
                                    
                                        <div class="header-tools-holder">
                                            <div style="padding-right: 10px; width: 100%;" class="form-group field-dropdown" :id="'fieldset-' + fieldIndex" :label-for="'field-dropdown-' + fieldIndex">
			                                    <select class="form-control" :id="'field-dropdown-' + fieldIndex" v-model="field.$type" v-on:change="onDropdownChange(fieldIndex, field.$type)">
                                                    <option :disabled="fieldType.value==null" v-for="fieldType of fieldTypes" :value="fieldType.value">{{fieldType.text}}</option>
                                                </select>
                                            </div>
                                        
                                            <button type="button" class="btn btn-danger" v-on:click="deleteField(fieldIndex)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    
                                    </div>

                                    <div :id="'collapse-' + field.Id " data-parent="#accordion" class="collapse collapsing-items">
                                        <div class="card-header" style="text-transform:none;padding-bottom: 0;">
                                            <h4>
                                                Field Title
                                            </h4>
                            
                                            @*<button type="button" class="btn btn-secondary rounded" data-toggle="popover"
                                                data-content="This is the title of the question you want to ask.">
                                                <i class="fas fa-info"></i>
                                            </button>*@
                                        </div>


                                        <ul class="list-group list-group-flush" style="border-bottom:solid grey 1px;">
                                            <li v-for="(nameValue, nameIndex) of field.Name.Values.$values" class="list-group-item input-group flex-li" style="border:none;">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text" :id="'language' + nameValue.Language">{{nameValue.Language}}</span>
                                                </div> 
                                                <input type="text" class="field-input form-control" v-model="nameValue.Value" 
                                                :id="'field-title-' + fieldIndex + '-' + nameValue.Language" 
                                                placeholder="Title Your Field Here" :state="validateFieldState(fieldIndex, 'Name', nameIndex)"
                                                :class="{ 'is-invalid': $v.fields.$each[fieldIndex].Name.Values.$values.$each[nameIndex].Value.$invalid }"
                                                />
                                                <!-- @@input="$v.fields.$each[fieldIndex].name.values.$each[nameIndex].value.$touch()" -->
                                            </li>
                                        </ul>

                                        <div v-if="dropdowns[field.Id].showDescription">
                                            <div class="card-header" style="text-transform:none;padding-bottom: 0;">
                                                <h4>
                                                    Description
                                                </h4>
                                                
                                                @*<button type="button" class="btn btn-secondary rounded" data-toggle="popover"
                                                    data-content="This should provide more detail about what you want to ask. Optional.">
                                                    <i class="fas fa-info"></i>
                                                </button>*@
                                            </div>
                                            <ul class="list-group list-group-flush" style="border-bottom:solid grey 1px;">
                                                <li v-for="descriptionValue of field.Description.Values.$values" class="list-group-item input-group" style="display:flex; border:none;">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text" :id="'language' + descriptionValue.Language">{{descriptionValue.Language}}</span>
                                                    </div>
                                                    <textarea type="text" class="field-input form-control" 
                                                        :id="'field-description-' + fieldIndex + '-' + descriptionValue.Language" 
                                                        placeholder="Describe the purpose of this field..."
                                                        v-model="descriptionValue.Value">
                                                    </textarea>
                                                </li>
                                            </ul>
                                        </div>

                                        <div v-if="(field.$type != TEXTFIELD_TYPE)" >
                                            <div class="card-header" style="text-transform:none;">
                                                <h4>
                                                    Settings
                                                </h4>
                                                <div style="padding: .75rem 0rem;">
                                                     @*Long Answer*@
                                                    <div v-if="field.$type == TEXTAREA_TYPE ">
                                                        <div class="richtext-checkbox">
                                                            <input class="form-check-input" type="checkbox" v-model="field.isRichTextArea" :value="field.isRichTextArea"
                                                            :id="'richtext-checkbox-' + fieldIndex">
                                                            <label class="form-check-label" :for="'richtext-checkbox-' + fieldIndex">
                                                                <h6 style="margin-bottom:0;">Allow formatted text</h6>
                                                            </label>
                                                        </div>
                                                        
                                                    </div>
                                                     @*Radio aka Multiple Choice*@ 
                                                    <div v-if="field.$type == RADIO_TYPE ">
                                                        <hr v-if="field.Options.$values.length > 0" />
                                                        <div v-for="(radioValueCollection, radioVCIndex) of field.Options.$values">
                                                            <div class="option-title-holder">
                                                                <h5>Option {{radioVCIndex + 1}}:</h5>
                                                                <button class="btn btn-danger" 
                                                                    v-on:click="removeOption(fieldIndex, radioVCIndex)" 
                                                                    type="button">
                                                                    <i class="fas fa-minus"></i>
                                                                </button>
                                                            </div>
                                                            <div class="input-group mb-3" v-for="(radioOption, radioIndex) of radioValueCollection.OptionText.Values.$values">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text">{{radioOption.Language}}</span>
                                                                    <span class="input-group-text">
                                                                        <input disabled :id="'radio-' + radioVCIndex + '-' + radioIndex" :name="'radio-field-' + fieldIndex" type="radio" aria-label="Radio button for following text input">
                                                                    </span>
                                                                </div>
                                                                <input type="text" class="form-control" aria-label="Text input with radio button and remove button" 
                                                                    v-model="radioOption.Value" :state="validateFieldState(fieldIndex, 'Values')"
                                                                    :class="{ 'is-invalid': $v.fields.$each[fieldIndex].Options.$values.$each[radioVCIndex].OptionText.Values.$values.$each[radioIndex].Value.$invalid }"
                                                                    > 
                                                                    <!--  
                                                                    @@input="$v.fields.$each[fieldIndex].values.$touch()" -->
                                                            </div>
                                                            <div class="additional-options-holder">
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="radio" name="add-default-option" 
                                                                        :id="'add-default-option-' + fieldIndex + '-' + radioVCIndex" 
                                                                        v-model="radioValueCollection.Selected" value="true"
                                                                        v-on:click="selectOptionAsDefault(fieldIndex, radioVCIndex)">
                                                                    <label class="form-check-label" style="font-weight:normal;" 
                                                                        :for="'add-default-option-' + fieldIndex + '-' + radioVCIndex">
                                                                        Set as Default Option {{radioValueCollection.Selected}}
                                                                    </label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="checkbox" :id="'additional-input-' + fieldIndex + '-' + radioVCIndex" value="false">
                                                                    <label class="form-check-label" style="font-weight:normal;" for="'additional-input-' + fieldIndex + '-' + radioVCIndex">
                                                                        Requires Additional Input
                                                                    </label>
                                                                </div>
                                                            </div>
                                                            <div v-if="field.Options.$values.length > 0" style="width:100%;">
                                                                <hr />
                                                            </div>
                                                        </div>
                                                        <div class="add-button-holder">
                                                            <button v-on:click="addNewOption(field)" :id="'add-item-button-' + fieldIndex" type="button" class="btn btn-success">
                                                                <i class="fas fa-plus"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                     @*Checkbox*@ 
                                                    <div v-else-if="field.$type == CHECKBOX_TYPE ">
                                                        <hr v-if="field.Options.$values.length > 0" />
                                                        <div v-for="(checkValueCollection, checkVCIndex) of field.Options.$values" class="input-group mb-3">
                                                            <div class="option-title-holder">
                                                                <h5>Option {{checkVCIndex + 1}}:</h5>
                                                                <button class="btn btn-danger" 
                                                                    v-on:click="removeOption(fieldIndex, checkVCIndex)" 
                                                                    type="button">
                                                                    <i class="fas fa-minus"></i>
                                                                </button>
                                                            </div>
                                                            <div class="input-group mb-3" v-for="(checkOption, checkIndex) of checkValueCollection.OptionText.Values.$values">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text">{{checkOption.Language}}</span>
                                                                    <span class="input-group-text">
                                                                        <input :id="'checkbox-' + checkVCIndex + '-' + checkIndex" disabled :name="'check-field-' + fieldIndex" 
                                                                            type="checkbox" aria-label="Checkbox for following text input">
                                                                    </span>
                                                                </div>
                                                                <input type="text" class="form-control" aria-label="Text input with checkbox and remove button" 
                                                                    v-model="checkOption.Value" :state="validateFieldState(fieldIndex, 'Values')"
                                                                    :class="{ 'is-invalid': $v.fields.$each[fieldIndex].Options.$values.$each[checkVCIndex].OptionText.Values.$values.$each[checkIndex].Value.$invalid }">
                                                            </div>
                                                            <div class="additional-options-holder">
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="radio" name="add-default-option" 
                                                                        :id="'add-default-option-' + fieldIndex + '-' + checkVCIndex" value="false">
                                                                    <label class="form-check-label" style="font-weight:normal;" :for="'add-default-option-' + fieldIndex + '-' + checkVCIndex">
                                                                        Set as Default Option
                                                                    </label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="checkbox" :id="'additional-input-' + fieldIndex + '-' + checkVCIndex" value="false">
                                                                    <label class="form-check-label" style="font-weight:normal;" for="'additional-input-' + fieldIndex + '-' + checkVCIndex">
                                                                        Requires Additional Input
                                                                    </label>
                                                                </div>
                                                            </div>
                                                            <div v-if="field.Options.$values.length > 0" style="width:100%;">
                                                                <hr />
                                                            </div>
                                                        </div>
                                                        <div class="add-button-holder">
                                                            <button v-on:click="addNewOption(field)" :id="'add-item-button-' + fieldIndex" type="button" class="btn btn-success">
                                                                <i class="fas fa-plus"></i>
                                                            </button>
                                                        </div>                                               
                                                    </div>
                                                     @*Dropdown*@ 
                                                    <div v-else-if="field.$type == DROPDOWN_TYPE ">
                                                        <hr v-if="field.Options.$values.length > 0" />
                                                        <div v-for="(dropdownValueCollection, dropdownVCIndex) of field.Options.$values" class="input-group mb-3">
                                                            <div class="option-title-holder">
                                                                <h5>Option {{dropdownVCIndex + 1}}:</h5>
                                                                <button class="btn btn-danger" 
                                                                    v-on:click="removeOption(fieldIndex, dropdownVCIndex)" 
                                                                    type="button">
                                                                    <i class="fas fa-minus"></i>
                                                                </button>
                                                            </div>
                                                            <div class="input-group mb-3" v-for="(dropdownOption, dropdownIndex) of dropdownValueCollection.OptionText.Values.$values">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text">{{dropdownOption.Language}}</span>
                                                                </div>
                                                                <input type="text" class="form-control" aria-label="Text input with remove button" 
                                                                    v-model="dropdownOption.Value" :state="validateFieldState(fieldIndex, 'Values')"
                                                                    :class="{ 'is-invalid': $v.fields.$each[fieldIndex].Options.$values.$each[dropdownVCIndex].OptionText.Values.$values.$each[dropdownIndex].Value.$invalid }">
                                                            </div>
                                                            <div class="additional-options-holder">
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="radio" name="add-default-option" 
                                                                        :id="'add-default-option-' + fieldIndex + '-' + dropdownVCIndex" value="false">
                                                                    <label class="form-check-label" style="font-weight:normal;" :for="'add-default-option-' + dropdownVCIndex">
                                                                        Set as Default Option
                                                                    </label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="checkbox" :id="'additional-input-' + dropdownVCIndex" value="false">
                                                                    <label class="form-check-label" style="font-weight:normal;" for="'additional-input-' + fieldIndex + '-' + dropdownVCIndex">
                                                                        Requires Additional Input
                                                                    </label>
                                                                </div>
                                                            </div>
                                                            <div v-if="field.Options.$values.length > 0" style="width:100%;">
                                                                <hr />
                                                            </div>
                                                        </div>
                                                        <div class="add-button-holder">
                                                            <button v-on:click="addNewOption(field)" type="button" class="btn btn-success rounded">
                                                                <i class="fas fa-plus"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                     @*File attachment*@ 
                                                    <div v-else-if="field.$type == 'Catfish.Core.Models.Contents.Fields.FileAttachment, Catfish.Core' "
                                                        >
                                                        <div class="filetype-checkbox-holder" :class="{ 'red-color': $v.fields.$each[fieldIndex].Values.$values.$invalid }">
                                                            <div class="filetype-checkbox">
                                                                <input class="form-check-input" type="checkbox" v-model="field.Values.$values" value="any"
                                                                :id="'filetype-checkbox-' + fieldIndex + '-' + 'any'" v-on:change="checkAllFileTypes(field)" >
                                                                <label class="form-check-label" :for="'filetype-checkbox-' + fieldIndex + '-' + 'any'">
                                                                    <h6 style="margin-bottom:0;">Any</h6>
                                                                </label>
                                                            </div>
                                                            <div class="filetype-checkbox" v-for="(fileType, fileTypeIndex) of fileTypes">
                                                                <input class="form-check-input" type="checkbox" v-model="field.Values.$values" :value="fileType"
                                                                :id="'filetype-checkbox-' + fieldIndex + '-' + fileTypeIndex" v-on:change="checkCheckboxState(field, fieldIndex)" >
                                                                <label class="form-check-label" :for="'filetype-checkbox-' + fieldIndex + '-' + fileTypeIndex">
                                                                    <h6 style="margin-bottom:0;">{{fileType}}</h6>
                                                                </label>
                                                            </div>
                                                        </div>
                                                        @*{{$v.fields.$each[fieldIndex].Values.$values}}*@

                                                        <hr />

                                                        <div class="filetype-checkbox">
                                                            <input class="form-check-input" type="checkbox" v-model="field.allowMultipleFiles" :value="field.allowMultipleFiles"
                                                            :id="'multifile-checkbox-' + fieldIndex">
                                                            <label class="form-check-label" :for="'multifile-checkbox-' + fieldIndex">
                                                                <h6 style="margin-bottom:0;">Allow multiple files</h6>
                                                            </label>
                                                        </div>
                                                        <!--<div class="file-attachment-box">
                                                            <button disabled class="btn btn-outline-secondary">Upload Your Files Here</button>
                                                        </div>-->
                                                    </div>
                                                    @*Display text*@ 
                                                    <div v-else-if="field.$type == INFOSECTION_TYPE ">
                                                        {{$v.fields.$each[fieldIndex].Values.$values}}
                                                        <quill-editor rows="3" :ref="'richtext' + fieldIndex" v-model="$v.fields.$each[fieldIndex].Values.$values"
                                                            :state="validateFieldState(fieldIndex, 'Values')"
                                                            :class="{ 'red-color': $v.fields.$each[fieldIndex].Values.$values.$invalid }">
                                                        </quill-editor>
                                                    </div>
                                                
                                                </div>
                                            </div>

                                        </div>

                                        <div class="card-footer field-bottom">
                                            <div class="form-check" style="padding-right:10px; display: flex; flex-direction: row-reverse; align-items: flex-end;">
                                                <input class="form-check-input" type="checkbox" v-model="field.Required" 
                                                :id="'required-checkbox-' + fieldIndex">
                                                <label class="form-check-label" :for="'required-checkbox-' + fieldIndex">
                                                    <h6 style="margin-bottom:0;"><b>Required</b></h6>
                                                </label>
                                            </div>

                                            <div toggle-class="text-decoration-none" class="dropdown">
                                                <button class="btn btn-secondary" type="button" :id="'ellipsis-button-' + fieldIndex" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="fas fa-ellipsis-h"></i>
                                                </button>
                                                <div class="dropdown-menu" :aria-labelledby="'ellipsis-button-' + fieldIndex">
                                                    <a class="dropdown-item" v-if="!dropdowns[field.Id].showDescription" href="javascript:void(0)" v-on:click="addDescription(field.Id)">Add Description</a>
                                                    <a class="dropdown-item" v-if="dropdowns[field.Id].showDescription" href="javascript:void(0)" v-on:click="removeDescription(field.Id)">Remove Description</a>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                    
                            </div>

                        </div>
                    </draggable>

                    <draggable :clone="cloneItem" v-model="rightColumnOptions" :group="{ name: 'sharedItems', pull: 'clone', put: false }" class="col-2 fieldtypes-holder">
                        <div v-for="option of rightColumnOptions" class="card fieldtype-draggable">
                            <div class="card-header" style="text-transform:none;">{{option.text}}</div>
                        </div>
                    </draggable>
                </div>
            </div>
        </div>
    </form>
    <div v-else>
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    </div>

</div>