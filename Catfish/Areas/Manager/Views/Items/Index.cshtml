@model IQueryable<Catfish.Core.Models.CFEntity>



@{ ViewBag.Title = "Items"; }

@section Toolbar {
    @Html.Partial("Partial/IndexToolbar")
}

@*@Html.Partial("Partial/ObjectList", Model, new ViewDataDictionary() { { "showDeleteButton", true }, { "downloadAction", "DownloadFormData" } })*@

<div class="grid_12">

    <div id="collections"></div>

</div>
<script>
    var EntityTypes = @Html.Raw(ViewBag.EntityTypes);
    //hide checkboxes
    var modelType="CFItem";
    var controller="items";
    $(function() {
       $("input[type='checkbox']").hide();
    });
</script>
<script src="~/Scripts/dist/collectionsView.js"></script>
<style>
    .action-buttons > button {
        margin-right: 15px;
    }
</style>

@*@{ ViewBag.Title = "Items";
    int totalItems = ViewBag.TotalItems != null ? Convert.ToInt32(ViewBag.TotalItems) : 0;
    int Limit = ViewBag.Limit != null ? Convert.ToInt32(ViewBag.Limit) : 25;
    double TotalPage = totalItems > 0 ? Math.Ceiling((float)totalItems / (float)Limit) : 1;
    int currPage = ViewBag.Offset == 0 ? 1 : ((Convert.ToInt16(ViewBag.Offset) / Limit) + 1);

    int prevOff = Convert.ToInt16(ViewBag.Offset) - Limit;
    if (prevOff < 0)
    {
        prevOff = 0;
    }

    int nextOff = Convert.ToInt16(ViewBag.Offset) + Limit;

    }

@section Toolbar {
    @Html.Partial("Partial/IndexToolbar")
}

<div class="right">
    <div class="select-options">
        <span>Type&nbsp;</span>
        @Html.DropDownList("typeId", (SelectList)ViewBag.EntityTypes, "", new { onchange = "changeType(value)" })
    </div>
    <br/>
</div>

@Html.Partial("Partial/ObjectList", Model, new ViewDataDictionary() { { "showType", true }, { "showDeleteButton", true } })
@{ 

}
<div class="linkDiv">
   
    @Html.ActionLink("< Previous", "Index", "Items", new { offset = prevOff, limit=Limit, typeId = ViewBag.SelectedType }, new { @class = "btn btn-success linkBtn" })
    <span class="pageCount">Page @currPage/@TotalPage</span>
    @Html.ActionLink("Next >", "Index", "Items", new { offset = nextOff, limit = Limit, typeId = ViewBag.SelectedType }, new { @class = "btn btn-success linkBtn" })
</div>
<style>
   
</style>

<script>
    function changeType(value) {
        var search = [
            { name : "offset", value : 0 },
            { name : "limit", value : @Limit },
            { name : "typeId", value : value }
        ];

        window.location.search = "?" + decodeURIComponent($.param(search));
    }
</script>*@