@model Catfish.Core.Models.Collection
@using PerpetuumSoft.Knockout

@{  ViewBag.Title = Model.Id > 0 ? "Edit Collection" : "Create Collection"; }

@section HEAD
{
    <link rel="stylesheet" type="text/css" href="~/Content/Css/catfish.css">
    <script src="/node_modules/requirejs/require.js"></script>
    <script type="text/javascript" src="/built/require-config.js"></script>
    <script>
            require(["/Built/Forms/ItemForm.js"])
    </script>


}

@section Toolbar {
    @Html.Partial("Partial/EditToolbar")
}

@ViewBag.Status
<br />

@using (Html.BeginForm()) {

    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    //for model binding
    @Html.Hidden("ModelType", Model.GetType().AssemblyQualifiedName, new Dictionary<string, object>()
    {
       {"class", "model-type"}
    })

    @Html.HiddenFor(m=>m.EntityTypeId)


    @* Rendering the metadata sets through the Entity.cshtml shared editor template *@
    @Html.EditorFor(m => m, "Entity")


    <div id="child-items">
        <h3>Child Items</h3>
        @*  @Html.DropDownList("parentCollection",(IEnumerable<SelectListItem>)ViewBag.Collections, "No Parent Collection")*@
    </div>

}
