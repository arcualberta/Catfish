@model Catfish.Areas.Manager.Models.ViewModels.MetadataSetViewModel
@using Catfish.Core.Models.Metadata
@using PerpetuumSoft.Knockout
@using Catfish.Areas.Manager.Models.ViewModels

@{ 
    var context = "ctx_" + Guid.NewGuid().ToString("N");
    var ko = Html.CreateKnockoutContext(context); 
}

<div id="@context">
    @using (ko.Html.Form("Save", "Metadata", null, new { id = context + "Form" }))
    {
        <div class="grid_12">
            <div class="box">
                <div class="title">
                    <h2>@Model.TypeLabel</h2>
                    <div class="bs right">
                        <span @ko.Bind.Visible(m => m.Status == KoBaseViewModel.eStatus.Success) style="display: none;" class="alert alert-success">Success!</span>
                        <span @ko.Bind.Visible(m => m.Status == KoBaseViewModel.eStatus.Error) style="display: none;" class="alert alert-danger">Error!</span>
                        @ko.Html.Button("Save", "Save", "Metadata")
                    </div>
                </div>
                <div class="inner">
                    <ul class="form form-custom">
                        <li>
                            <label class="control-label col-md-2">Name</label>
                            <div class="input">@ko.Html.TextBox(m => m.Name)</div>
                        </li>
                        <li>
                            <label class="control-label col-md-2">Description</label>
                            <div class="input">@ko.Html.TextArea(m => m.Description)</div>
                        </li>
                    </ul>
                </div>
            </div>

            <div id="fields-container">
                @using (var field = ko.Foreach(m => m.Fields))
                {
                    <div class="box">
                        <div class="title">
                            @field.Html.Span(f => f.TypeLabel)
                            <div class="bs right">
                                <span @field.Bind.Visible(m => m.Status == KoBaseViewModel.eStatus.Error) style="display: none;" class="alert alert-danger">Error!</span>
                                @ko.Html.Button("", "RemoveField", "Metadata", new { idx = @field.GetIndex() }, new { @class = "glyphicon glyphicon-remove" })
                            </div>

                        </div>
                        <div class="inner">
                            <ul class="form">
                                <li>
                                    <label class="control-label col-md-2">Name</label>
                                    <div class="input">
                                        @field.Html.TextBox(f => f.Name)
                                    </div>
                                </li>
                                <li>
                                    <label class="control-label col-md-2">Description</label>
                                    <div class="input">
                                        @field.Html.TextArea(f => f.Description)
                                    </div>
                                </li>
                                <li @field.Bind.Visible(m => m.IsOptionField)>
                                    <label class="control-label col-md-2">Options</label>
                                    <div class="input field-desc">
                                        <span>Please define options, one per line below</span>
                                    </div>
                                    <div class="input">
                                        @field.Html.TextArea(f => f.Options)
                                    </div>
                                </li>
                                <li>
                                    <label class="control-label col-md-2">Required</label>
                                    <div class="input">
                                        @field.Html.CheckBox(f => f.IsRequired)
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                }
            </div>
            <div id="fields-container">
                <div class="right">
                    @ko.Html.DropDownList(m => m.FieldTypes, new { }, ft => ft.Label).SelectedOptions(m => m.SelectedFieldTypes)
                    @ko.Html.Button("Add Field", "AddField", "Metadata", new { }, new { }).Enable(m => m.SelectedFieldTypes.Count > 0 && m.SelectedFieldTypes[0].Label != "")
                </div>

            </div>
        </div>
    }
</div>
@ko.Apply(Model, context)
