@model Catfish.Areas.Manager.Models.ViewModels.EntityAccessDefinitionsViewModel
@using Catfish.Core.Models.Access

@{
    string subTitle = Model.EntityName + " Access Permissions";
    string controller = ViewData["Controller"].ToString();
    string action = ViewData["Action"].ToString();
    //get all available AccessMode enum
   

}

<style>
    #BlockInheritance {
        margin-left: -300px;
    }
</style>
@using (Html.BeginForm(action, controller, FormMethod.Post, new { id = Model.Id }))
{

    @Html.HiddenFor(m => Model.Id)

    <table class="list" style="margin-top:10px;">
        <thead>
            <tr><th>@subTitle</th></tr>
        </thead>
        <tbody class="list">

            <tr>
                <td>
                    <table>

                        <tr>
                            <td><label>Access Definitions</label></td>
                            <td class="input">
                                <table class="list bs" id="UserAccessDefinitions">
                                    <thead>
                                        <tr>
                                            <th>User or User List</th>
                                            <th>Access Definition</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>

                                    @if (Model.SelectedAccessGroups.Count > 0)
                                    {
                                        int i = 0;
                                        foreach (var access in Model.SelectedAccessGroups)
                                        {
                                            string id = "row_" + i;
                                            <tr id="@id">
                                                <input type="hidden" name="SelectedAccessGroups.Index" value="@i">
                                                <input name="SelectedAccessGroups[@i].userId" type="hidden" value="@access.userId">
                                                <input name="SelectedAccessGroups[@i].AccessMode" type="hidden" value="@access.AccessMode">
                                                <input name="SelectedAccessGroups[@i].AccessModesNum" type="hidden" value="@access.AccessModesNum">
                                                <td>@access.User</td>
                                                <td>@access.AccessMode</td>
                                                <td><span class="glyphicon glyphicon-minus-sign" onclick="DeleteRow('@id')" ;></span></td>
                                            </tr>


                                            i++;
                                        }
                                    }

                                    <tr id="rowAddOption">
                                        <td>
                                            @Html.TextBoxFor(m => Model.User, new { @id = "usrName", @placeholder = "Userlogin or User List Name", @class = "form-control" })

                                        </td>
                                        <td>

                                            @Html.DropDownListFor(x => Model.SelectedAccessDefinition, new SelectList(Model.AvailableAccessDefinitions, "Value", "Text"), htmlAttributes: new { @class = "form-control" })

                                        </td>
                                        <td><button id="btnAddUserAccess" class="glyphicon glyphicon-plus-sign" onclick="AddUserAccessDefinition();return false;"></button></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>

                </td>
            </tr>
        </tbody>
    </table>

}

<script>
    var selectedUser = "";
    var selectedUser2="";
    $(function(){
       var allAvailableUsers =@(Html.Raw(Json.Encode(ViewBag.SugestedUsers))).map(function(x){ return { key: x["Key"], label: x["Value"] }; });

        $('#btnAddUserAccess').attr('disabled','disabled');
         $('#searchUserPermission').attr('disabled','disabled');
       $("#usrName").autocomplete({
          source: allAvailableUsers,
          select: function(event, ui){
                selectedUser = ui.item.key;
                $('#btnAddUserAccess').removeAttr('disabled');
           }
         });

          $("#usrName2").autocomplete({
          source: allAvailableUsers,
          select: function(event, ui){
                 selectedUser2 = ui.item.key;
                 $('#searchUserPermission').removeAttr('disabled');
           }
         });

         $('#searchUserPermission').click(function(){

                var controllerName = $("#controllerName").val();
               
                var entityId = $("#entityId").val();
                 
                var url ='@Url.Action("GetuserPermissions", "controllerName")';
                 url = url.replace("controllerName", controllerName);
                
                $.ajax({
                        url : url,
                        type : 'GET',
                        data : {
                                'userGuid' : selectedUser2, 'entityId': entityId
                        },
                        dataType:'json',
                        success : function(data) {

                                   $.each(data, function(index) {
                                      
                                        if(data[index] !== "None" && data[index] !== "All")
                                        {
                                           $("#chk_" + data[index]).prop("checked", true);
                                         }
                                    });
                            },
                        error : function(request,error)
                        {
                            alert("Request: "+JSON.stringify(request));
                        }
                });//closing ajax
            return false;
         });//closing click method
    });


    function AddUserAccessDefinition()
    {
        var uniqueId = Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);
        var regionName ="SelectedAccessGroups"

        var selectedUserGroup = $("#usrName").val();
        var selectedAccessDef= $("#SelectedAccessDefinition option:selected").text();
        var selectedAccessNum= $("#SelectedAccessDefinition option:selected").val();

       // var regionInd = regionName.split("_")[1];//0,1,etc

        var rowCount = $('#UserAccessDefinitionsTbl tr').length;
        var rowId = "row_" + (rowCount - 3);

        var t = `<tr id="` + rowId +`"><input type="hidden"  name="`+regionName +`.Index" value="` + uniqueId + `">
                    <input name="`+regionName+`[` + uniqueId +  `].User" type="hidden" value="` + selectedUserGroup + `">
                     <input name="`+regionName+`[` + uniqueId +  `].userId" type="hidden" value="` + selectedUser + `">
                    <input name="`+regionName+`[` + uniqueId +  `].AccessMode" type="hidden" value="` + selectedAccessDef + `">
                      <input name="`+regionName+`[` + uniqueId +  `].AccessModesNum" type="hidden" value="` + selectedAccessNum + `">
                    <td>` + selectedUserGroup + `</td>
                    <td>` + selectedAccessDef + `</td><td><span class="glyphicon glyphicon-minus-sign" onclick="DeleteRow('` + rowId +`')";></span></td>
                </tr>`;

        $("#rowAddOption").before(t);
         //reset button and text box
         $('#btnAddUserAccess').attr('disabled','disabled');
         $("#usrName").val('');
   }
    function DeleteRow(index)
    {
        $("#" + index).remove();
    }



            </script>
