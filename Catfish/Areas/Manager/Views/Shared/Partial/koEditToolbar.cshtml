@Html.Partial("Partial/Tabs")

@{ 
    string reloadAction = string.IsNullOrEmpty(ViewData["reloadAction"] as string) ? "edit" : ViewData["reloadAction"] as string;
    string saveButtonFunctionCall = ViewData["saveButtonFunctionCall"] as string;

    if (!string.IsNullOrEmpty(saveButtonFunctionCall) && !saveButtonFunctionCall.EndsWith(")"))
    {
        saveButtonFunctionCall += "()";
    }

    // Check for additional buttons
    bool hasButtons = true;
    int buttonsIndex = 0;
}

<div class="toolbar">
    <div class="inner">
        <ul>
            @if (!string.IsNullOrEmpty(saveButtonFunctionCall))
            {
                <li id="save-btn">
                    <a id="toolbar_save_button" class="save" onclick="@(saveButtonFunctionCall); return false;">
                        @Piranha.Resources.Global.ToolbarSave
                    </a>
                </li>
            }

            <li>
                <a id="toolbar_back_button" href="@Url.Action("index")" class="back">
                    @Piranha.Resources.Global.ToolbarBack
                </a>
            </li>
            <li>
                <a id="toolbar_refresh_button" href="@Url.Action(@reloadAction, new { id = Model.Id })" class="refresh">
                    @Piranha.Resources.Global.ToolbarReload
                </a>
            </li>

            @while (hasButtons)
            {
                string buttonFunction = ViewData[string.Format("Button{0}FunctionCall", buttonsIndex)] as string;
                if (!string.IsNullOrEmpty(buttonFunction))
                {
                    <li>
                        <a id="toolbar_button@(buttonsIndex)" onclick="@(buttonFunction)(event); return false;" class="@(ViewData[string.Format("Button{0}Class", buttonsIndex)])">
                            @ViewData[string.Format("Button{0}Title", buttonsIndex)]
                        </a>
                    </li>
                }
                else
                {
                    hasButtons = false;
                }

                ++buttonsIndex;
            }
        </ul>
        <div class="clear"></div>
    </div>
</div>

