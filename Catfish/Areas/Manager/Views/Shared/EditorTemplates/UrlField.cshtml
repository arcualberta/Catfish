@model Catfish.Core.Models.Forms.UrlField

@Html.Hidden("ModelType", Model.GetType().AssemblyQualifiedName, new Dictionary<string, object>()
{
    {"class", "model-type"}
})
@Html.HiddenFor(m => m.Guid)


<div class="form-field-name">
    @Html.Label(string.IsNullOrEmpty(Model.Name) ? "" : Model.Name, new { @name = "label" })
</div>
<div class="form-field-value urlFieldText">
    @{ bool showLanguageLabel = Model.Values.Count() > 1; 
            
     }
    @Html.EditorFor(m => m.Values, new { ShowLanguageLabel = showLanguageLabel, @class="lang-UrlText"})
    <span>*</span>
</div>

<script>

$( document ).ready(function() {
     $('.urlFieldText > div').each(function () {
        var input =$(this).find("input");
        input.focusout(function() {
               if(validate_url(input.val()) )
                {
                        $(".invalidUrl").remove();
                }
                else{
                       var span =  document.createElement("span");
                       span.setAttribute("class", "invalidUrl");
                       span.innerHTML="*Invalid Url";

                       input.context.append(span);
                       input.focus();
                       return false;
               }
         });
    });
});


function validate_url(str)
{
  regexp =  /^(?:(?:https?|ftp):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/;
  if (regexp.test(str))
    {
        return true;
    }
    else
    {
        return false;
    }
}
</script>

<style>
    .invalidUrl{

        font-weight: bold;
        color: firebrick;
    }
</style>