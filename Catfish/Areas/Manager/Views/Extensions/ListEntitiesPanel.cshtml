@model Catfish.Models.Regions.ListEntitiesPanel
@{ 
    string fieldFunction = "Field" + Guid.NewGuid().ToString().Replace('-', 'J');
    string fieldsId = Guid.NewGuid().ToString().Replace('-', 'I');
}
<style>
    #listPanelDd {
        padding: 2px 2px;
        width:415px;
        color:#333;
        border:1px solid #adadad;
    }
</style>
<ul class="form">

    @Html.Partial("_CatfishRegion", Model)

    <li>
        @Html.LabelFor(m => m.ItemPerPage)
        <div class="input">
            @Html.EditorFor(m => m.ItemPerPage)
        </div>
    </li>
    <li>
        @Html.LabelFor(m => m.SortByField)
        <div class="input">
            @Html.DropDownListFor(m=>m.SortByField, Model.FieldsMapping, new { @class = "btn btn-default", @id= "listPanelDd" })
        </div>
    </li>

    <li>
        @Html.LabelFor(m => m.EntityTypeFilter)
        <div class="input">
            @Html.DropDownListFor(m => m.EntityTypeFilter, Model.EntityTypes, "")
        </div>
    </li>

    <li>
        @Html.LabelFor(m => m.Fields)
        <div class="bs input">
          
            <div>
                <table class="table table-responsive table-striped" id="AttributeMappingTable@(fieldsId)">
                    @{
                        int i = 0;
                        foreach (var f in Model.Mappings)
                        {
                            string rowId = "row_" + i;
                            <tr id="@rowId">
                                <input type="hidden" name="@(Html.NameFor(m => m.Fields)).Index" value="@(i)" />
                                @Html.HiddenFor(m => m.Fields[i].Id)
                                <td><span>@f.Name</span></td>
                                <td>@Html.DropDownListFor(m => m.Fields[i].Link, Model.Pages.Select(n => new SelectListItem() { Value = n.Value, Text = n.Text, Selected = Model.Fields[i].Link == n.Value }), "No Link")</td>
                                <td><span class="glyphicon glyphicon-minus-sign" onclick="DeleteRow('@rowId');"></span><span class="glyphicon glyphicon-arrow-up up"></span><span class="glyphicon glyphicon-arrow-down down"></span></td>
                            </tr>

                            ++i;
                        }
                        <tr id="ddFields@(fieldsId)">
                            <input type="hidden" class="hdregion" value="@Html.IdFor(m => m)" />
                            <td>@Html.DropDownList("selectedField", Model.FieldsMapping, new { @class = "btn btn-default", @style = "padding: 2px 2px" })</td>
                            <td><span class="glyphicon glyphicon-plus-sign" onclick="Add@(fieldFunction)()"></span></td>
                        </tr>

                    }
                    </table>
                    </div>
            </div>
        </li>
</ul>

<script>
    $( document ).ready(function() {
       $('.up,.down').click(function () {
          var row = $(this).parents('tr:first');
          if ($(this).is('.up')) {
               row.insertBefore(row.prev())
          }
         else {
            row.insertAfter(row.next());
           }
     });


    });
    function Add@(fieldFunction)()
    {
        var uniqueId = Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);
        var dropdown = @Html.Raw(Json.Encode(Html.DropDownList("x1xChangeThisValuex1x", Model.Pages, "No Link", new { id = "id_x1xNewIdx1x" }).ToString()));
        var regionName = '@Html.Raw(Html.IdFor(m => m))'; // Region_0
         var regionInd = regionName.split("_")[1];//0,1,etc
      var FieldId = $("#" + regionName + "_selectedField").val();
     var FieldText = $("#" + regionName + "_selectedField option:selected").text();

     var rowCount = $('#AttributeMappingTable@(fieldsId) tr').length;
     var rowId = "row_" + (rowCount - 1);

     var fieldName = "Regions[" + regionInd + "].Body.Fields[" + uniqueId + "]";


     var t = `<tr id="` + rowId + `"><input type="hidden" name="Regions[` + regionInd + `].Body.Fields.Index" value="` + uniqueId + `">
               <input name="` + fieldName + `.Id" type="hidden" value="` + FieldId + `">
                    <td><span>` + FieldText + `</span></td>
                    <td>` + dropdown.replace(/x1xChangeThisValuex1x/g, fieldName + '.Link') + `</td>
                    <td><span class="glyphicon glyphicon-minus-sign" onclick="DeleteRow('` + rowId +`')"></span><span class="glyphicon glyphicon-arrow-up"></span><span class="glyphicon glyphicon-arrow-down"></span></td>
                </tr>`;

      $("#ddFields@(fieldsId)").before(t)


    }

    function DeleteRow(index)
    {
       $("#" + index).remove();
    }
</script>
