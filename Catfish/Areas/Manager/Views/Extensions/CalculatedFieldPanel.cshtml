@model Catfish.Models.Regions.CalculatedFieldPanel
@{
    string changeFieldFunction = "changeField" + Guid.NewGuid().ToString().Replace('-', 'J');
    var firstFields = Model.MetadataFields.Keys.Count > 0 ? Model.MetadataFields[Model.MetadataFields.Keys.First()] : new List<SelectListItem>();

    if (!string.IsNullOrEmpty(Model.SelectedField) && Model.MetadataFields.Keys.Contains(Model.SelectedField))
    {
        firstFields = Model.MetadataFields[Model.SelectedField];
    }
}
<style>
    .input select {
        background: #efeeee85;
        border-radius: 2px;
        padding-right:5px;
    }
</style>
<ul class="form">
    
    @Html.Partial("_CatfishRegion", Model)
    <li>
        @Html.LabelFor(m => m.Title)
        <div class="input">
            @Html.EditorFor(m => m.Title)
        </div>
    </li>
   
    <li>
        @Html.Label("Field ")
        <div class="input">
            @Html.DropDownListFor(m => m.SelectedFieldMetadataSet, new SelectList(Model.ListMetadataSets, "Value", "Text"), new {@style="width:auto;", @class="dropdown", onchange = changeFieldFunction + "('" + Html.IdFor(model => model.SelectedFieldMetadataSet) + "','" + Html.IdFor(model => model.SelectedField) + "');" })
            @Html.DropDownListFor(m => m.SelectedField, new SelectList(firstFields, "Value", "Text"), new {@style="width:auto" })
       </div>
    </li>
    <li>
        @Html.Label("Group By ")
        <div class="input">
            @Html.DropDownListFor(m => m.SelectedGroupByFieldMetadataSet, new SelectList(Model.ListMetadataSets, "Value", "Text")," ", new { @style = "width:auto;", @class = "dropdown", onchange = changeFieldFunction + "('" + Html.IdFor(model => model.SelectedFieldMetadataSet) + "','" + Html.IdFor(model => model.SelectedField) + "' );" })
            @Html.DropDownListFor(m => m.SelectedGroupByField, new SelectList(firstFields, "Value", "Text"), " ", new { @style = "width:auto" })
        </div>
    </li>
    <li>
        @Html.Label("Function ")
        <div class="input">
            @Html.DropDownListFor(m => m.SelectedFunction, new SelectList(Model.FunctionModes, "Value", "Text"), new { @style = "width:auto;", @class = "dropdown" })

        </div>
    </li>

    <li>
        @Html.Label("Prefix ")
        <div class="input">
            @Html.EditorFor(m => m.Prefix)

        </div>
    </li>

    <li>
        @Html.Label("Decimal Places ")
        <div class="input">
            @Html.EditorFor(m => m.DecimalPlaces)

        </div>
    </li>
</ul>

<script type="text/javascript">
    function @(changeFieldFunction)(metadatasetId, fieldId) {
        var fieldDictionary = @Html.Raw(Json.Encode(Model.MetadataFields));

        var metadataSet = $('#' + metadatasetId).val();
        var fields = fieldDictionary[metadataSet];
        var fieldSelect = $('#' + fieldId);
        fieldSelect.empty();

        for (var i = 0; i < fields.length; ++i) {
            var option = $('<option></option>');
            option.attr("value", fields[i].Value);
            option.text(fields[i].Text);

            fieldSelect.append(option);
        }
    }
   /*
    $( document ).ready(function() {
       $('.up,.down').click(function () {
          var row = $(this).parents('tr:first');
          if ($(this).is('.up')) {
               row.insertBefore(row.prev())
          }
         else {
            row.insertAfter(row.next());
           }
     });


    });
    function AddField()
    {
      var Field = $("#Regions_0__Body_selectedField").val();
      var uniqueId = Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);
     var rowCount = $('#AttributeMappingTable tr').length;
    var rowId = "row_" + (rowCount - 1);


      var t = `<tr id="` + rowId +`"><input type="hidden" name="Regions[0].Body.Fields.Index" value="` + uniqueId + `">
               <input name="Regions[0].Body.Fields[` + uniqueId +  `]" type="hidden" value="` + Field +`">
                    <td><span>` + Field + `</span></td>
                    <td><span class="glyphicon glyphicon-minus-sign" onclick="DeleteRow('` + rowId +`')"></span><span class="glyphicon glyphicon-arrow-up"></span><span class="glyphicon glyphicon-arrow-down"></span></td>
                </tr>`;

      $("#ddFields").before(t)
    }

    function DeleteRow(index)
    {
       $("#" + index).remove();
    }
    */
</script>