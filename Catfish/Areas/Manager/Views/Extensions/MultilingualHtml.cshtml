@model Catfish.Models.Regions.MultilingualHtml
@using Catfish.Core.Helpers;
@using Catfish.Core.Models;
@using System.Globalization;

@{ 
    List<CultureInfo> languages = ConfigHelper.Languages;

    //making sure that Model.Content array contains elements for each of the languages
    foreach(var lang in languages)
    {
        if (!Model.Content.Where(c => c.LanguageCode == lang.TwoLetterISOLanguageName).Any())
        {
            Model.Content.Add(new TextValue(lang.TwoLetterISOLanguageName, lang.NativeName, ""));
        }
    }
}
<ul class="form">
    @*@foreach (var entry in Model.Content)*@
    @for(int i=0; i< Model.Content.Count; ++i)
    {

        <li>
            <label class="lang-label">@Model.Content[i].LanguageLabel</label>
            <div class="input">@Html.TextAreaFor(m => Model.Content[i].Value, new { @class = "editor", @rows = 10, placeholder = "Enter the content in the above langage" })</div>
            @Html.HiddenFor(m => Model.Content[i].LanguageLabel)
            @Html.HiddenFor(m => Model.Content[i].LanguageCode)
        </li>
    }

    @Html.Partial("_CatfishRegion", Model)

</ul>