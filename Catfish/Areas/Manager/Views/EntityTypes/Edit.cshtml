@model Catfish.Core.Models.EntityType
@using Catfish.Core.Models.Attributes
@using Catfish.Areas.Manager.Models.ViewModels
@using Catfish.Models;
@using System.Web.Script.Serialization;

<script src="/node_modules/requirejs/require.js"></script>
<script type="text/javascript" src="/built/require-config.js"></script>

@{ 

    var viewData = new ViewDataDictionary(Html.ViewData)
    {
        TemplateInfo = new System.Web.Mvc.TemplateInfo
        {
            HtmlFieldPrefix = "MetadataSets[CATFISH_GUID]"
        }
    };

    string metadataSetTemplate = Html.Partial("EditorTemplates/EntityViewModel", new EntityViewModel(), viewData).ToHtmlString();

    EntityTypeViewModel vm = ViewBag.EntityTypeViewModel as EntityTypeViewModel;
}

<script>
    var metadataSets = {
        sets: @Html.Raw(new JavaScriptSerializer().Serialize(vm.MetadataSetSummary)),
        template: @Html.Raw(Json.Encode(metadataSetTemplate))
    }
</script>


@{  ViewBag.Title = Model.Id > 0 ? "Edit Entity Type" : "Create Entity Type"; }

@section Toolbar {
    @Html.Partial("Partial/EditToolbar")
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<input type="hidden" id="deletedFields" name="deletedFields" value=""/>

    <div class="grid_12">
        <div class="box">
            @{ 
                TypeLabelAttribute att = Attribute.GetCustomAttribute(Model.GetType(), typeof(TypeLabelAttribute)) as TypeLabelAttribute;
                string title = att == null ? Model.GetType().ToString() : att.Name;
             }
            <div class="title"><h2>@title</h2></div>
            <div class="inner">
                <ul class="form">
                    <li>
                        @Html.LabelFor(m => m.Name)
                        <div class="input">@Html.EditorFor(m => m.Name)</div>
                    </li>
                    <li>
                        @Html.LabelFor(m => m.Description)
                        <div class="input">@Html.EditorFor(m => m.Description)</div>
                    </li>
                </ul>
            </div>
        </div>
        <div id="fields-container">
            @{ var MetadataSets = Model.MetadataSets.Select(ms => new EntityViewModel(ms)).ToList();}
            @Html.EditorFor(m => MetadataSets)
        </div>
    </div>

}

<div class="grid_12 contentright">
    <button id="add-field">Add MetadataSet</button>
</div>

<script>
    require(["/Built/Forms/EntityTypeForm.js"]);
</script>
