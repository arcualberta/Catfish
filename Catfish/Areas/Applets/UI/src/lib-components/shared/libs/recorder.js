import Mp3Encoder from"./mp3-encoder";import WavEncoder from"./wav-encoder";import convertTimeMMSS from"./utils";export default class{constructor(t={}){this.beforeRecording=t.beforeRecording,this.pauseRecording=t.pauseRecording,this.afterRecording=t.afterRecording,this.micFailed=t.micFailed,this.format=t.format,this.encoderOptions={bitRate:t.bitRate,sampleRate:t.sampleRate},this.bufferSize=1024,this.records=[],this.isPause=!1,this.isRecording=!1,this.duration=0,this.volume=0,this.wavSamples=[],this._duration=0}start(){this.beforeRecording&&this.beforeRecording("start recording"),navigator.mediaDevices.getUserMedia({video:!1,audio:{channelCount:1,echoCancellation:!1}}).then(this._micCaptured.bind(this)).catch(this._micError.bind(this)),this.isPause=!1,this.isRecording=!0,this._isMp3()&&!this.lameEncoder&&(this.lameEncoder=new Mp3Encoder(this.encoderOptions))}stop(){this.stream.getTracks().forEach(t=>t.stop()),this.input.disconnect(),this.processor.disconnect(),this.context.close();let t=null;if(this._isMp3())t=this.lameEncoder.finish();else{t=new WavEncoder({bufferSize:this.bufferSize,sampleRate:this.encoderOptions.sampleRate,samples:this.wavSamples}).finish(),this.wavSamples=[]}t.duration=convertTimeMMSS(this.duration),this.records.push(t),this._duration=0,this.duration=0,this.isPause=!1,this.isRecording=!1,this.afterRecording&&this.afterRecording(t)}pause(){this.stream.getTracks().forEach(t=>t.stop()),this.input.disconnect(),this.processor.disconnect(),this._duration=this.duration,this.isPause=!0,this.pauseRecording&&this.pauseRecording("pause recording")}recordList(){return this.records}lastRecord(){return this.records.slice(-1).pop()}_micCaptured(t){this.context=new(window.AudioContext||window.webkitAudioContext),this.duration=this._duration,this.input=this.context.createMediaStreamSource(t),this.processor=this.context.createScriptProcessor(this.bufferSize,1,1),this.stream=t,this.processor.onaudioprocess=(t=>{const i=t.inputBuffer.getChannelData(0);let e=0;this._isMp3()?this.lameEncoder.encode(i):this.wavSamples.push(new Float32Array(i));for(let t=0;t<i.length;++t)e+=i[t]*i[t];this.duration=parseFloat(this._duration)+parseFloat(this.context.currentTime.toFixed(2)),this.volume=Math.sqrt(e/i.length).toFixed(2)}),this.input.connect(this.processor),this.processor.connect(this.context.destination)}_micError(t){this.micFailed&&this.micFailed(t)}_isMp3(){return"mp3"===this.format.toLowerCase()}}
