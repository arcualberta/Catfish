@page
@model Catfish.Web.Pages.LoginModel
@inject CatfishExtensions.Helpers.ICatfishAppConfiguration _catfishAppConfig;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor
@{
    ViewBag.Title = "Login";
    bool allowGoogleLogin = _catfishAppConfig.IsAllowGoogleLogin();
    string DeniedMessage = _catfishAppConfig.GetUnauthorizedLoginMessage();
    bool enabledLocalLogin = _catfishAppConfig.GetEnabledLocalLogin();
    string externalLoginDivClass = enabledLocalLogin ? "col-md" : "col-md-12";

    Layout = ".\\_Layout";
}
<div class="container">
    <div class="row">
        @if (TempData["SuccessMessage"] != null && TempData["SuccessMessage"].ToString().Length > 0)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }
        <article class="col-md-6">

            @if (enabledLocalLogin)
            {
                <h2>Local Account Login</h2>
                <hr />
                <div class="row">
                    <div class="col-sm-6">
                        <form method="post">
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                <label>User name</label>
                                @Html.TextBoxFor(m => m.Username, null, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Password</label>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            </div>
                            <button class="btn btn-success">Login</button>
                        </form>
                        <div style="margin-top:20px;">
                            <a href="./forgotPassword">Forgot Password?</a>
                        </div>
                        <div style="margin-bottom:20px;">
                            <a href="./changepassword">Change my password</a>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger">
                                @Model.ErrorMessage
                            </div>
                        }
                    </div>

                </div>
            }
        </article>
        @Html.AntiForgeryToken()
        @if (allowGoogleLogin)
        {
            <article class="@externalLoginDivClass">
                <div class="grid_6 box login">
                    <div id="socialLoginDiv">
                        <h2>External Login </h2>
                        <hr />
                        <script>
                            function handleCredentialResponse(response) {
                                console.log("Encoded JWT ID token: " + response.credential);
                                fetch("https://localhost:5010/api/GoogleIdentity", {
                                    body: JSON.stringify(response.credential),
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    }
                                })
                                    .then(response => { 
                                        if (!response.ok)
                                            console.log('Authentication API call failed')
                                        else
                                            return response.json();
                                    })
                                    .then(data => {
                                        console.log('Login Result:')
                                        console.log(JSON.stringify(data))
                                    })
                                    .catch((error) => {
                                        console.error('Authentication API Error:', error);
                                    });
                            }
                            window.onload = function () {
                                google.accounts.id.initialize({
                                client_id: "589183038778-u256nlels7v2443j3h1unvtp367f80s4.apps.googleusercontent.com",
                                callback: handleCredentialResponse
                                //login_uri: "https://localhost:5010/api/GoogleIdentity"
                                });
                                google.accounts.id.renderButton(
                                document.getElementById("buttonDiv"),
                                { theme: "outline", size: "large" }  // customization attributes
                                );
                                google.accounts.id.prompt(); // also display the One Tap dialog
                            }
                        </script>
                        <div id="buttonDiv"></div> 

@*                        <div id="g_id_onload"
                            data-client_id="589183038778-u256nlels7v2443j3h1unvtp367f80s4.apps.googleusercontent.com"
                            data-login_uri="https://localhost:5010/api/GoogleIdentity"
                            data-auto_prompt="false">
                        </div>
                        <div class="g_id_signin"
                            data-type="standard"
                            data-size="large"
                            data-theme="outline"
                            data-text="sign_in_with"
                            data-shape="rectangular"
                            data-logo_alignment="left">
                        </div>*@

@*                        <form asp-page-handler="externalLogin" method="post" asp-route-returnUrl="@Model.GetReturnUrl()">
                            @foreach (var provider in Model.ExternalLogins)
                            {
                                <input type="submit" class=" btn-primary goggleLoginBtn fa fa-google btn" value="@provider.Name" title="Login using your @provider.DisplayName account" />
                            }
                        </form>
*@
                    </div>
                </div>
                <div class="alert alert-warning alert-dismissible allowDomain" style="visibility: hidden; text-align:center;">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>Warning!</strong> @DeniedMessage
                </div>
            </article>
        }
    </div>
</div>
