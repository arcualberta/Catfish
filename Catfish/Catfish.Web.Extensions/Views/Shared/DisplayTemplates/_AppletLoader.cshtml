@model Piranha.Extend.Block
@using Newtonsoft.Json;

@inject Piranha.AspNetCore.Services.IApplicationService _webApp
@inject CatfishWebExtensions.Interfaces.IAssetRegistry _assetRegistry;

<noscript>
    <strong>We're sorry but Vue Applets don't work without JavaScript enabled. Please enable it to continue.</strong>
</noscript>

Applet Loader is being rendered here ...

@{
    var pageId = _webApp.PageId;
    var blockId = Model.Id;
    var mountPointId = string.Format("app-{0}", blockId);

    //Creating a dictionary of all data attributes
    var dataAttributes = new Dictionary<string, object>();
    foreach (var pair in ViewData)
    {
        if (pair.Key.StartsWith("data-"))
            dataAttributes.Add(pair.Key.Substring(5), pair.Value);
    }
    dataAttributes.Add("SiteUrl", ConfigHelper.SiteUrl);

    <script src="/assets/public/vendors/vue3/vue.global.min.js"></script>
<script src="/assets/public/vendors/vue3/vue.global.prod.min.js"></script>

    
    //Registering assets
    _assetRegistry.RegisterScript(@ConfigHelper.SiteUrl+"/assets/public/vendors/vue3/vue.global.prod.min.js", 
                                  @ConfigHelper.SiteUrl+"/assets/public/vendors/vue3/vue.global.min.js");
    
    _assetRegistry.RegisterScript(@ConfigHelper.SiteUrl+"/assets/public/vendors/vuedemi/index.iife.min.js");

    _assetRegistry.RegisterScript(@ConfigHelper.SiteUrl+"/assets/public/vendors/vuerouter/vuerouter.global.prod.js", 
                                  @ConfigHelper.SiteUrl+"/assets/public/vendors/vuerouter/vuerouter.global.js");

    _assetRegistry.RegisterScript(@ConfigHelper.SiteUrl+"/assets/public/vendors/pinia/pinia.iife.prod.min.js", 
                                  @ConfigHelper.SiteUrl+"/assets/public/vendors/pinia/pinia.iife.min.js");

    _assetRegistry.RegisterModule(@ConfigHelper.SiteUrl+"/assets/applets/applets.es.js");
    _assetRegistry.RegisterModule(@ConfigHelper.SiteUrl+"/assets/applets/applets.umd.js");
    _assetRegistry.RegisterStylesheet(@ConfigHelper.SiteUrl+"/assets/applets/style.css");

}

<div id="@mountPointId"></div>

<script type="module">


    const applet = Applets.@Model.GetType().Name;//Applets.@Model.GetType().Name;
    if (!applet)
        throw "Applet \"@ViewData["applet"]\" not found.";

    //TODO: Read all URL query parameters and build queryParams associative array    
    let queryParams = {}; //Cresting a temporary associative array for now.

    //grab the query parameters
    let qparams = window.location.search.substr(1).split('&');
    
    qparams.forEach((q) => {
        let keyPair = q.split("=");

        //check if the value is a number
        let keyName = keyPair[0];
        let val = Number(keyPair[1]);
        if (!Number.isNaN(val)) {
            queryParams[keyName] = val;
        } else {
            queryParams[keyName] = keyPair[1];
        }

    });

    //console.log("query params after initialize: " + JSON.stringify(queryParams))

//const pinia = createPinia();
const app = Vue.createApp(applet, {
    pageId: '@pageId',
    blockId: '@blockId',
    dataAttributes: @Html.Raw(JsonConvert.SerializeObject(dataAttributes)),
    queryParameters: queryParams
});
 

if (applet.props.piniaInstance == null) {
        //const state = applet.storeConfig.state;
        //const mutations = applet.storeConfig.mutations;
        //const actions = applet.storeConfig.actions;
        //const getters = applet.storeConfig.getters;

        //const store = Vuex.createStore({ state, mutations, actions, getters });
     
       app.use(Pinia.createPinia());
     
    }
  
    app.mount('#@mountPointId');

</script>

