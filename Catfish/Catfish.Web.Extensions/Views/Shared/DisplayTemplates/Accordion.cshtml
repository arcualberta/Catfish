@model CatfishWebExtensions.Blocks.Accordion
@using CatfishWebExtensions.Blocks;
@using CatfishExtensions.Interfaces;

@inject ICatfishAppConfiguration _catfishConfiguration;

@{
    var css_classes = Model.CSSClasses.Value;
    bool first = true;
}

<div class="accordion @css_classes" id="accordion-@Model.Id">
    @foreach(var block in Model.Items)
    {
        string show = first ? "show" : "";
        string isCollapsed = first ? "" : "collapsed";
        <div class="accordion-item">
            <h2 class="accordion-header" id="heading-@block.Id">
                <button class="accordion-button @isCollapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@block.Id" aria-expanded="@first.ToString().ToLower()" aria-controls="collapse-@block.Id">
                    @if(block is Card){@((block as Card).Title)}
                </button>
            </h2>
            <div id="collapse-@block.Id" class="accordion-collapse collapse @show" aria-labelledby="heading-@block.Id" data-bs-parent="#accordion-@Model.Id">
                <div class="accordion-body">
                    @if(block is Card){
                        @Html.Raw((block as Card).Content)
                    }
                    else{
                        @Html.DisplayFor(m => block)
                    }
                </div>
            </div>
        </div>

        first = false;

    }
</div>
