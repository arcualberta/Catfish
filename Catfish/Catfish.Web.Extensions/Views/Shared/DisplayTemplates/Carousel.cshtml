@model CatfishWebExtensions.Models.Blocks.Carousel
@using CatfishWebExtensions.Models.Blocks;
@using CatfishExtensions.Interfaces;
@using static CatfishWebExtensions.Constants.Enums
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@inject ICatfishAppConfiguration _catfishConfiguration;

@{
    var css_classes = Model.CssClasses.Value;
    var blockDivId = $"carousel-{Model.Id.ToString()}";
}

<div id="@blockDivId" class="carousel slide @Model.CssClasses" data-ride="carousel">
    <ol class="carousel-indicators">
        @for(int i=0; i<Model.Items.Count; ++i)
        {
            var isActive = i == 0 ? "active" : "";
            <li data-target="#@blockDivId" data-slide-to="@i" class="@isActive"></li>
        }
    </ol>
    <div class="carousel-inner">
        @for(int i=0; i<Model.Items.Count; ++i){

            var item = Model.Items[i];
            if (item is CarouselSlide)
            {
                var viewData = new ViewDataDictionary(this.ViewData);
                viewData.Add("index", i);
                var slide = item as CarouselSlide;
                switch (slide.Layout.Value)
                {
                    case eCarouselLayout.Slide: <partial name="DisplayTemplates/CarouselSlides/Slide" model="@slide" view-data="@viewData" />
                    break;
                    case eCarouselLayout.Overlay: <partial name="DisplayTemplates/CarouselSlides/Overlay" model="@slide" view-data="@viewData" />
                    break;
                    case eCarouselLayout.SideBySide: <partial name="DisplayTemplates/CarouselSlides/SideBySide" model="@slide" view-data="@viewData" />
                    break;
                }
            }
        }
     </div>
    <a class="carousel-control-prev" href="#@blockDivId" role="button" data-slide="prev">
        <span class="carousel-control-left" aria-hidden="true"><</span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#@blockDivId" role="button" data-slide="next">
        <span class="carousel-control-right" aria-hidden="true">></span>
        <span class="sr-only">Next</span>
    </a>
</div>


