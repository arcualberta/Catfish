@model string;
@using Newtonsoft.Json;

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Piranha.AspNetCore.Services.IApplicationService _webApp
@inject CatfishWebExtensions.Interfaces.IAssetRegistry _assetRegistry;
@inject IConfiguration _configuration;

<noscript>
    <strong>We're sorry but Vue Applets don't work without JavaScript enabled. Please enable it to continue.</strong>
</noscript>

@{
    var pageId = Guid.NewGuid();
    var mountPointId = string.Format("app-{0}", pageId);

    _assetRegistry.RegisterScript("assets/public/vendors/vue3/vue.global.prod.min.js",
                                  "assets/public/vendors/vue3/vue.global.min.js");

    _assetRegistry.RegisterScript("assets/public/vendors/vuedemi/index.iife.min.js");

    _assetRegistry.RegisterScript("assets/public/vendors/pinia/pinia.iife.prod.min.js",
                                  "assets/public/vendors/pinia/pinia.iife.min.js");

    _assetRegistry.RegisterScript("assets/applets/applets.umd.js",
                                  "assets/applets/applets.umd.js");

    _assetRegistry.RegisterScript("assets/public/vendors/vuerouter/vuerouter.global.js");

    //bootstrap
    _assetRegistry.RegisterScript("https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.js");
   _assetRegistry.RegisterScript("https://unpkg.com/bootstrap/dist/css/bootstrap.min.css");
   _assetRegistry.RegisterScript("https://cdnjs.cloudflare.com/ajax/libs/bootstrap-vue/2.22.0/bootstrap-vue-icons.esm.min.js");
    _assetRegistry.RegisterScript("https://cdnjs.cloudflare.com/ajax/libs/bootstrap-vue/2.22.0/bootstrap-vue.esm.min.js");
    _assetRegistry.RegisterScript("https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.css");



    var repositoryMicroserviceApiRoot = _configuration.GetSection("SiteConfig:RepositoryMicroServiceUrl").Value?.TrimEnd('/');

}


<partial name="_AssetRegistry" />

<div id="@mountPointId"></div>

@{
    //Creating a dictionary of all data attributes
    var dataAttributes = new Dictionary<string, object>();
    foreach (var pair in ViewData)
    {
        if (pair.Key.StartsWith("data-"))
            dataAttributes.Add(pair.Key.Substring(5), pair.Value);
    }
    dataAttributes.Add("SiteUrl", ConfigHelper.SiteUrl);
    dataAttributes.Add("RepositoryMicroserviceUrl", repositoryMicroserviceApiRoot);

}

<script>

    const applet = CatfishUI.Apps.@{@Model}.App;
    if (!applet)
        throw '@{@string.Format("CatfishUI.Apps.{0}.App not found", Model);}'

    const pinia = CatfishUI.Apps.@{@Model}?.pinia;

    const router = CatfishUI.Apps.@{@Model}?.router;
    
    const app = Vue.createApp(applet, {
        dataAttributes: @Html.Raw(JsonConvert.SerializeObject(dataAttributes))
    });

    if (pinia)
        app.use(pinia)

    if (router)
        app.use(router)

    app.mount('#@mountPointId');

</script>

