@page "/login"

@model CatfishWebExtensions.Pages.LoginModel

@{
    @inject IConfiguration configuration;
    var siteUrl = configuration.GetSection("SiteConfig:SiteUrl").Value;
    if (string.IsNullOrEmpty(siteUrl))
        siteUrl = "/";
    else if (!siteUrl.EndsWith("/"))
        siteUrl += "/";

    var redirectLocation = Request.Query["ret"].ToString();
    if (string.IsNullOrEmpty(redirectLocation))
        redirectLocation = siteUrl;
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        @Model.ErrorMessage
    </div>
}

<script>
    function handleCredentialResponse(response) {
        console.log("Encoded JWT ID token: " + response.credential);
        const api = '@siteUrl' + 'google';
        fetch(api, {
            body: JSON.stringify(response.credential),
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => { 
                if (!response.ok)
                    console.log('Authentication API call failed')
                else
                    return response.json();
            })
            .then(data => {
                console.log('Login Result:')
                console.log(JSON.stringify(data))

                document.getElementById("Username").value= data.email;
                document.getElementById("Password").value = data.password;
                document.forms["localLoginFrm"].submit();

                window.location.href = '@redirectLocation';
            })
            .catch((error) => {
                console.error('Authentication API Error:', error);
            });
    }
    window.onload = function () {
        google.accounts.id.initialize({
        client_id: "589183038778-u256nlels7v2443j3h1unvtp367f80s4.apps.googleusercontent.com",
        callback: handleCredentialResponse
        //login_uri: "https://localhost:5010/api/GoogleIdentity"
        });
        google.accounts.id.renderButton(
        document.getElementById("buttonDiv"),
        { theme: "outline", size: "large" }  // customization attributes
        );
        google.accounts.id.prompt(); // also display the One Tap dialog
    }
</script>
<div id="buttonDiv"></div> 

<form method="post" id="localLoginFrm" action="manager/login/auth">
    @Html.AntiForgeryToken()
    @Html.TextBoxFor(m => m.Username, null, new { @class = "form-control" })
    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
    <input type="submit" id="local-login-btn" class="btn btn-success" value="Login" />
</form>