@model Catfish.Core.Models.Forms.SliderField

@Html.Hidden("ModelType", Model.GetType().AssemblyQualifiedName, new Dictionary<string, object>()
{
    {"class", "model-type"}
})

@{
    string lang = Catfish.Helpers.ViewHelper.GetActiveLanguage().TwoLetterISOLanguageName;
}

@Html.HiddenFor(m => m.Guid)
@for (int i = 0; i < Model.Values.Count(); ++i)
{
    if (Model.Values[i].LanguageCode == lang)
    {
        decimal value;
        if(!decimal.TryParse(Model.Values[i].Value, out value))
        {
            value = (Model.Max + Model.Min) / 2.0m;
        }

        <div class="slidercontainer">
            @Html.HiddenFor(m => m.Values[i].LanguageCode)
            <div class="slidervalues">
                <span class="sliderlabel left">@Model.Min</span>
                <span id="showValue_@(Html.IdFor(m => m.Values[i].Value))" class="sliderlabel center">@value</span>
                <span class="sliderlabel right">@Model.Max</span>
            </div>
            
            <input type="range" class="slider" id="@Html.IdFor(m => m.Values[i].Value)" name="@Html.NameFor(m => m.Values[i].Value)" min="@Model.Min" max="@Model.Max" step="@Model.Step" value="@value" oninput="$('#showValue_@(Html.IdFor(m => m.Values[i].Value))').text($('#@(Html.IdFor(m => m.Values[i].Value))').val())"/>

            <div class="sliderlabels">
                <b class="sliderlabel left">@Model.MinLabel</b>
                <b class="sliderlabel right">@Model.MaxLabel</b>
            </div>
        </div>
    }
}




