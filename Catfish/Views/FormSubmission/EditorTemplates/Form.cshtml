@model Catfish.Core.Models.Form
    
@using Catfish.Core.Models.Forms;

@Html.Hidden("ModelType", Model.GetType().AssemblyQualifiedName, new Dictionary<string, object>()
{
    {"class", "model-type"}
})

@{
    var culture = Catfish.Helpers.ViewHelper.GetActiveLanguage();
    string lang = culture.TwoLetterISOLanguageName;

    for (int i = 0; i < Model.Fields.Count; ++i)
    {
        string name = Model.Fields[i].GetName(lang, true);
        string description = Model.Fields[i].GetDescription(lang);

        @Html.HiddenFor(m => m.Fields[i].IsRequired)

        <div class="form-field">
            @if (!string.IsNullOrEmpty(name))
            {
            <div class="name">
                @Html.Label(name)
            </div>
            }
            @if (!string.IsNullOrEmpty(description))
            {
            <div class="desc">
                @Html.Raw(description)
            </div>
            }
            <!--   Melania   -->
            <h1>Files</h1>
           @foreach (var f in Model.Fields[i].Files)
           {
               string source = Url.Action("File","Items", new  {id=Model.Id, guid=f.Guid });
           @:<div>
                  <span>@f.FileName -</span>
               if (f.ContentType.Contains("image"))
               {
                    <img src="@source" width="50" height="50" />
               }
               else if (f.ContentType.Contains("video"))
               {
                   string type = f.ContentType.Contains("mp4") == true ? "video/mp4" : f.ContentType.Contains("avi") == true ? "video/avi" : "video/ogg";
                    <video width="320" height="240" controls>
                        <source src="@source" type="@type">
                        Your browser does not support the video tag.
                    </video>
               }
               else
               {
                   //audio
                   string type = f.ContentType.Contains("mp3") == true ? "audio/mpeg" : "audio/ogg";
                <audio controls>
                    <source src="@source" type="@type">
                    Your browser does not support the audio element.
                </audio>
               }

             @:</div>
           }
            <!--   End Melania   -->
            <div class="input">
                @if (typeof(Attachment).IsAssignableFrom(Model.Fields[i].GetType()))
                {
                    @Html.EditorFor(m => Model.Fields[i],
                   new
                   {
                       UploadApiUrl = @Url.Action("upload", "attachment"),
                       DeleteApiUrl = @Url.Action("deleteCashedFile", "attachment"),
                       ParentId = Model.Id,
                       Controller = "items"
                   })

                }
                else
                {
                    @Html.EditorFor(m => Model.Fields[i])
                    <div class="error form-error" name="@Html.NameFor(m => Model.Fields[i])" style="display:none;"></div>
                }
            </div>
        </div>
    }
}
