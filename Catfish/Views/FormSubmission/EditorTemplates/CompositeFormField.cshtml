@model Catfish.Core.Models.Forms.CompositeFormField

@{ 
    string id = Model.Guid.Replace("-", "");
    string currentPath = ViewData.ContainsKey("ParentPath") ? (string)ViewData["ParentPath"] + "," : "";
    currentPath += "#" + id;

    bool stepThroughChildren = true; //TODO: Set as property on CopositeFormField
    bool parentStepThrough = ViewData.ContainsKey("StepThroughChildren") ? (bool)ViewData["StepThroughChildren"] : false;

    string newClass = parentStepThrough ? "stepField" : "";
    //bool isLeaf = !((bool)ViewData["StepThroughChildren"]);

}

@Html.Hidden("ModelType", Model.GetType().AssemblyQualifiedName, new Dictionary<string, object>()
{
    {"class", "model-type"}
})
@Html.HiddenFor(m => m.Guid)

<div id="@id" class="@newClass">
    @for (int i = 0; i < Model.Fields.Count; ++i)
    {
        string fieldName = Model.Fields[i].GetName();
        if (!string.IsNullOrEmpty(fieldName))
        {
            <div><label class="control-label">@fieldName</label></div>
        }
        @Html.EditorFor(m => Model.Fields[i], new { ParentPath = currentPath, QuestionIndex = ViewData["QuestionIndex"], StepThroughChildren = stepThroughChildren })
    }

</div>
