@model Catfish.Core.Models.Forms.TextField

@{ 
    IDictionary<string, object> htmlAttributes = new Dictionary<string, object>();

    if (Model.IsRequired)
    {
        htmlAttributes.Add("required", "required");
    }

    string id = Model.Guid.Replace("-", "_");
    string idPath = Html.IdFor(m => m.Values) + "_{0}";
    string namePath = Html.NameFor(m => m.Values) + "[{0}]";
}

@Html.Hidden("ModelType", Model.GetType().AssemblyQualifiedName, new Dictionary<string, object>()
{
    {"class", "model-type"}
})

@{ 
    string lang = Catfish.Helpers.ViewHelper.GetActiveLanguage().TwoLetterISOLanguageName;
}

<div id="@id">
@Html.HiddenFor(m => m.Guid)
@for (int i = 0; i < Model.Values.Count(); ++i)
{

    if (Model.Values[i].LanguageCode == lang)
    {
        <div>
            @Html.HiddenFor(m => m.Values[i].LanguageCode)
            @Html.TextBoxFor(m => m.Values[i].Value, htmlAttributes)

            @if (Model.IsMultiple && i > 0)
            {
                <button class="btn btn-secondary" click="$(this).parent().remove(); return false;">Remove</button>
            }

            @Html.ValidationMessageFor(m => m.Values[i].Value)
        </div>
    }
}
</div>

@if (Model.IsMultiple)
{
    <button class="btn btn-primary" onclick="addTextFieldRow($('#@id'), '@idPath', '@namePath', '@(Html.NameFor(m => m.Values)).Index', '@lang', @Model.IsRequired); return false;">Add</button>
}




