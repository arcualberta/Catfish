@model Catfish.Core.Models.Forms.TextField

@{ 
    string id = Model.Guid.Replace("-", "");
    string currentPath = ViewData.ContainsKey("ParentPath") ? (string)ViewData["ParentPath"] + "," : "";
    currentPath += "#" + id;

    bool parentStepThrough = ViewData.ContainsKey("StepThroughChildren") ? (bool)ViewData["StepThroughChildren"] : false;
    string newClass = parentStepThrough ? "stepField" : "";

    if (parentStepThrough && ViewData.ContainsKey("QuestionIndex"))
    {
        ((List<string>)ViewData["QuestionIndex"]).Add(currentPath);
    }
}

@Html.Hidden("ModelType", Model.GetType().AssemblyQualifiedName, new Dictionary<string, object>()
{
    {"class", "model-type"}
})

@{ 
    string lang = Catfish.Helpers.ViewHelper.GetActiveLanguage().TwoLetterISOLanguageName;
}

@Html.HiddenFor(m => m.Guid)
@for (int i = 0; i < Model.Values.Count(); ++i)
{
    if (Model.Values[i].LanguageCode == lang)
    {
        @Html.HiddenFor(m => m.Values[i].LanguageCode)
        @Html.TextBoxFor(m => m.Values[i].Value, new { id = id, @class = newClass })
    }
}




