@model Catfish.Core.Models.Forms.Attachment

@Html.Hidden("ModelType", Model.GetType().AssemblyQualifiedName, new Dictionary<string, object>()
{
    {"class", "model-type"}
})
@Html.HiddenFor(m => m.Ref)

@{
    string guid = Guid.NewGuid().ToString("N");

    string uploadFieldId = "uploadField_" + guid;
    string uploadFieldCssId = "#" + uploadFieldId;

    string uploadButtonId = "uploadButton_" + guid;
    string uploadButtonCssId = "#" + uploadButtonId;

    string progressBarId = "progressBar_" + guid;
    string progressBarCssId = "#" + progressBarId;

    string messageBoxId = "uploadErrorMessage_" + guid;
    string messageBoxCssId = "#" + messageBoxId;

    string thumbnailPanelId = "thumbnailPanel_" + guid;
    string thumbnailPanelCssId = "#" + thumbnailPanelId;

    string uploadFunction = "upload_" + guid;
    string delFunction = "del_" + guid;
}

<script>
    function @{@uploadFunction}() {
        uploadFile(0, uploadApiUrl, deleteApiUrl, "@uploadFieldCssId", "@uploadButtonCssId", "@progressBarCssId", "@messageBoxCssId", "@thumbnailPanelCssId");
    }

    function @{@delFunction} (guidName) {
        deleteFile(guidName, deleteApiUrl, "@messageBoxCssId");
    }

    $(function () {
        $("@progressBarCssId").hide();
    });

</script>


<div class="inner file-upload" style="clear:both">
    <input type='file' id='@uploadFieldId' name="files" multiple="multiple" />
    <input type="button" value="Upload" id="@uploadButtonId" onclick="@{@uploadFunction}(); return false;" />
    <div id="@progressBarId"><progress></progress></div>
    <div id="@messageBoxId"></div>
</div>

<script>
    $(function () {
        $("@progressBarCssId").hide();
    });
</script>