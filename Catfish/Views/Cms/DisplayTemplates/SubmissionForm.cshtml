@model Catfish.Models.Blocks.SubmissionForm
@*
    This view is used for rendering forms that are submitted to create new Items. Each
    item is created using the data-item template that is idenfified by is-root = true in
    the entity template.
    Note that this template should only be used for creating new items. It should NOT be
    used for updating existing items.
*@
@using Catfish.Core.Authorization.Requirements;
@using Microsoft.AspNetCore.Authorization;
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService _authorizationService;
@inject Catfish.Services.IEntityTemplateService _entityTemplateService;
@inject Catfish.Core.Services.IWorkflowService _workflowService;
@{
    string suffix = Guid.NewGuid().ToString();
    string formPostUrl = "/api/items";
    var entityTemplateId = Guid.Parse(Model.SelectedItemTemplate);
    var collectionId = Guid.Parse(Model.SelectedCollection);
    string function = Model.WorkflowFunction;
    string group = Model.WorkflowGroup;
    var template = _entityTemplateService.GetTemplate(entityTemplateId);

    var Item = template.InstantiateRootItem();

    var postActions = _workflowService.GetPostActions(template, function, group);
    string successMessage = string.IsNullOrEmpty(Model.SubmissionConfirmation.Value.ToString()) ? "" : Model.SubmissionConfirmation.Value.ToString();

}
@{
    if ((await _authorizationService.AuthorizeAsync(User, template
                   , new List<IAuthorizationRequirement>
   () { TemplateOperations.Instantiate }))
   .Succeeded)
    {
        <div class="submission-form-block @Model.CssClass.Value">
            <form id="submissionForm_@suffix" method="post" action="@formPostUrl">
                <input data-val="true" data-val-required="The TemplateId field is required."
                       id="entityTemplateId_@suffix" name="entityTemplateId" type="hidden"
                       value="@entityTemplateId">
                <input data-val="true" data-val-required="The ColectionId field is required."
                       id="collectionId_@suffix" name="collectionId" type="hidden"
                       value="@collectionId">
                <input data-val="true" data-val-required="The Function field is required."
                       id="function" name="function" type="hidden"
                       value="@function">
                <input data-val="true" data-val-required="The Group field is required."
                       id="group" name="group" type="hidden"
                       value="@group">


                @Html.EditorFor(model => Item, Item.GetType().ToString())
                <div id="buttonLayer">
                    @{
                        foreach (var postAction in postActions)
                        {
                            string buttonName = @postAction.ButtonLabel + "_" + @suffix;

                            if (postAction.PopUps.Any())
                            {
                                foreach (var popup in postAction.PopUps)
                                {
                                    <input id="@postAction.ButtonLabel" class="btn btn-success" name="@postAction.ButtonLabel" type="button" value="@postAction.ButtonLabel" data-toggle="modal" data-target="#submissionModal" />
                                    <div id="submissionModal" class="modal fade" role="dialog">

                                        <div>
                                            <div class="modal-dialog">
                                                @*Modal content*@
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="myModalLabel">@popup.Title</h5>
                                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <div class="card-body">
                                                            <div class="form-group">
                                                                <h5>@popup.Message</h5>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="modal-footer">
                                                        @{
                                                            foreach (var button in popup.Buttons)
                                                            {
                                                                if (button.Text == "Cancel")
                                                                {
                                                                    <button id="close-modal-button_@suffix" type="button" class="btn btn-primary" data-dismiss="modal">@button.Text</button>
                                                                }
                                                                else
                                                                {
                                                                    <button id="@buttonName" type="submit" class="btn btn-success" onclick="submitForm('@suffix', '@successMessage');">@button.Text</button>
                                                                }
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <input id="@buttonName" class="btn btn-success" name="@postAction.ButtonLabel" type="submit" value="@postAction.ButtonLabel" />
                            }
                        }
                    }

                </div>

            </form>
            <div id="submission-result-message_@suffix"></div>
        </div>
    }
}
