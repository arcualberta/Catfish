@model Piranha.Extend.Blocks.ImageGalleryBlock
@using Piranha.Extend.Blocks
@using Catfish.Helper;
@using ElmahCore;

@inject ICatfishAppConfiguration _catfishConfig;
@inject ErrorLog _errorLog;

@{
    var unique = "gallery-" + Guid.NewGuid().ToString();

    var displayThumbnails = _catfishConfig.DisplayCarouselThumbnails();
    int indicatorIndex = 0;

    //Computing the dimentions of the carousel slides based on the size of the images in the carousel
    var media = Model.Items
        .Where(item => typeof(ImageBlock).IsAssignableFrom(item.GetType()) && (item as ImageBlock).Body.Media != null)
        .Select(item => (item as ImageBlock).Body.Media)
        .FirstOrDefault();

    int slideWidth = media != null && media.Width.HasValue ? media.Width.Value : 1000; //pixels
    int slideHeight = media != null && media.Height.HasValue ? media.Height.Value : 400; //pixels
}

@if (!displayThumbnails)
{ //default image gallery from piranha
    <div id="@unique" class="carousel slide gallery-block" data-ride="carousel">
        <ol class="carousel-indicators">
            @for (var n = 0; n < Model.Items.Count; n++)
            {
                <li data-target="#@unique" data-slide-to="@n" class="@(n == 0 ? "active" : "")"></li>
            }
        </ol>
        <div class="carousel-inner">
            @foreach (var item in Model.Items)
            {
                <div class="carousel-item @(item == Model.Items.First() ? "active" : "")">
                    @try
                    {
                        if (((ImageBlock)item).Body.Media == null)
                        {
                            <div style="width:100%;height:@string.Format("{0}px", slideHeight);background-color:#808080"></div>
                            throw new Exception("No image is specified for a carousel slide");
                        }
                        else
                        {
                            <img src="@Url.Content(WebApp.Media.ResizeImage(((ImageBlock)item).Body.Media, slideWidth, slideHeight))" class="d-block w-100">
                            @*<img src="@Url.Content(((ImageBlock)item).Body.Media.PublicUrl)" class="d-block">*@
                        }
                    }
                    catch (Exception ex)
                    {
                        _errorLog.Log(new Error(ex));
                    }
                </div>
            }
        </div>
        <a class="carousel-control-prev" href="#@unique" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#@unique" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
}
else
{
    //our custom with thumbnail
    <div id="@unique" class="carousel slide gallery-block" data-ride="carousel">

        <div class="carousel-inner">
            @foreach (var item in Model.Items)
            {
                <div class="carousel-item @(item == Model.Items.First() ? "active" : "")">
                    <img src="@Url.Content(WebApp.Media.ResizeImage(((ImageBlock)item).Body.Media, 890, 482))" class="d-block w-100">
                    @*<img src="@Url.Content(((ImageBlock)item).Body.Media.PublicUrl)" class="d-block">*@
                </div>
            }
        </div>
        <a class="carousel-control-prev" href="#@unique" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#@unique" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>

        <ul class="carousel-indicators thumb-list-inline mx-auto border px-2">
            @foreach (var item in Model.Items)
            {

                <li class="list-inline-item @(item == Model.Items.First() ? "active" : "")">
                    <a id="carousel-selector-@indicatorIndex" class="@(item == Model.Items.First() ? "selected" : "")" data-slide-to="@indicatorIndex" data-target="#@unique">
                        <img src="@Url.Content(WebApp.Media.ResizeImage(((ImageBlock)item).Body.Media, 80, 60))" class="img-fluid">
                    </a>
                </li>
                indicatorIndex++;
            }
        </ul>
    </div>
}