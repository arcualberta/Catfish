@model Catfish.Models.Blocks.ItemListBlock

@using Catfish.Core.Authorization.Requirements;
@using Microsoft.AspNetCore.Authorization;
@using Catfish.Core.Models;


@inject Microsoft.AspNetCore.Authorization.IAuthorizationService _authorizationService;
@inject Catfish.Services.IEntityTemplateService _entityTemplateService;

@inject Catfish.Services.ISubmissionService _submissionService;
@{
    var entityTemplateId = Guid.Parse(Model.SelectedItemTemplate);
    var collectionId = string.IsNullOrEmpty(Model.SelectedCollection) ? null as Guid? : Guid.Parse(Model.SelectedCollection);

    var template = _entityTemplateService.GetTemplate(entityTemplateId);

    //var options = Model.Report.Select(op =>
    //        new SelectListItem
    //        {
    //            Value = op.Id.ToString(),
    //            Text = op.OptionText.GetConcatenatedContent(" | "),
    //        }).ToList();
    //options.Insert(0, new SelectListItem());

    var reportTemplates = template.Reports.Select(r=>new SelectListItem { Value= r.Id.ToString(), Text=r.Name }).ToList();
    string reportTemplateId="reportTemplate";

}
@if ((await _authorizationService.AuthorizeAsync(User, template, new List<IAuthorizationRequirement>() { TemplateOperations.ListInstances }))
.Succeeded)
{
<div class="row col-md-12">
    <div>Report Template :</div>
    <div>@Html.DropDownList("ReportTemplate", new SelectList(reportTemplates, "Value", "Text")," --- Select Report Template -- ", new {id = @reportTemplateId })</div>
    @*<div>@Html.DropDownListFor(m=>selectedReportTemplate, new SelectList(reportTemplates, "Value", "Text"), "---Select Report Template ---")</div>*@
    
</div>
    <div class="row col-md-12">
        <div class="col-md-5 form-group">
            <label>From:</label> <input type="date" name="startDate" id="startDate" class="form-control" />
        </div>
        <div class="col-md-5 form-group"> <label class="form-label">To:</label><input type="date" name="endDate" id="endDate" class="form-control" /></div>
        <button onclick="filterItems('@entityTemplateId', '@collectionId', $('#startDate').val(), $('#endDate').val(), 'itemListBlockTable',@reportTemplateId);" class="btn btn-default btn-primary" style="margin-top:30px; height:fit-content;" value="Execute">Go<i class="fa fa-arrow-right" style="padding-left:5px;"></i></button>
    </div>

    @*<button id="downloadCsvFile" class="btn btn-default btn-primary" onclick="generateCSV('Items_@DateTime.Now.ToShortDateString()','itemListBlockTable' )"><span class="fa fa-download" style="padding-right:5px;"></span>Download CSV</button>*@

    <div id="itemListResultBlock" class="table-responsive">

    </div>
}
else
{
    var errorMessage = string.IsNullOrWhiteSpace(Model.AuthorizationFailureMessage.Value) ? "Authorization failed." : Model.AuthorizationFailureMessage.Value;
    <div class="alert alert-danger">@Html.Raw(errorMessage)</div>
}




