@model Catfish.Models.Widgets.Carousel

@{
    var cssId = Model.CssId != null ? Model.CssId : "DefaultCarouselId";
    var cssClasses = Model.CssClasses;
}

<style>
    #@cssId{
        padding:0;
        margin-top:-20px;
    }
    #@cssId div.carousel-inner > div.item{
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center;
        height: 400px;
    }

    @Model.CssStyles
</style>

<div id="@cssId" class="carousel slide @cssClasses" data-ride="carousel">
    @{ var slides = Model.Slides; }
    @if (Model.EnableControls)
    {
        <ol class="carousel-indicators">
            @for (var i = 0; i < slides.Count; ++i)
            {
                var isActive = i == 0 ? "active" : "";
                <li data-target="#@cssId" data-slide-to="@i" class="@isActive"></li>
            }
        </ol>
    }
    <div class="carousel-inner" role="listbox">
        @{
            for (var i = 0; i < slides.Count; ++i)
            {
                var isActive = i == 0 ? "active" : "";
                var imageUrl = slides[i].PrimaryMedia.Id == Guid.Empty ? null : "/media/" + slides[i].PrimaryMedia.Id;
                var inlineStyles = imageUrl == null ? "background-color:#808080;" : "background-image:url('" + imageUrl + "');";
                <div class="item @isActive" style="@inlineStyles">
                    @{
                        var showCaption = !string.IsNullOrEmpty(slides[i].Title);
                        var showBody = !(slides[i].Body == null || string.IsNullOrEmpty(slides[i].Body.ToString()));
                        if (showCaption || showBody)
                        {
                            <div class="carousel-caption">
                                @if (showCaption)
                                {
                                    <h3>@slides[i].Title</h3>
                                }
                                @if (showBody)
                                {
                                    <p>@Html.Raw(slides[i].Body)</p>
                                }
                                @if (!string.IsNullOrEmpty(@slides[i].ReadMoreLink))
                                {
                                    var linkText = string.IsNullOrEmpty(@slides[i].ReadMoreLinkText) ? "more ..." : @slides[i].ReadMoreLinkText;
                                    <p><a href="@slides[i].ReadMoreLink">@linkText</a></p>
                                }
                            </div>
                        }
                    }
                </div>
            }
        }
    </div>
    @*@if (Model.EnableControls)*@
    @*{*@
        <a class="carousel-control-prev" href="#@cssId" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#@cssId" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    @*}*@
</div>
@{var interval = Model.Interval == 0 ? 3000 : Model.Interval;}
<script language="JavaScript" type="text/javascript">
    $(document).ready(function () {
        $('#@cssId').carousel({
            interval: @interval,
            pause: "false"
            });
    });
</script>
