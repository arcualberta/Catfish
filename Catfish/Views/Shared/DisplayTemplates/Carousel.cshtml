@model Catfish.Models.Widgets.Carousel

<style>
    div.carousel-inner > div.item{
        background-repeat: no-repeat;
        background-size: cover;
    background-position: center;
        height: 400px;
    }

    @Model.CssStyles
</style>
@{
    var cssId = Model.CssId;
    var cssClasses = Model.CssClasses;
    var slides = Model.Slides;
}

<div id="@cssId" class="carousel slide @cssClasses" data-ride="carousel">
    @if (Model.EnableControls)
    {
        <ol class="carousel-indicators">
            @for (var i = 0; i < slides.Count; ++i)
            {
                var isActive = i == 0 ? "active" : "";
                <li data-target="#@cssId" data-slide-to="@i" class="@isActive"></li>
            }
        </ol>
    }
    <div class="carousel-inner" role="listbox">
        @{
            for (var i = 0; i < slides.Count; ++i)
            {
                var isActive = i == 0 ? "active" : "";
                var inlineStyles = "background-image:url('" + slides[i].ImageURL + "');";
                <div class="item @isActive" style="@inlineStyles">
                    @if(!string.IsNullOrEmpty(@slides[i].CaptionHeading) || !string.IsNullOrEmpty(@slides[i].CaptionDescription))
                    {
                        <div class="carousel-caption">
                            @if(!string.IsNullOrEmpty(@slides[i].CaptionHeading))
                            {
                                <h3>@slides[i].CaptionHeading</h3>
                            }
                            @if (!string.IsNullOrEmpty(@slides[i].CaptionDescription))
                            {
                                <p>@slides[i].CaptionDescription</p>
                            }
                            @if (!string.IsNullOrEmpty(@slides[i].ReadMoreLink))
                            {
                                var linkText = string.IsNullOrEmpty(@slides[i].ReadMoreLinkText) ? "more ..." : @slides[i].ReadMoreLinkText;
                                <p><a href="@slides[i].ReadMoreLink">@linkText</a></p>
                            }
                        </div>
                    }
                </div>
            }
        }
    </div>
    @*@if (Model.EnableControls)*@
    @*{*@
        <a class="carousel-control-prev" href="#@cssId" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#@cssId" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    @*}*@
</div>
@{var interval = Model.Interval == 0 ? 1000 : Model.Interval;}
<script language="JavaScript" type="text/javascript">
    $(document).ready(function () {
        $('#carouselExampleIndicators').carousel({
            interval: @interval
        })
    });
</script>
