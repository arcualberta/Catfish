@model Catfish.Models.Regions.ListEntitiesPanel
@using Catfish.Core.Models;


 @{ string cssId = string.IsNullOrEmpty(Model.CssId) ? Guid.NewGuid().ToString().Replace('-', 'K') : Model.CssId;
     string cssClasses = string.IsNullOrEmpty(Model.CssClasses) ? "" : Model.CssClasses;
     string cssStyles = string.IsNullOrEmpty(Model.CssStyles) ? "" : Model.CssStyles;
 }
<div id="@cssId" class="bs @cssClasses container container-fluid">
    <style type="text/css" scoped>
           @Html.Raw(cssStyles)
    </style>
   <div class="row" style="text-align:center;margin-top:20px;">
       <button class="btn-link" name="listEntitiesPanel_prev_button" onclick="GoToPage('Prev'); return false;"><span style="align-content:center"><span class="glyphicon glyphicon-backward"></span>Prev</span></button>
       <input name="listEntitiesPanel_page_number" placeholder="1" value="" style="width:15px; height:15px;" />
       <button class="btn-link" name="listEntitiesPanel_next_button" onclick="GoToPage('Next'); return false;"><span style="align-content:center">Next<span class="glyphicon glyphicon-forward"></span></span></button>
    </div>
    <div class="row ">
        <table class="table table-responsive table-striped">
            <tr>
                @*header*@
                @foreach (var m in Model.Mappings)
                {
                    string header = m.Label;
                    if (!string.IsNullOrEmpty(header))
                    {
                        <th>@header</th>
                    }
                }
            </tr>

            @*content*@
            <tbody id="ListEntitiesPanelTableBody">
                @foreach (var item in Model.Items)
                {
                    <tr>
                        @foreach (var f in Model.Mappings)
                        {
                            string content = item.GetAttributeMappingValue(f.Name);
                            <td>@content</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row" style="text-align:center;">
        <button class="btn-link" name="listEntitiesPanel_prev_button"  onclick="GoToPage('Prev'); return false;" ><span style="align-content:center"><span class="glyphicon glyphicon-backward"></span>Prev</span></button>
        <input name="listEntitiesPanel_page_number" placeholder="1" value="" style="width:15px; height:15px;" />
        <button class="btn-link" name="listEntitiesPanel_next_button" onclick="GoToPage('Next'); return false;"><span style="align-content:center">Next<span class="glyphicon glyphicon-forward"></span></span></button>
    </div>
</div>

<script>
      //Need to be set in order to also use QueryFilterPanel
    Min_ParameterName = '@Model.Min_Parameter';
    Max_ParameterName = '@Model.Max_Parameter';
    var @(cssId)page = @Model.CurrentPage;


    //Min_Parameter and Max_parameter is the <input> id on QueryFilterPanel
   //  $("#Min_Parameter").val(Min_Value);
   //  $("#Max_Parameter").val(Max_Value);

   $(document).ready(function() {
       var curPage = @(cssId)page;

       if(curPage == 1)
        {
           $("[name='listEntitiesPanel_prev_button']").hide();
        }

       if(@Model.ItemCount < @Model.ItemPerPage)
        {
             $("[name='listEntitiesPanel_next_button']").hide();
        }
        $("[name='listEntitiesPanel_page_number']").val(curPage);
   });

    function GoToPage(whichPage){
        var currPage = @(cssId)page;

        if(whichPage === "Prev")
        {
             currPage = currPage - 1;
             currPage = currPage < 1 ? 1 : currPage; //to avoid 0
        }
        else if(whichPage === "Next"){
             currPage = currPage + 1;
        }

     //set min/max year
      var urlParams = new URLSearchParams(window.location.search);

      var min =urlParams.has('@Model.Min_Parameter') ? urlParams.get('@Model.Min_Parameter') : "";
      var max = urlParams.has('@Model.Max_Parameter') ? urlParams.get('@Model.Max_Parameter')  : "";
      var mapIds = [@Html.Raw(String.Join(",", Model.Fields.ToArray().Select(i=>i)))]; //[13,15]



    var url = `@Url.Action("GetPageItems", "Items")`;

       $.ajax({
        type: 'GET',
        url:url,
        dataType: 'json',
        traditional: true,
        data:{page: currPage, itemPerPage:@Model.ItemPerPage,selectedMetadataSet: `@Model.SelectedMetadataSet`, selectedField: `@Model.selectedFilterField`,mapIds:mapIds, min: min, max: max},
        success:function(result){

        //remove all rows in the tbody
        var body = $("#ListEntitiesPanelTableBody");
            body.children().remove();  //remove all row on the tbody

        //update table data
        result.forEach(function(r, i){ //going through each row
             var new_row = "<tr>";
              r.forEach(function(c, j){ //going through each column
                     new_row += "<td>" + c + "</td>";
               });
              new_row += "</tr>";
              body.append(new_row);
           });

            $("[name='listEntitiesPanel_page_number']").val(currPage);
             if(currPage == 1)
            {
                $("[name='listEntitiesPanel_prev_button']").hide();
            }
             else{
                 $("[name='listEntitiesPanel_prev_button']").show();
            }

        },
        error: function(){
          alert("Problems while updating table data");
        }
    });


    }


</script>