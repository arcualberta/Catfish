@model Catfish.Models.Regions.SearchResults
@using Catfish.Models.Regions

@{ 
    int pageStart = (Model.Page - 1) * Model.TotalPerPage;
    int pageEnd = pageStart + Model.TotalPerPage;

    if(pageEnd > Model.Total)
    {
        pageEnd = Model.Total;
    }
}

@helper DisplayPagination(int pageStart, int pageEnd) {
int[] resultsPerPage = { 10, 20, 50, 100 };
var uriBuilder = new UriBuilder(Request.Url.AbsoluteUri);
var query = HttpUtility.ParseQueryString(uriBuilder.Query);
int pagesShown = 10;
int pageListStart = Model.Page - (pagesShown >> 1);

if(pageListStart < 1)
{
    pageListStart = 1;
}
int pageListEnd = pageListStart + pagesShown - 1;
if(pageListEnd > Model.TotalPages)
{
    pageListEnd = Model.TotalPages;
}

    <div class="row">
        <div class="col-xs-6 col-md-4 text-left">
            @if(Model.Page > 1)
            {
                query[SearchResults.PAGE_PARAM] = (Model.Page - 1).ToString();
                uriBuilder.Query = query.ToString();
                <a href="@uriBuilder.ToString()">&lt;</a>
            }
            @for(int i = pageListStart; i < Model.Page; ++i)
            {
                query[SearchResults.PAGE_PARAM] = i.ToString();
                uriBuilder.Query = query.ToString();
                <a href="@uriBuilder.ToString()">@i</a>
            }

            <span>@Model.Page</span>

            @for (int i = Model.Page + 1; i <= pageListEnd; ++i)
            {
                query[SearchResults.PAGE_PARAM] = i.ToString();
                uriBuilder.Query = query.ToString();
                <a href="@uriBuilder.ToString()">@i</a>
            }

            @if (Model.Page < pageListEnd)
            {
                query[SearchResults.PAGE_PARAM] = (Model.Page + 1).ToString();
                uriBuilder.Query = query.ToString();
                <a href="@uriBuilder.ToString()">&gt;</a>
            }
        </div>
        <div class="col-xs-6 col-md-4 text-center">
            @(string.Format(Catfish.Resources.Views.Shared.DisplayTemplates.SearchResults.SearchCountFormat,
                pageStart + 1,
                pageEnd,
                Model.Total))
        </div>
        <div class="hidden-xs hidden-sm col-md-4 text-right">
            <select onchange="window.location = this.value">
                @for (var i = 0; i < resultsPerPage.Length; ++i)
                {
                    query[SearchResults.PAGE_PARAM] = "1";
                    query[SearchResults.PERPAGE_PARAM] = resultsPerPage[i].ToString();
                    uriBuilder.Query = query.ToString();
                    <option value="@uriBuilder.ToString()" @(Model.TotalPerPage == resultsPerPage[i] ? "selected" : "")>@string.Format(Catfish.Resources.Views.Shared.DisplayTemplates.SearchResults.ResultsPerPage, resultsPerPage[i])</option>
                }
            </select>
        </div>
    </div>
}

<h2>@string.Format(Catfish.Resources.Views.Shared.DisplayTemplates.SearchResults.SearchResultsFormat, Request.QueryString[SimpleSearch.QUERY_PARAM])</h2>

@if (Model.Results != null && Model.Results.Length > 0)
{
@DisplayPagination(pageStart, pageEnd)
    <div>
    
        @for (int i = 0; i < Model.Results.Count(); ++i)
        {
            int index = i + 1 + pageStart;
            @Html.DisplayFor(m => m.Results[i], Model.SearchResultTemplate, new { Index = index})
        }
    </div>
    @DisplayPagination(pageStart, pageEnd)
}
else
{
    <h3>@Catfish.Resources.Views.Shared.DisplayTemplates.SearchResults.NoResults</h3>
}
