@model Catfish.Models.Regions.CalculatedFieldPanel

@{
    string cssId = string.IsNullOrEmpty(Model.CssId) ? Guid.NewGuid().ToString().Replace('-', 'K') : Model.CssId;
    string cssClasses = string.IsNullOrEmpty(Model.CssClasses) ? "" : Model.CssClasses;
    string cssStyles = string.IsNullOrEmpty(Model.CssStyles) ? "" : Model.CssStyles;

    string scriptVariable = "CalculatedFieldPanel" + Guid.NewGuid().ToString("N");
}

@Model.RenderScript("~/Scripts/calculatedField.js", Url)

<div id="@cssId" class="bs @cssClasses container container-fluid calculatedField" data-script-variable="@scriptVariable">
   
        <style type="text/css" scoped>
                    @Html.Raw(cssStyles)
        </style>
        <div>@Html.DisplayFor(m => m.Title)</div>
        <div id="@(cssId)_Result"></div>        
</div>

<script>
    window['@scriptVariable'] = new CalculatedField('@cssId', @Html.Raw(Json.Encode(Url.Action("GetStatsData", "Items"))),
        @Html.Raw(Json.Encode(Catfish.Resources.Global.Loading)), @Html.Raw(Json.Encode(string.IsNullOrEmpty(Model.Prefix) ? "" : Model.Prefix)),
        @Html.Raw(Model.DecimalPlaces), @Html.Raw(Json.Encode(Model.SelectedFunction)),
        @Html.Raw(Json.Encode(Model.SelectedFieldMetadataSet)), @Html.Raw(Json.Encode(Model.SelectedField)),
        @Html.Raw(Json.Encode(Model.SelectedGroupByFieldMetadataSet)), @Html.Raw(Json.Encode(Model.SelectedGroupByField)));
</script>