@model Catfish.Models.Regions.BulletinBoard

@{ 
    string apiUrl = "/apix/items";
    string divId = string.IsNullOrEmpty(Model.CssId) ? Guid.NewGuid().ToString() : Model.CssId;
 }

<script>
    function getRequiredItemCount(containerId)
    {
        var containerWidth = $("#" + containerId + " .panel").width();
        var numRows = @Model.RowCount;
        if (numRows == 0)
            numRows = 3;
        var itemWidth = 100;
        var count = Math.floor(containerWidth / itemWidth) * numRows;
        return count;
    }

    function renderImages(data, positionRandomly, containerId, replaceExisting) {
        var current = $("#" + containerId + " .panel div");

        for (var i = 0; i < data.length; ++i) {
            if (i < current.length && replaceExisting) {
                current[i].remove();
            }

            var tile = $.parseHTML('<div style="background-image:url(\'' + data[i].Thumbnail + '\')"></div>');
            $(tile).attr("class", "item col-xs-1");
            $(tile).attr("id", data[i].Id);
            $(tile).attr("onclick", "showDetails(this, '" + containerId + "');");
            $(tile).data("image", data[i].Image)
            $(tile).data("metadata", data[i].Metadata)
            

            $("#" + containerId + " .panel").append(tile);
        }
    }

    function loadImages(offset, count, collectionId, entityTypeId, selectRandomly, positionRandomly, containerId, replaceExisting)
    {
        if (count < 0)
            count = getRequiredItemCount(containerId);

        var myFrm = new FormData();     //create a new form
        myFrm.append("offset", offset);
        myFrm.append("limit", count);
        myFrm.append("collectionId", collectionId);
        myFrm.append("entityTypeId", entityTypeId);
        myFrm.append("randomize", selectRandomly);
        myFrm.append("fields", "words");

        var oReg = new XMLHttpRequest();
        var stateChange = function (data) {
            if (oReg.readyState === 4) {  //after successfull execute the function then it will execute what ever inside this if {}
                if (oReg.status === 200) {
                    var data = JSON.parse(data);
                    renderImages(data, positionRandomly, containerId, replaceExisting);
                    if (replaceExisting)
                        randomFocus = true;
                    $("#" + containerId + " .reloadBtn").show();
                }
                else {
                    //Error
                }
            }
        };

        if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {
            oReg.onload = function (event) { stateChange(event.target.response); };
        } else {
            oReg.onreadystatechange = function (data) { stateChange(data.srcElement.responseText); };
        }

        oReg.open('POST', "@apiUrl");
        oReg.send(myFrm);
    }

    function redraw(offset, collectionId, entityTypeId, selectRandomly, positionRandomly, containerId)
    {
        var requiredCount = getRequiredItemCount(containerId);
        var currentItems = $("#" + containerId + " .panel div");
        var diff = requiredCount - currentItems.length;

        if (diff > 0) {
            loadImages(offset + currentItems.length, diff, collectionId, entityTypeId, selectRandomly, positionRandomly, containerId, false);
        }

        //showing upto requiredCount of images int the crrent set and hiding enything in excess
        for (i = 0; i < Math.min(requiredCount, currentItems.length); ++i)
            $(currentItems[i]).show();
        for (i = requiredCount; i < currentItems.length; ++i)
            $(currentItems[i]).hide();
    }

    function showDetails(item, containerId) {

        if (activeItem != null)
            $(activeItem).css("border", "solid 1px #808080");

        activeItem = item;
        $(activeItem).css("border", "solid 3px red");

        $("#" + containerId + " .zoom").css("border", "solid 1px #808080");

        var imageDiv = $("#" + containerId + " .zoom .image");
        var imageUrl = $(item).data("image");
        $(imageDiv).css("background-image", "url('" + imageUrl + "')");

        var infoDiv = $("#" + containerId + " .zoom .info");
        $(infoDiv).empty();
        var metadata = $(item).data("metadata");

        for (var i = 0; i < metadata.length; ++i) {
            var fieldName = metadata[i].FieldName;
            var fieldValues = metadata[i].FieldValues;

            var field = $.parseHTML("<div class='field'><h3>" + fieldName + "</h3></div>");
            var vals = [];
            for (var j = 0; j < fieldValues.length; ++j) {
                vals.push(fieldValues[j].Value)
            }
            var csv = vals.join(", ");
            var p = $.parseHTML("<p>" + csv + "</p>");
            $(field).append(p);
            $(infoDiv).append(field);
        }
    }

    function zoomRandom(containerId) {
        if (randomFocus == true) {
            current = $("#" + containerId + " .panel div:visible");
            var idx = Math.floor(Math.random() * current.length);
            var item = current[idx];
            showDetails(item, containerId);
        }
    }

</script>

<style scoped>
    @Html.Raw(Model.CssStyles)
</style>

<div id="@divId" class="container bulletinboard @Model.CssClasses">
    <div class="row panel col-sm-9">

    </div>
    <div class="zoom col-sm-3">
        <div class="image"></div>
        <div class="info"></div>
    </div>
    <div style="clear:both" />
    <button class="btn btn-primary reloadBtn" style="display:none;" onclick='loadImages(0, -1, 0, 0, true, true, "@divId", true);'>See More ...</button>
</div>
<script>

    var randomFocus = true;
    var activeItem = null;
    $(function () {
        loadImages(0, -1, 0, 0, true, true, "@divId", true);
        var intervalID_1 = setInterval(function () {
            loadImages(0, -1, 0, 0, true, true, "@divId", true);
        }, (@Model.RefreshInterval * 1000));

        var intervalID_2 = setInterval(function () {
            zoomRandom("@divId");
        }, (5000));

    })

    $(window).resize(function () {
        redraw(0, 0, 0, true, true, "@divId");
    });
</script>