@using Microsoft.AspNetCore.Mvc.ViewEngines
@using Catfish.Models.SiteTypes
@using Catfish.Helper
@using Catfish.Models.Blocks;

@inject ICompositeViewEngine _viewEngine
@inject Catfish.Helper.ICatfishAppConfiguration _catfishAppConfig
@inject Catfish.Services.IAppService _appService;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor;

@{
    if (ViewBag.Title == null)
    {
        ViewBag.Title = Model.Title;
    }

    var pageModel = Model == null ? null : typeof(StandardPage).IsAssignableFrom(Model.GetType()) ? Model as StandardPage : null;
    List<string> vueComponentNames = new List<string>();
    List<CssBlock> cssBlocks = new List<CssBlock>();
    List<JavascriptBlock> javascriptBlocks = new List<JavascriptBlock>();

    if (pageModel != null)
    {
        vueComponentNames = pageModel.Blocks
            .Where(b => typeof(IVueComponent).IsAssignableFrom(b.GetType())) @*Selecting all blocks of type IVueConponent or its derived type.*@
            .Select(b => (b as IVueComponent).Component) @*Selecting all those blocks as IVueConponent blocks and getting their names.*@
            .Distinct()
            .ToList();

            cssBlocks = pageModel.Blocks
                .Where(b => typeof(CssBlock).IsAssignableFrom(b.GetType()))
                .Select(b => (b as CssBlock))
                .ToList();

            javascriptBlocks = pageModel.Blocks
                .Where(b => typeof(JavascriptBlock).IsAssignableFrom(b.GetType()))
                .Select(b => (b as JavascriptBlock))
                .ToList();
        }
}

<!doctype html>
<html lang="en">
<head>
    
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="google-signin-client_id" content="@_catfishAppConfig.GetGoogleClientId()">

    <link rel="shortcut icon" href="~/favicon.ico" />

    @*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">*@
    <link href="~/assets/js/vendor/Bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" />
    @*<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:300,400,500">*@
    <link href="~/assets/css/vendor/google-apis/fonts/css/Montserrat300-400-500.css" rel="stylesheet" />

    @*<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>*@
    <script src="~/assets/js/vendor/jquery/3.1.1/jquery-3.1.1-min.js"></script>

    <script src="~/assets/js/vendor/jquery/ui/1.12.1/js/jquery-ui.js"></script>
   
    <link href="~/assets/js/vendor/jquery/ui/1.12.1/css/jquery-ui.css" rel="stylesheet" />

    @*<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>*@
    <script src="~/assets/js/vendor/Bootstrap/4.3.1/js/bootstrap.min.js"></script>

    @*<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js" integrity="sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n" crossorigin="anonymous"></script>*@
    <script src="~/assets/js/vendor/Bootstrap/4.0.0/js/bootstrap.bundle.js"></script>


    @*<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">*@
    <link href="~/assets/css/vendor/font-awesome/v4.7.0/css/font-awesome.min.css" rel="stylesheet" />

    @*<script src="https://apis.google.com/js/platform.js?onload=onLoad" async defer></script>*@
    <script src="~/assets/js/vendor/google-apis/js/platform.js"></script>

    <link href="~/assets/css/public/style.css" rel="stylesheet" />
    <link href="~/assets/css/public/componentStyles.css" rel="stylesheet" />
    @*This is ARC website's css - moved to _CustomHead file where site is being built *@
    @*Transitions and animations available throughout publicfacing side*@
    <link href="~/assets/css/public/transitionAndAnimationPublicSide.css" rel="stylesheet" />

    @*Styls that are common to all blocks*@
    <link href="~/assets/css/public/commonBlockStyles.css" rel="stylesheet" />

    <script src="~/assets/js/catfish.js"></script>

    <script src="~/assets/js/_public-facing/scripts/component-scripts.js"></script>

    <script src="~/assets/js/_public-facing/scripts/item-list-functions.js"></script>
    <script src="~/assets/js/_public-facing/scripts/contact-form-block-functions.js"></script>
    <script src="~/assets/js/_public-facing/scripts/free-search-block-functions.js"></script>

    @{
        //Inserting custom CSS files
        string[] customStyles = _catfishAppConfig.GetValue("SiteConfig:PublicCss", new string[0]);
        foreach (var file in customStyles)
        {
            <link href="@file" rel="stylesheet" />
        }
    }
    <style>
        @foreach (var css in cssBlocks)
        {
            @Html.Raw(css.CssVal.Value);
        }
    </style>
    <script>
        @foreach (var js in javascriptBlocks)
        {
            @Html.Raw(js.JavascriptCode.Value);
        }
    </script>

    <title>@ViewBag.Title</title>

    @if (Model is Piranha.Models.IMeta)
    {
        <partial name="Partial/_Meta.cshtml" />
    }

    @RenderSection("head", required: false)

    <script src="/assets/js/vue/vue-dev.js"></script>
    <script src="~/assets/js/_public-facing/vue-header.js"></script>

    @*@if (vueComponentNames.Count > 0)
        {
            foreach (string compName in vueComponentNames)
            {
                <script src="@string.Format("/assets/js/_public-facing/{0}.js", compName)"></script>
            }
        }*@

    <script>
        let sitemap = @Json.Serialize(WebApp.Site.Sitemap);
        $(function () {
            updateBreadcrumb();
        });
    </script>

    @if (vueComponentNames.Count > 0)
    {
        foreach (string compName in vueComponentNames)
        {
            <script src="@string.Format("/assets/js/_public-facing/{0}.js", compName)"></script>
        }
    }
</head>

<body>
    <div id="vueApp">
        <partial name="/Views/Shared/Partial/VueComponents/_Header.cshtml" />
        @*@RenderBody()*@
        @{
            //Mr April 22 2021 -- Add ability to lockdown the whole site to limit access to Uofa users only (CAT-883)
            bool domainUser = false;
            string[] allowedDomains = _catfishAppConfig.GetAccessRestrictionAllowedDomains();
            if (allowedDomains != null && allowedDomains.Length > 0)
            {
                if (_httpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
                {
                    foreach (string d in allowedDomains)
                    {
                        if (_httpContextAccessor.HttpContext.User.Identity.Name.Contains(d))
                        {
                            domainUser = true;
                            break;
                        }
                    }
                }

                if (allowedDomains.Contains("*"))
                    domainUser = true;
            }


            bool allowedUser = domainUser || _httpContextAccessor.HttpContext.User.IsInRole("SysAdmin");


            if (!allowedUser && allowedDomains != null)//allowedDomain !=null this to make sure it won't crashed of this section sections is not in the appSettings.jason
            {
                <div class="container alert alert-danger">@_catfishAppConfig.GetValue("SiteConfig:AccessRestriction:Message", "")</div>
                IgnoreBody();
                return;
            }
            else
            {
                @RenderBody();
            }
        }

        @{
            var currentSite = await WebApp.Site.GetContentAsync<CatfishWebsite>();
            var javascriptCodeHeader = (currentSite == null || currentSite.HeaderContents == null || currentSite.HeaderContents.Javascript == null)
                ? "" : currentSite.HeaderContents.Javascript.Value;
            var cssCodeHeader = (currentSite == null || currentSite.HeaderContents == null || currentSite.HeaderContents.Css == null)
               ? "" : currentSite.HeaderContents.Css.Value;
            var javascriptCodeFooter = (currentSite == null || currentSite.FooterContents == null || currentSite.FooterContents.Javascript == null)
                ? "" : currentSite.FooterContents.Javascript.Value;
            var cssCodeFooter = (currentSite == null || currentSite.FooterContents == null || currentSite.FooterContents.Css == null)
               ? "" : currentSite.FooterContents.Css.Value;
        }
        <partial name="/Views/Shared/Partial/VueComponents/_Footer.cshtml" />


    </div>@*End of vueApp div *@

    @* Header/Footer additional scripts/css *@
    <script>
    @Html.Raw(javascriptCodeHeader)
    @Html.Raw(javascriptCodeFooter)
    </script>
    <style>
    @Html.Raw(cssCodeHeader)
    @Html.Raw(cssCodeFooter)
    </style>

    @RenderSection("script", required: false)

    @*Scripts/styling for public side Controlled Vocab Search Block *@
    <link href="~/assets/css/public/controlledVocabularySearchBlock.css" rel="stylesheet" />
    @*<script src="~/assets/dist/keywordsSearchBundle.js"></script>*@

    @* Rendering scripts and stylesheets registered by components before creating the vue app *@
    @foreach (var url in _appService.GetScriptUrls())
    {
        <script src="@url"></script>
    }
    @foreach (var url in _appService.GetStylesheetUrls())
    {
        <link href="@url" rel="stylesheet" />
    }

    <script>
        new Vue({ el: '#vueApp' })
    </script>

    @RenderSection("script", required: false)

    <script>
    function onLoad() {
        gapi.load('auth2', function () {
            gapi.auth2.init();
        });
    }

    function signOut() {
        //signout local login
        $.ajax({
            type: 'GET',
            url: "/CatfishUser",
            headers: {
                RequestVerificationToken:
                    $('input:hidden[name="__RequestVerificationToken"]').val()
            }
        }).done(function (result) {
            //sign out google gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();
            try {
                var auth2 = gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();
                auth2.signOut().then(function () {
                    //console.log('User signed out.');
                    auth2.disconnect();
                    window.location.href = "/";
                });
                auth2.disconnect();
            } catch (ex) {
                window.location.href = "/";
            }


        });
    }

    $(function () {
        @foreach (var call in _appService.GetOnLoadFunctionCalls())
        {
            @Html.Raw(call)
        }
    });

    </script>
    @*<script src="~/assets/dist/vendorsPublicFacingSide.js"></script>*@
</body>

</html>
