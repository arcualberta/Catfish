@model Catfish.Core.Models.Item
@using Piranha.Models
@using Catfish.Models.Regions;
@using Piranha.Extend.Regions;
@using Catfish.Helpers;

@{
    PageModel pageModel = ViewBag.PageModel as PageModel;
    ViewBag.Title = pageModel.Page.Title;
}

@{
    try
    {
        TextRegion styles = pageModel.Regions.Styles as TextRegion;
        if (!string.IsNullOrEmpty(styles.Body))
        {
            <style type="text/css" scoped>
                @Html.Raw(styles.Body)
            </style>
        }
    }
    catch (Exception) { }

}


<div class="content">
    <div class="main">
        <h1>
            @try
            {
                MultilingualText field = pageModel.Regions.PageTitle;
                @Html.DisplayFor(m => field, new { unformatted = true })
            }
            catch (Exception)
            {
                @pageModel.Page.Title
            }
        </h1>
        @{
            MultilingualText content = pageModel.Regions.Content as MultilingualText;
            @Html.DisplayFor(m => content)

            Form forRegion = pageModel.Regions.Form as Form;
            @Html.EditorFor(m => m, "Form", new { FormRegion = forRegion })
        }



    </div>
</div>
