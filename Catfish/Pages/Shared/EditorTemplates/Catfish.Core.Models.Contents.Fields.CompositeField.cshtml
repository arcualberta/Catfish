@model Catfish.Core.Models.Contents.Fields.CompositeField
@using Catfish.Core.Models.Contents.Data
@using System.IO;

@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.ModelType)
@{
    string templateId = "composite-field-template-" + Model.Id;
    string childListContainerId = "composite-field-child-list-container-" + Model.Id;

    //making sure the minimum unumber of children are present
    for (var i = Model.Children.Count; i < Model.Min; ++i)
    {
        var clone = Model.ChildTemplate.Clone() as DataItem;
        clone.Id = Guid.NewGuid();
        Model.Children.Add(clone);
    }

    var modelIdPrefix = Html.IdFor(model => model);
    var modelNamePrefix = Html.NameFor(model => model);
}

<div class="container">
    <div id="@templateId" 
         data-template-id="@Model.ChildTemplate.Id" 
         data-name-prefix="@modelNamePrefix" 
         class="row composite-field-template" 
         style="display: none;">

        <div class="col-10">
            @Html.EditorFor(model => model.ChildTemplate, Model.ChildTemplate.GetType().ToString())
        </div>
        <div class="col-1 text-right deleteButton"> <span class="fa fa-trash"></span></div>
    </div>

    <div id="@childListContainerId">
        @for (int i = 0; i < Model.Children.Count; i++)
        {

            string childDivId = Model.Children[i].Id + "_wrapper";

            <div class="row composite-field-child" id="@childDivId" data-cf-item-index="@i">
                <div class="col-10">
                    @Html.EditorFor(model => Model.Children[i], Model.Children[i].GetType().ToString())
                </div>
                <div class="col-1 text-right">
                    <span class="fa fa-trash" onclick="removeDataItem('@childListContainerId', '@childDivId', @Model.Min, '@modelNamePrefix'); return false;"></span>
                </div>
            </div>
        }
    </div>
</div>
@if (Model.Children.Count < Model.Max)
{
    string addButtonContainerId = Html.IdFor(model => model) + "_addChildButton";

    <div id="@addButtonContainerId" class="compositeFieldAddItem">

        <input type="button" class="btn btn-default btn-success" onClick="addDataItem('@childListContainerId', '@templateId', '@Model.Min', '@Model.Max'); return false;" value="Add" />

    </div>
}




