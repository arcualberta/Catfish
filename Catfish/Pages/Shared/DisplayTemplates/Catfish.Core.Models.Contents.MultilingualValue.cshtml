@model Catfish.Core.Models.Contents.MultilingualValue

    <div class="multilingual-input-block">
        @{
            var isMultiline = ViewData["multiline"] != null && (bool)ViewData["multiline"];
        }
        @for (int i = 0; i < Model.Values.Count; ++i)
        {
            if (Model.Values.Count > 1)
            {
                @Html.Label(Model.Values[i].Language)<span>: </span>
            }

            if (isMultiline)
            {
                string[] paragraphs = Model.Values[i].Value.Split(new char[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
                foreach (var para in paragraphs)
                {
                    <p>@Html.Raw(para)</p>
                }
            }
            else
            {
                @*<p>@Html.Raw(Model.Values[i].Value)</p>*@
                @*@Html.DisplayFor(model => model.Values[i].Value);*@
                @*<input type="text" readonly class="form-control-plaintext" id="staticEmail" value=@Model.Values[i].Value>*@
                <input class="form-control" type="text" placeholder=@Model.Values[i].Value aria-label="readonly input example" readonly>
            }
        }
    </div>