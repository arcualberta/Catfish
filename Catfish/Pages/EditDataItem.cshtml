@page "~/data/edit/{id:Guid?}"
@model Catfish.Pages.EditDataItemModel
@using Catfish.Core.Models.Contents.Fields;

@section head
{
    <script type="text/javascript" src="@Url.Content("~/assets/js/form.js")"></script>
}

@{
    ViewData["Title"] = "EditDataItem";
}

<h1>Edit Data Item</h1>

<form method="post">
    <div class="container">
        @for (int i = 0; i < Model.Item.Fields.Count; ++i)
        {
            <div class="row field-row">

                @if (typeof(InfoSection).IsAssignableFrom(Model.Item.Fields[i].GetType()))
                {
                    @Html.EditorFor(model => model.Item.Fields[i], Model.Item.Fields[i].GetType().ToString(), null, null)
                }
                else
                {
                    string fieldId = Html.IdFor(model => Model.Item.Fields[i]);

                    <div class="col-md-3 control field-label">
                        @Html.DisplayFor(model => Model.Item.Fields[i].Name, Model.Item.Fields[i].Name.GetType().ToString())
                    </div>

                    <div id="@fieldId" class="col-md-9 @Model.Item.Fields[i].CssClass field-value">
                        @Html.EditorFor(model => Model.Item.Fields[i], Model.Item.Fields[i].GetType().ToString())

                        @if (Model.Item.Fields[i].AllowMultipleValues)
                        {
                            <button type="button" class="btn btn-success btn-xs btn-add-value" onclick="addValue('@fieldId'); return false;">+</button>
                        }
                    </div>
                }
            </div>
        }
    </div>s
</form>

