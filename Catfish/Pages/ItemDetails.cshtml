@page "/items/{id:Guid}"
@model Catfish.Pages.ItemDetailsModel
@using Catfish.Core.Authorization.Requirements;
@using Microsoft.AspNetCore.Authorization;

@inject Piranha.Manager.ManagerLocalizer Localizer
@inject Catfish.Services.ISubmissionService _submissionService;
@inject Catfish.Core.Services.IWorkflowService _workflowService;
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService _authorizationService;
@inject Catfish.Services.IEntityTemplateService _entityTemplateService;
@{
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
}
@{
    var item = Model.Item;

    var rootDataItem = item.GetRootDataItem(false);
    string formPostUrl = "/api/items/DetailsUpdate";
    string suffix = Guid.NewGuid().ToString();
    var currentStatus = _submissionService.GetStatus(item.StatusId).Status;
    var template = _entityTemplateService.GetTemplate(item.TemplateId);
    var allPostActions = _workflowService.GetAllChangeStatePostActions(template, item.StatusId.Value);
    string successMessage = "";//string.IsNullOrEmpty(Model.SubmissionConfirmation.Value.ToString()) ? "" : Model.SubmissionConfirmation.Value.ToString();
}

@*Specify the status of the submission, followed by the last updated date*@

@*Display the content of the main submission (i.e. the data-item with is-root=true) *@


@*
    Display the contents of all associated data items, which are identified by is-rro=false.
*@
@{
    var associatedItems = item.DataContainer
.Where(di => di.IsRoot == false)
.OrderByDescending(di => di.Created)
.ToList();
    var auditEntry = item.AuditTrail.OrderByDescending(ae => ae.Created);
}
@if ((await _authorizationService.AuthorizeAsync(User, template, new List<IAuthorizationRequirement>() { TemplateOperations.Read })).Succeeded)
{
    <div class="container">
        <div class="card">
            <div class="card-header">
                <h2 class="item-heading">@Html.DisplayFor(model => rootDataItem.Name, rootDataItem.Name.GetType().ToString()) @item.UserEmail</h2>
                @if ((await _authorizationService.AuthorizeAsync(User, template, new List<IAuthorizationRequirement>() { TemplateOperations.Update })).Succeeded)
                {
                    <div class="float-right">
                        <a class="btn btn-labeled btn-primary pull-right" href="@string.Format("edit/{0}", item.Id)">  @Localizer.General["Edit"]</a>
                    </div>
                }
            </div>
            <form id="submissionDetailsForm_@suffix" method="post" action="@formPostUrl">
                <input data-val="true" data-val-required="The Function field is required."
                       id="entityId" name="entityId" type="hidden"
                       value="@item.Id">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <span class="alert alert-info">
                                    @currentStatus
                                </span>
                            </div>
                        </div>
                        <div class="col-sm-8">
                            <div class="form-group">
                                @*<label>@Localizer.General["Actions"]</label>*@
                                <div>
                                    @foreach (var postAction in allPostActions)
                                    {
                                        if ((await _authorizationService.AuthorizeAsync(User, template, new List<IAuthorizationRequirement>() { TemplateOperations.ChangeState }))
                                        .Succeeded)
                                        {
                                            var postActionData = postAction.StateMappings.Where(sm => sm.Current == item.StatusId).FirstOrDefault();
                                            var buttonLable = postActionData.ButtonLabel;
                                            var childFormId = _workflowService.GetChildFormId(template, postAction.Id);

                                            <a class="btn btn-labeled btn-primary pull-right" href="@string.Format("../entity/{0}/addchild/{1}/ButtonId/{2}", Model.Item.Id, @childFormId, @postActionData.Id)">  @Localizer.General[@postActionData.ButtonLabel]</a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="submission-form-block">
                        @Html.DisplayFor(model => rootDataItem, rootDataItem.GetType().ToString())
                    </div>
                    <div class="card">
                        <div class="card-header">
                            <span class="title">@Localizer.General["History"]</span>
                        </div>
                        <div class="card-body">
                            @{
                                foreach (var associateItem in associatedItems)
                                {
                                    <div class="card">
                                        <div class="row">
                                            @Html.DisplayFor(model => associateItem, associateItem.GetType().ToString())
                                        </div>
                                    </div>
                                }
                            }

                        </div>
                    </div>
                    
                </div>
            </form>
            <div id="item-details-result-message_@suffix"></div>
        </div>
    </div>
}
else
{
    <div class="alert alert-danger">Authorization failed.</div>
}


