@page "/items/{id:Guid}"
@model Catfish.Pages.ItemDetailsModel
@using Catfish.Core.Authorization.Requirements;
@using Microsoft.AspNetCore.Authorization;

@inject Piranha.Manager.ManagerLocalizer Localizer
@inject Catfish.Services.ISubmissionService _submissionService;
@inject Catfish.Core.Services.IWorkflowService _workflowService;
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService _authorizationService;
@inject Catfish.Services.IEntityTemplateService _entityTemplateService;
@{
    var item = Model.Item;

    var rootDataItem = item.GetRootDataItem(false);

    var currentStatus = _submissionService.GetStatus(item.StatusId).Status;
    var template = _entityTemplateService.GetTemplate(item.TemplateId);
    var allPostActions = _workflowService.GetAllChangeStatePostActions(template, item.StatusId.Value);
}

@*Specify the status of the submission, followed by the last updated date*@

@*Display the content of the main submission (i.e. the data-item with is-root=true) *@


@*
    Display the contents of all associated data items, which are identified by is-rro=false.

*@
@{
var associatedItems = item.DataContainer
.Where(di => di.IsRoot = false)
.OrderByDescending(di => di.Created)
.ToList();
}
@if ((await _authorizationService.AuthorizeAsync(User, template, new List<IAuthorizationRequirement>() { TemplateOperations.Read }))
.Succeeded)
{
    <div class="container">
        <div class="card">
            <div class="card-header">
                <h2 class="item-heading">@Html.DisplayFor(model => rootDataItem.Name, rootDataItem.Name.GetType().ToString()) @item.UserEmail</h2>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label>@Localizer.General["Status"]</label>
                            <div class="alert alert-info">
                                <span>@currentStatus</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label>@Localizer.General["Actions"]</label>

                        </div>
                    </div>
                </div>
                <div class="submission-form-block">
                    @Html.DisplayFor(model => rootDataItem, rootDataItem.GetType().ToString())
                </div>
            </div>

        </div>
    </div>



    @*<div class="container">
            <h2 class="item-heading">@Html.DisplayFor(model => rootDataItem.Name, rootDataItem.Name.GetType().ToString())</h2>
            <div class="well form-horizontal">
                <div class="alert alert-info">
                    <span>Status :</span>
                    <span>@currentStatus</span>
                </div>
            </div>
            <div class="submission-form-block">
                @Html.DisplayFor(model => rootDataItem, rootDataItem.GetType().ToString())
            </div>
        </div>*@
    @*Display each associated item in a separate element like a bootstrap panel.*@
}
