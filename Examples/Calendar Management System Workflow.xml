<entity id="696a1fc2-929a-4d82-898b-0eeac587cf30"
        created="2020-04-27T17:54:01.3918235-06:00"
        model-type="Catfish.Core.Models.Item, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
		state-id="40249fb4-9f49-4055-abee-d321735203c8"
		template-id=""
		>
	<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<metadata-sets>
		<metadata-set model-type="Catfish.Core.Models.Contents.MetadataSet, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  id="cc252561-b957-4141-970b-fdb101a96ed2">

			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
				<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
              xml:lang="en">Workflow</text>
			</name>
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
				<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
              xml:lang="en">This metadata set defines the parameters required by the workflow.</text>
			</description>
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Reviewer Emails</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">List the email addresses of all reviewers.</text>
					</description>
					<values>
						<value order="0" model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
							<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
						  xml:lang="en">reviewer1@ualberta.ca</text>
						</value>						
						<value order="1" model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
							<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
						  xml:lang="en">reviewer2@ualberta.ca</text>
						</value>						
						<value order="2" model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
							<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
						  xml:lang="en">reviewer2@ualberta.ca</text>
						</value>						
					</values>
				</field>

				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="22176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Central Admin</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">List the email addresses of all central administrators of this package.</text>
					</description>
					<values>
						<value model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
							<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
						  xml:lang="en">centraladmin@ualberta.ca</text>
						</value>						
					</values>
				</field>


				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="224f20b8-5152-499d-a872-6b1a04499e34">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Description</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Description of the resourse.</text>
					</description>
					<values />
				</field>
			</fields>
		</metadata-set>
	</metadata-sets>
	<data-container>
		<data-item id="71d30fb4-9f49-4055-abee-d321735203c8"  type="Catfish.Core.Models.Contents.Form, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Course Name</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Name of the cource.</text>
					</description>
					<values />
				</field>
			</fields>
		</data-item>
		<data-item id="34d30fb4-9f49-4055-abee-d321735203c8"  type="Catfish.Core.Models.Contents.Form, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Course Name</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Name of the cource.</text>
					</description>
					<values />
				</field>
			</fields>
		</data-item>
		<data-item id="56d30fb4-9f49-4055-abee-d321735203c8"  type="Catfish.Core.Models.Contents.Form, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Course Name</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Name of the cource.</text>
					</description>
					<values />
				</field>
			</fields>
		</data-item>
		<data-item id="67d30fb4-9f49-4055-abee-d321735203c8"  type="Catfish.Core.Models.Contents.Form, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Course Name</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Name of the cource.</text>
					</description>
					<values />
				</field>
			</fields>
		</data-item>
		
	</data-container>
	<audit-trail>
		<audit-entry timestamp="2020-07-07T12:45 PM" />
	</audit-trail>
	<workflow id="86eb0fb4-9f49-4055-abee-d321735203c8">
		<states>
			<state id="40249fb4-9f49-4055-abee-d321735203c8">Saved</state>
		</states>
		<roles>
			<role>CentralAdmin</role>
		</roles>
		<users>
			<user email="admin@example.com">
				<roles>
					<role>CentralAdmin</role>
				</roles>
			</user>
		</users>
		<triggers>
			<trigger function="SendEmail" id="bbcc2561-b957-4141-970b-fdb101a96ed2"> <!-- Document submission notifican email sent to the central admin -->
				<to metadata-set-id="cae52561-b957-4141-970b-fdb101a96ed2" field-id="0e176ef5-a235-470f-bf95-6c8aa99921b2" />
				<email-template metadata-set-id="bbd52561-b957-4141-970b-fdb101a96ed2" field-id="ab176ef5-a235-470f-bf95-6c8aa99921b2" />
			</trigger>

			<trigger function="SendEmail" id="bbcc2561-b957-4141-970b-fdb101a96eee"> <!-- Document submission confirmation email sent to the document owner -->
				<to>Owner</to>
				<email-template metadata-set-id="cdd52561-b957-4141-970b-fdb101a96ed2" field-id="ef176ef5-a235-470f-bf95-6c8aa99921b2" />
			</trigger>

			<trigger function="SendEmail" id="ed252561-b957-4141-970b-fdb101a96ed2">
				<!-- Email address(s) of the reviewers of this package -->
				<to metadata-set-id="cc252561-b957-4141-970b-fdb101a96ed2" field-id="0e176ef5-a235-470f-bf95-6c8aa99921b2" />
			</trigger>				
			<trigger function="AddAuditEntry" type="ReviewRequest" id="ed252561-b957-4141-970b-fdb101a96cc2"/>
		</triggers>
		<actions>
			<get-action link-label="Start Submission" function="Create" group="Home"> <!-- Starting a new submission by DeptAdmin -->
				<params>
					<param template-id="88d30fb4-9f49-4055-abee-d321735203c8" /> <!-- main application template ID-->
				</params>
				<post-actions>
					<post-action button-label="Save"   function="Save">
						<state-mappings>
							<mapping current="*"  next="Saved"/>
						</state-mappings>
					</post-action>
					<post-action button-label="Submit" function="Save">
						<state-mappings>
							<mapping current="*"  next="Submitted"/>
						</state-mappings>
						<pop-up title="WARNING: Submitting Document" message="Once submitted, you cannot update the document.">
							<button text="Yes, submit" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<trigger-refs>
							<trigger-ref order="0" ref-id="bbcc2561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="bbcc2561-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</trigger-refs>						
					</post-action>
				</post-actions>
				<authorizations>
					<role>DeptAdmin</role>
				</authorizations>
			</get-action>

			<get-action link-label="Edit Submission"  function="Edit" group="Details"> <!-- Editing a submission who started a new application -->
				<params>
					<!-- main application document ID to be passed programatically -->
				</params>
				<post-actions>
					<post-action button-label="Save"  function="Save" >
						<state-mappings>
							<mapping current="Saved"  next="Saved"/>
						</state-mappings>
					</post-action>
					<post-action button-label="Submit" function="Save" >
						<state-mappings>
							<mapping current="Saved"  next="Submitted"/>
						</state-mappings>
						<pop-up title="WARNING: Submitting Document" message="Once submitted, you cannot update the document.">
							<button text="Yes, submit" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<trigger-refs>
							<trigger-ref order="0" ref-id="bbcc2561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="bbcc2561-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</trigger-refs>						
					</post-action>
				</post-actions>
				<valid-states>
					<state>Saved</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</get-action>
			
			<get-action link-label="Delete Submission"  function="Delete">
				<params>
					<!-- main application document ID to be passed programatically -->
				</params>
				<post-actions>
					<post-action button-label="Delete"   function="Save" >
						<state-mappings>
							<mapping current="Saved"  next="Deleted"/>
						</state-mappings>
						<pop-up title="WARNING: Delete" message="Deleting the submission. Please confirm.">
							<button text="Yes, delete" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
					</post-action>
				</post-actions>
				<valid-states>
					<state>Saved</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</get-action>
			
			<get-action link-label="Purge Submission"  function="Purge"><!-- Permanently delete a submission who started a new application -->
				<params>
					<!-- main application document ID to be passed programatically -->
				</params>
				<post-actions>
					<post-action button-label="Purge"   function="Purge">
						<pop-up title="WARNING: Deleting Permanently" message="When purged, the document cannot be recovered. Please confirm">
							<button text="Yes, purge" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
					</post-action>
				</post-actions>
				<valid-states>
					<state>Deleted</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</get-action>
			
			<!-- TODO: Merge with the previous Edit Submission block -->
			<get-action link-label="Edit Submission" function="Edit"> <!-- Editing a revision by the Dept Admin -->
				<params>
					<!-- main application document ID to be passed programatically -->
				</params>
				<post-actions>
					<post-action button-label="Save"   function="Save">
						<state-mappings>
							<mapping current="DeanOfficeRevision"  next="SavedDeanOfficeRevision"/>
							<mapping current="AACRevision"  next="SavedAACRevision"/>
							<mapping current="AECRevision"  next="SavedAECRevision"/>
							<mapping current="AFCRevision"  next="SavedAFCRevision"/>
							<mapping current="GFCRevision"  next="SavedGFCRevision"/>
						</state-mappings>
					</post-action>
					<post-action button-label="Submit"  function="Save" >
						<state-mappings>
							<mapping current="DeanOfficeRevision"  next="DeanOfficeRevisionCompleted"/>
							<mapping current="AACRevision"  next="AACRevisionCompleted"/>
							<mapping current="AECRevision"  next="AECRevisionCompleted"/>
							<mapping current="AFCRevision"  next="AFCRevisionCompleted"/>
							<mapping current="GFCRevision"  next="GFCRevisionCompleted"/>
							<mapping current="SavedDeanOfficeRevision"  next="DeanOfficeRevisionCompleted"/>
							<mapping current="SavedAACRevision"  next="AACRevisionCompleted"/>
							<mapping current="SavedAECRevision"  next="AECRevisionCompleted"/>
							<mapping current="SavedAFCRevision"  next="AFCRevisionCompleted"/>
							<mapping current="SavedGFCRevision"  next="GFCRevisionCompleted"/>
						</state-mappings>
						<pop-up title="WARNING: Submitting Document" message="Once submitted, you cannot update the document.">
							<button text="Yes, submit" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<trigger-refs>
							<trigger-ref order="0" ref-id="bv67j561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="9giu4jk9-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</trigger-refs>	
					</post-action> <!-- add the pop-up -->
				</post-actions>
				<valid-states>
					<state>DeanOfficeRevision</state>
					<state>SavedDeanOfficeRevision</state>
					<state>AACRevision</state>
					<state>SavedAACRevision</state>
					<state>AECRevision</state>
					<state>SavedAECRevision</state>
					<state>AFCRevision</state>
					<state>SavedAFCRevision</state>
					<state>GFCRevision</state>
					<state>SavedGFCRevision</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</get-action>
			
			
			<get-action link-label="Send for Revision"  function="ChangeState"> <!-- Sending a document back to the owner for revisions -->
				<params>
					<!-- main application document ID to be passed programatically -->
					<param template-id="67d30fb4-9f49-4055-abee-d321735203c8" /> <!-- comment form Template -->
				</params>
				<post-actions>
					<post-action function="Comment">
						<state-mappings>
							<mapping current="Submitted"  next="DeanOfficeRevision" button-label="Send for Revision"/>
							<mapping current="WithAAC"  next="AACRevision" button-label="Send for Revision"/>
							<mapping current="WithAEC"  next="AECRevision" button-label="Send for Revision"/>
							<mapping current="WithAFC"  next="AFCRevision" button-label="Send for Revision"/>
							<mapping current="WithGFC"  next="GFCRevision" button-label="Send for Revision"/>
							<mapping current="DeanOfficeRevisionCompleted"  next="DeanOfficeRevision" button-label="Send for Revision"/>
							<mapping current="AACRevisionCompleted"  next="AACRevision" button-label="Send for Revision"/>
							<mapping current="AECRevisionCompleted"  next="AECRevision" button-label="Send for Revision"/>
							<mapping current="AFCRevisionCompleted"  next="AFCRevision" button-label="Send for Revision"/>
							<mapping current="GFCRevisionCompleted"  next="GFCRevision" button-label="Send for Revision"/>
						</state-mappings>					
						<pop-up title="WARNING: Revision Document" message="Do you really want to revise this document?.">
							<button text="Yes" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<trigger-refs>
							<trigger-ref order="0" ref-id="jh8c2561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the document owner, requesting a revision -->
						</trigger-refs>						
					</post-action>
				</post-actions>
				<valid-states>
					<state>Submitted</state>
					<state>WithAAC</state>
					<state>WithAEC</state>
					<state>WithAFC</state>
					<state>WithGFC</state>
					<state>DeanOfficeRevisionCompleted</state>
					<state>AACRevisionCompleted</state>
					<state>AECRevisionCompleted</state>
					<state>AFCRevisionCompleted</state>
					<state>GFCRevisionCompleted</state>
				</valid-states>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</get-action>
			
			
			<!-- 
				Changing the state by the central admin without requiring to send an email notifications.
				Therefore, activities such as sending for revisions, moving to calendar, etc. are excluded here. They are
				defined in a separate sections.
			-->
			<get-action link-label="Update Document State" function="ChangeState">
				<params>
					<!-- main application document ID to be passed programatically -->
					<param template-id="9ot60fb4-9f49-4055-abee-d321735203c8" /> <!-- comment form -->
				</params>
				<post-actions>
					<post-action function="Comment">
						<state-mappings>
							
						
							<mapping current="Submitted"  next="WithAAC" button-label="With AAC"/>
							<mapping current="DeanOfficeRevisionCompleted"  next="WithAAC" button-label="With AAC"/>
							<mapping current="WithAAC"  next="AACApproved" button-label="AAC Approved"/> 

							<mapping current="AACApproved"  next="WithAEC" button-label="With AEC"/>
							<mapping current="WithAEC"  next="AECApproved" button-label="AEC Approved"/>


							<mapping current="AACRevisionCompleted"  next="WithAAC" button-label="With AAC"/>
							<mapping current="AACRevisionCompleted"  next="WithAEC" button-label="With AEC"/>

							<mapping current="AECRevisionCompleted"  next="WithAA" button-label="With AA"/>
							<mapping current="AECRevisionCompleted"  next="WithAEC" button-label="With AEC"/>

							
							<!-- The following set of mappings are applied if this workflow is for courses and minor program changes. If this workflow is for a major 
							     a major program change, we should comment it -->
							<mapping current="AECApproved"  next="WithAFC" button-label="With AFC"/>
							<mapping current="WithAFC"  next="AFCApproved" button-label="AFC Approved"/>
							<mapping current="AECRevisionCompleted"  next="WithAFC" button-label="With AFC"/>
							<mapping current="AFCRevisionCompleted"  next="WithAFC" button-label="With AFC"/>
							<mapping current="AFCRevisionCompleted"  next="WithAEC" button-label="With AEC"/>
							<mapping current="AFCRevisionCompleted"  next="WithAAC" button-label="With AAC"/>
							<mapping current="AFCRevisionCompleted"  next="AFCApproved" button-label="AFC Approved"/>
							
							
							<!-- The following set of mappings are applied if this workflow is for major program changes. For course changes and minor program changes, we should comment it -->
							<mapping current="AECApproved"  next="WithGFC" button-label="With GFC"/>
							<mapping current="WithGFC"  next="GFCApproved" button-label="GFC Approved"/>
							<mapping current="WithGFC"  next="WithAAC" button-label="With AAC"/>
							<mapping current="WithGFC"  next="WithAEC" button-label="With AEC"/>
							<mapping current="WithGFC"  next="WithAFC" button-label="With AFC"/>
							<mapping current="AECRevisionCompleted"  next="WithGFC" button-label="With GFC"/>								
						</state-mappings>
					
						<pop-up title="WARNING: Change State" message="Do you really want to change the document state?">
							<button text="Yes" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
					</post-action>
				</post-actions>
				<valid-states>
					<state>Submitted</state>
					<state>DeanOfficeRevisionCompleted</state>
					<state>AACRevisionCompleted</state>
					<state>AECRevisionCompleted</state>
					<state>AFCRevisionCompleted</state>
					<state>WithAAC</state>
					<state>WithAEC</state>
					<state>WithAFC</state>
					<state>WithGFC</state>
					<state>AACApproved</state>
					<state>AECApproved</state>
					<state>AFCApproved</state>
				</valid-states>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</get-action>
			
			<get-action link-label="Move to Draft Calendar" function="ChangeState"><!-- Sending a document to the reviewer(s) for review -->
				<params>
					<!-- main application document ID to be passed programatically -->
					<param template-id="99yt0fb4-9f49-4055-abee-d321735203c8" /> <!-- comment form -->
				</params>
				<post-actions>
					<post-action button-label="Correct" function="Comment" >
						<state-mappings>
							<mapping current="GFCApproved"  next="MoveToDraftCorrect"/>
							<mapping current="MoveToDraftError"  next="MoveToDraftCorrect"/>
						</state-mappings>
						<pop-up title="WARNING: In the Draft Calendar -  Correct" message="Do you really want to change the document state?.">
							<button text="Yes" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<trigger-refs>
							<trigger-ref order="0" ref-id="p0igj561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="76rd4jk9-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</trigger-refs>	
					</post-action>
					<post-action button-label="With Error" function="Comment" >
						<state-mappings>
							<mapping current="GFCApproved"  next="MoveToDraftError"/>
						</state-mappings>
						<pop-up title="WARNING: In the Draft Calendar -  With Error" message="Do you really want to change the document state?.">
							<button text="Yes" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<trigger-refs>
							<trigger-ref order="0" ref-id="hg67j561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="9j5u4jk9-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</trigger-refs>	
					</post-action>
				</post-actions>
				<valid-states>
					<state>GFCApproved</state>
					<state>MoveToDraftError</state>
				</valid-states>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</get-action>

<!-- Template workflow need to be complete -->


			
			<action name="StartTemplate"><!--create a new template-->
				<params>
					<param template-id="56d30fb4-9f49-4055-abee-d321735203c8" /> <!-- Template Form ID -->
				</params>
				
				<post-actions>
					<action name="SaveTemplate" function="Save" new-state="Saved"></action>
					<action name="PublishTemplate" function="Save" new-state="Publish"></action>
				</post-actions>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</action>
			
			<action name="EditTemplate"><!--Edit template-->
				<params>
					<!-- template application number need to pass programatically -->
				</params>
				<post-actions>
					<action name="SaveTemplate" function="Save" new-state="Saved"></action>
					<action name="PublishTemplate" function="Save" new-state="Publish"></action>
					<action name="DeleteTemplate" function="Save" new-state="Deleted"></action>
				</post-actions>
				<valid-states>
					<state>Saved</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</action>
			
			<action name="PurgeTemplate"><!--Permanently delete a template-->
				<params>
					<!-- template application number need to pass programatically -->
				</params>
				<post-actions>
					<action name="PurgeTemplate" function="Save" new-state="Purged"></action>
				</post-actions>
				<valid-states>
					<state>Deleted</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</action>
			
			<action name="ManageTemplate"><!--publish/unpublish template-->
				<params>
					<!-- template application number need to pass programatically -->
				</params>
				<post-actions>
					<action name="Unpublish" function="Save" new-state="Unpublish"></action>
					<action name="Publish" function="Save" new-state="Publish"></action>
				</post-actions>
				<valid-states>
					<state>Publish</state>
					<state>Unpublishublish</state>
				</valid-states>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</action>
		</actions>
	</workflow>
	

</entity>