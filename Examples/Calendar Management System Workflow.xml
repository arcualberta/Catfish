<entity id="696a1fc2-929a-4d82-898b-0eeac587cf30"
        created="2020-04-27T17:54:01.3918235-06:00"
        model-type="Catfish.Core.Models.Item, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
		state-id="40249fb4-9f49-4055-abee-d321735203c8"
		template-id=""
		>
	<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<metadata-sets>
		<metadata-set model-type="Catfish.Core.Models.Contents.MetadataSet, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  id="cc252561-b957-4141-970b-fdb101a96ed2">

			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
				<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
              xml:lang="en">Workflow</text>
			</name>
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
				<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
              xml:lang="en">This metadata set defines the parameters required by the workflow.</text>
			</description>
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Reviewer Emails</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">List the email addresses of all reviewers.</text>
					</description>
					<values>
						<value order="0" model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
							<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
						  xml:lang="en">reviewer1@ualberta.ca</text>
						</value>						
						<value order="1" model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
							<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
						  xml:lang="en">reviewer2@ualberta.ca</text>
						</value>						
						<value order="2" model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
							<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
						  xml:lang="en">reviewer2@ualberta.ca</text>
						</value>						
					</values>
				</field>

				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="22176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Central Admin</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">List the email addresses of all central administrators of this package.</text>
					</description>
					<values>
						<value model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
							<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
						  xml:lang="en">centraladmin@ualberta.ca</text>
						</value>						
					</values>
				</field>


				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="224f20b8-5152-499d-a872-6b1a04499e34">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Description</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Description of the resourse.</text>
					</description>
					<values />
				</field>
			</fields>
		</metadata-set>
	</metadata-sets>
	<data-container>
		<data-item id="71d30fb4-9f49-4055-abee-d321735203c8"  type="Catfish.Core.Models.Contents.Form, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Course Name</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Name of the cource.</text>
					</description>
					<values />
				</field>
			</fields>
		</data-item>
		<data-item id="34d30fb4-9f49-4055-abee-d321735203c8"  type="Catfish.Core.Models.Contents.Form, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Course Name</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Name of the cource.</text>
					</description>
					<values />
				</field>
			</fields>
		</data-item>
		<data-item id="56d30fb4-9f49-4055-abee-d321735203c8"  type="Catfish.Core.Models.Contents.Form, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Course Name</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Name of the cource.</text>
					</description>
					<values />
				</field>
			</fields>
		</data-item>
		<data-item id="67d30fb4-9f49-4055-abee-d321735203c8"  type="Catfish.Core.Models.Contents.Form, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
			<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			<fields>
				<field model-type="Catfish.Core.Models.Contents.Fields.TextField, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
               id="0e176ef5-a235-470f-bf95-6c8aa99921b2">
					<name model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Course Name</text>
					</name>
					<description model-type="Catfish.Core.Models.Contents.MultilingualText, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
						<text model-type="Catfish.Core.Models.Contents.Text, Catfish.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                  xml:lang="en">Name of the cource.</text>
					</description>
					<values />
				</field>
			</fields>
		</data-item>
		
	</data-container>
	<audit-trail>
		<audit-entry timestamp="2020-07-07T12:45 PM" />
	</audit-trail>
	<workflow id="86eb0fb4-9f49-4055-abee-d321735203c8">
		<states>
			<state id="40249fb4-9f49-4055-abee-d321735203c8">Saved</state>
		</states>
		<triggers>
			<trigger function="SendEmail" id="bbcc2561-b957-4141-970b-fdb101a96ed2"> <!-- Document submission notifican email sent to the central admin -->
				<to metadata-set-id="cae52561-b957-4141-970b-fdb101a96ed2" field-id="0e176ef5-a235-470f-bf95-6c8aa99921b2" />
				<email-template metadata-set-id="bbd52561-b957-4141-970b-fdb101a96ed2" field-id="ab176ef5-a235-470f-bf95-6c8aa99921b2" />
			</trigger>

			<trigger function="SendEmail" id="bbcc2561-b957-4141-970b-fdb101a96eee"> <!-- Document submission confirmation email sent to the document owner -->
				<to>Owner</to>
				<email-template metadata-set-id="cdd52561-b957-4141-970b-fdb101a96ed2" field-id="ef176ef5-a235-470f-bf95-6c8aa99921b2" />
			</trigger>

			<trigger function="SendEmail" id="ed252561-b957-4141-970b-fdb101a96ed2">
				<!-- Email address(s) of the reviewers of this package -->
				<to metadata-set-id="cc252561-b957-4141-970b-fdb101a96ed2" field-id="0e176ef5-a235-470f-bf95-6c8aa99921b2" />
			</trigger>				
			<trigger function="AddAuditEntry" type="ReviewRequest" id="ed252561-b957-4141-970b-fdb101a96cc2"/>
		</triggers>
		<actions>
			<action link-label="Start Submission" function="Create" group="Home"> <!-- Starting a new submission by DeptAdmin -->
				<params>
					<template ref-id="88d30fb4-9f49-4055-abee-d321735203c8" /> <!-- main application template ID-->
				</params>
				<post-actions>
					<action button-label="Save"   function="Save">
						<state-mappings>
							<map current="*"  next="Saved"/>
						</state-mappings>
					</action>
					<action button-label="Submit" function="Save">
						<new-state>
							<map current="*"  next="Submitted"/>
						</new-state>
						<pop-up title="WARNING: Submitting Document" mesage="Once submitted, you cannot update the document.">
							<button text="Yes, submit" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<triggers>
							<trigger-ref order="0" ref-id="bbcc2561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="bbcc2561-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</triggers>						
					</action>
				</post-actions>
				<authorizations>
					<role>DeptAdmin</role>
				</authorizations>
			</action>

			<action link-label="Edit Submission"  function="Edit" group="Details"> <!-- Editing a submission who started a new application -->
				<params>
					<!-- main application document ID to be passed programatically -->
				</params>
				<post-actions>
					<action button-label="Save"  function="Save" >
						<state-mappings>
							<map current="Saved"  next="Saved"/>
						</state-mappings>
					</action>
					<action button-label="Submit" function="Save" >
						<state-mappings>
							<map current="Saved"  next="Submitted"/>
						</state-mappings>
						<pop-up title="WARNING: Submitting Document" mesage="Once submitted, you cannot update the document.">
							<button text="Yes, submit" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<triggers>
							<trigger-ref order="0" ref-id="bbcc2561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="bbcc2561-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</triggers>						
					</action>
				</post-actions>
				<valid-states>
					<state>Saved</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</action>
			
			<action link-label="Delete Submission"  function="Delete">
				<params>
					<!-- main application document ID to be passed programatically -->
				</params>
				<post-actions>
					<action button-label="Delete"   function="Save" >
						<state-mappings>
							<map current="Saved"  next="Deleted"/>
						</state-mappings>
						<pop-up title="WARNING: Delete" mesage="Deleting the submission. Please confirm.">
							<button text="Yes, delete" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
					</action>
				</post-actions>
				<valid-states>
					<state>Saved</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</action>
			
			<get-action link-label="Purge Submission"  function="Purge"><!-- Permanently delete a submission who started a new application -->
				<params>
					<!-- main application document ID to be passed programatically -->
				</params>
				<post-actions>
					<action button-label="Purge"   function="Purge">
						<pop-up title="WARNING: Deleting Permanently" mesage="When purged, the document cannot be recovered. Please confirm">
							<button text="Yes, purge" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
					</action>
				</post-actions>
				<valid-states>
					<state>Deleted</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</action>
			
			<!-- TODO: Merge with the previous Edit Submission block -->
			<action link-label="Edit Submission" function="Edit"> <!-- Editing a revision by the Dept Admin -->
				<params>
					<!-- main application document ID to be passed programatically -->
				</params>
				<post-actions>
					<post-action button-label="Save"   function="Save">
						<state-mappings>
							<map current="DeanOfficeRevision"  next="SavedDeanOfficeRevision"/>
							<map current="AACRevision"  next="SavedAACRevision"/>
							<map current="AECRevision"  next="SavedAECRevision"/>
							<map current="AFCRevision"  next="SavedAFCRevision"/>
							<map current="GFCRevision"  next="SavedGFCRevision"/>
						</state-mappings>
					</action>
					<action button-label="Submit"  function="Save" >
						<state-mappings>
							<map current="DeanOfficeRevision"  next="DeanOfficeRevisionCompleted"/>
							<map current="AACRevision"  next="AACRevisionCompleted"/>
							<map current="AECRevision"  next="AECRevisionCompleted"/>
							<map current="AFCRevision"  next="AFCRevisionCompleted"/>
							<map current="GFCRevision"  next="GFCRevisionCompleted"/>
							<map current="SavedDeanOfficeRevision"  next="DeanOfficeRevisionCompleted"/>
							<map current="SavedAACRevision"  next="AACRevisionCompleted"/>
							<map current="SavedAECRevision"  next="AECRevisionCompleted"/>
							<map current="SavedAFCRevision"  next="AFCRevisionCompleted"/>
							<map current="SavedGFCRevision"  next="GFCRevisionCompleted"/>
						</state-mappings>
						<pop-up title="WARNING: Submitting Document" mesage="Once submitted, you cannot update the document.">
							<button text="Yes, submit" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<triggers>
							<trigger-ref order="0" ref-id="bv67j561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="9giu4jk9-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</triggers>	
					</action> <!-- add the pop-up -->
				</post-actions>
				<valid-states>
					<state>DeanOfficeRevision</state>
					<state>SavedDeanOfficeRevision</state>
					<state>AACRevision</state>
					<state>SavedAACRevision</state>
					<state>AECRevision</state>
					<state>SavedAECRevision</state>
					<state>AFCRevision</state>
					<state>SavedAFCRevision</state>
					<state>GFCRevision</state>
					<state>SavedGFCRevision</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</action>
			
			
			<action link-label="Send for Revision"  function="ChangeState"> <!-- Sending a document back to the owner for revisions -->
				<params>
					<!-- main application document ID to be passed programatically -->
					<document ref-id="67d30fb4-9f49-4055-abee-d321735203c8" /> <!-- comment form Template -->
				</params>
				<post-actions>
					<action function="Comment">
						<state-mappings>
							<map current="Submitted"  next="DeanOfficeRevision" button-label="Send for Revision"/>
							<map current="WithAAC"  next="AACRevision" button-label="Send for Revision"/>
							<map current="WithAEC"  next="AECRevision" button-label="Send for Revision"/>
							<map current="WithAFC"  next="AFCRevision" button-label="Send for Revision"/>
							<map current="WithGFC"  next="GFCRevision" button-label="Send for Revision"/>
							<map current="DeanOfficeRevisionCompleted"  next="DeanOfficeRevision" button-label="Send for Revision"/>
							<map current="AACRevisionCompleted"  next="AACRevision" button-label="Send for Revision"/>
							<map current="AECRevisionCompleted"  next="AECRevision" button-label="Send for Revision"/>
							<map current="AFCRevisionCompleted"  next="AFCRevision" button-label="Send for Revision"/>
							<map current="GFCRevisionCompleted"  next="GFCRevision" button-label="Send for Revision"/>
						</state-mappings>					
						<pop-up title="WARNING: Revision Document" mesage="Do you really want to revise this document?.">
							<button text="Yes" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<triggers>
							<trigger-ref order="0" ref-id="jh8c2561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the document owner, requesting a revision -->
						</triggers>						
					</action>
				</post-actions>
				<valid-states>
					<state>Submitted</state>
					<state>WithAAC</state>
					<state>WithAEC</state>
					<state>WithAFC</state>
					<state>WithGFC</state>
					<state>DeanOfficeRevisionCompleted</state>
					<state>AACRevisionCompleted</state>
					<state>AECRevisionCompleted</state>
					<state>AFCRevisionCompleted</state>
					<state>GFCRevisionCompleted</state>
				</valid-states>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</action>
			
			
			<!-- 
				Changing the state by the central admin without requiring to send an email notifications.
				Therefore, activities such as sending for revisions, moving to calendar, etc. are excluded here. They are
				defined in a separate sections.
			-->
			<action link-label="Update Document State" function="ChangeState">
				<params>
					<!-- main application document ID to be passed programatically -->
					<document ref-id="9ot60fb4-9f49-4055-abee-d321735203c8" /> <!-- comment form -->
				</params>
				<post-actions>
					<action function="Comment">
						<state-mappings>
							
						
							<map current="Submitted"  next="WithAAC" button-label="With AAC"/>
							<map current="DeanOfficeRevisionCompleted"  next="WithAAC" button-label="With AAC"/>
							<map current="WithAAC"  next="AACApproved" button-label="AAC Approved"/> 

							<map current="AACApproved"  next="WithAEC" button-label="With AEC"/>
							<map current="WithAEC"  next="AECApproved" button-label="AEC Approved"/>


							<map current="AACRevisionCompleted"  next="WithAAC" button-label="With AAC"/>
							<map current="AACRevisionCompleted"  next="WithAEC" button-label="With AEC"/>

							<map current="AECRevisionCompleted"  next="WithAA" button-label="With AA"/>
							<map current="AECRevisionCompleted"  next="WithAEC" button-label="With AEC"/>

							
							<!-- The following set of mappings are applied if this workflow is for courses and minor program changes. If this workflow is for a major 
							     a major program change, we should comment it -->
							<map current="AECApproved"  next="WithAFC" button-label="With AFC"/>
							<map current="WithAFC"  next="AFCApproved" button-label="AFC Approved"/>
							<map current="AECRevisionCompleted"  next="WithAFC" button-label="With AFC"/>
							<map current="AFCRevisionCompleted"  next="WithAFC" button-label="With AFC"/>
							<map current="AFCRevisionCompleted"  next="WithAEC" button-label="With AEC"/>
							<map current="AFCRevisionCompleted"  next="WithAAC" button-label="With AAC"/>
							<map current="AFCRevisionCompleted"  next="AFCApproved" button-label="AFC Approved"/>
							
							
							<!-- The following set of mappings are applied if this workflow is for major program changes. For course changes and minor program changes, we should comment it -->
							<map current="AECApproved"  next="WithGFC" button-label="With GFC"/>
							<map current="WithGFC"  next="GFCApproved" button-label="GFC Approved"/>
							<map current="WithGFC"  next="WithAAC" button-label="With AAC"/>
							<map current="WithGFC"  next="WithAEC" button-label="With AEC"/>
							<map current="WithGFC"  next="WithAFC" button-label="With AFC"/>
							<map current="AECRevisionCompleted"  next="WithGFC" button-label="With GFC"/>								
						</state-mappings>
					
						<pop-up title="WARNING: Change State" mesage="Do you really want to change the document state?">
							<button text="Yes" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
					</action>
				</post-actions>
				<valid-states>
					<state>Submitted</state>
					<state>DeanOfficeRevisionCompleted</state>
					<state>AACRevisionCompleted</state>
					<state>AECRevisionCompleted</state>
					<state>AFCRevisionCompleted</state>
					<state>WithAAC</state>
					<state>WithAEC</state>
					<state>WithAFC</state>
					<state>WithGFC</state>
					<state>AACApproved</state>
					<state>AECApproved</state>
					<state>AFCApproved</state>
				</valid-states>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</action>
			
			<action link-label="Move to Draft Calendar" function="ChangeState"><!-- Sending a document to the reviewer(s) for review -->
				<params>
					<!-- main application document ID to be passed programatically -->
					<document ref-id="99yt0fb4-9f49-4055-abee-d321735203c8" /> <!-- comment form -->
				</params>
				<post-actions>
					<action button-label="Correct" function="Comment" >
						<state-mappings>
							<map current="GFCApproved"  next="MoveToDraftCorrect"/>
							<map current="MoveToDraftError"  next="MoveToDraftCorrect"/>
						</state-mappings>
						<pop-up title="WARNING: In the Draft Calendar -  Correct" mesage="Do you really want to change the document state?.">
							<button text="Yes" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<triggers>
							<trigger-ref order="0" ref-id="p0igj561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="76rd4jk9-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</triggers>	
					</action>
					<action button-label="With Error" function="Comment" >
						<state-mappings>
							<map current="GFCApproved"  next="MoveToDraftError"/>
						</state-mappings>
						<pop-up title="WARNING: In the Draft Calendar -  With Error" mesage="Do you really want to change the document state?.">
							<button text="Yes" return="true" />
							<button text="Cancel" return="false" />
						</pop-up>
						<triggers>
							<trigger-ref order="0" ref-id="hg67j561-b957-4141-970b-fdb101a96ed2" /> <!-- send email to the central admin(s) -->
							<trigger-ref order="1" ref-id="9j5u4jk9-b957-4141-970b-fdb101a96eee" /> <!-- send email to the document owner -->
						</triggers>	
					</action>
				</post-actions>
				<valid-states>
					<state>GFCApproved</state>
					<state>MoveToDraftError</state>
				</valid-states>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</action>

<!-- Template workflow need to be complete -->


			
			<action name="StartTemplate"><!--create a new template-->
				<params>
					<document ref-id="56d30fb4-9f49-4055-abee-d321735203c8" /> <!-- Template Form ID -->
				</params>
				
				<post-actions>
					<action name="SaveTemplate" function="Save" new-state="Saved"></action>
					<action name="PublishTemplate" function="Save" new-state="Publish"></action>
				</post-actions>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</action>
			
			<action name="EditTemplate"><!--Edit template-->
				<params>
					<!-- template application number need to pass programatically -->
				</params>
				<post-actions>
					<action name="SaveTemplate" function="Save" new-state="Saved"></action>
					<action name="PublishTemplate" function="Save" new-state="Publish"></action>
					<action name="DeleteTemplate" function="Save" new-state="Deleted"></action>
				</post-actions>
				<valid-states>
					<state>Saved</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</action>
			
			<action name="PurgeTemplate"><!--Permanently delete a template-->
				<params>
					<!-- template application number need to pass programatically -->
				</params>
				<post-actions>
					<action name="PurgeTemplate" function="Save" new-state="Purged"></action>
				</post-actions>
				<valid-states>
					<state>Deleted</state>
				</valid-states>
				<authorizations>
					<role>Owner</role>
				</authorizations>
			</action>
			
			<action name="ManageTemplate"><!--publish/unpublish template-->
				<params>
					<!-- template application number need to pass programatically -->
				</params>
				<post-actions>
					<action name="Unpublish" function="Save" new-state="Unpublish"></action>
					<action name="Publish" function="Save" new-state="Publish"></action>
				</post-actions>
				<valid-states>
					<state>Publish</state>
					<state>Unpublishublish</state>
				</valid-states>
				<authorizations>
					<role>CentralAdmin</role>
				</authorizations>
			</action>
		</actions>
	</workflow>
	

</entity>